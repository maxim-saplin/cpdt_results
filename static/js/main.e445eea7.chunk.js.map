{"version":3,"sources":["img/windows.svg","img/macos.svg","img/google-play.svg","img/apk.svg","img/github.svg","img/linux.svg","data/dictionaries.js","translations/ru.js","translations/fr.js","translations/zht.js","translations/zh.js","translations/index.js","translations/en.js","PressableLink.js","ListSelector.js","data/results.js","data/db.js","data/index.js","Search.js","TestResultDetailsItem.js","TestResultDetails.js","TestResult.js","Hint.js","TestResults.js","DownloadLinks.js","AboutEn.js","AboutRu.js","AboutFr.js","AboutZh.js","AboutZht.js","App.js","index.js"],"names":["module","exports","platforms","tests","translations","pageTitle","aboutTitle","downloadTitle","title","subTitle","seqWrite","seqRead","randWrite","randRead","memCopy","seqWrite_s","seqRead_s","randWrite_s","randRead_s","memCopy_s","seqWrite_f","seqRead_f","randWrite_f","randRead_f","memCopy_f","throughput","nothingToShow","Android","macOS","iOS","Windows","all","mbps","gbps","hitEnter","hintDoubleTap","hintSwipe","close","yourDevice","result_SRW","result_RRW","result_MEM","result_SW","result_SR","result_RW","result_RR","localeObj","param","URLSearchParams","window","location","search","get","lang","this","enLocale","locale","toLocaleLowerCase","navigator","language","toLowerCase","includes","ruLocale","ru","frLocale","fr","zhtLocale","zht","zhLocale","zh","Object","keys","forEach","key","shortcutRegex","PressableLink","props","onKeyPress","bind","initShortcut","shortcut","children","match","length","keyPressSubscribed","document","addEventListener","removeEventListener","e","activeElement","HTMLBodyElement","onClick","className","Component","ListSelector","toggle","selectAll","selectedKey","filter","k","push","items","map","p","shortcuts","has","val","Array","isArray","i","itemClick","prevItems","Map","sc","arr","set","size","initShortcuts","updateShortcuts","name","l18n","addShortcut","obj","dictionaries","getTests","mod","data","getPlatforms","console","log","results","addYourDeviceResult","yd","device","id","yourDeviceId","deviceDetail","pop","getResults","platfroms","test","excludeIds","filters","r","hidden","platform","trim","result","condition","sort","a","b","lastResultId","getResultById","idExists","setPercents","maxVal","percent","getLastResultId","db_url","db","init","useTest","fetchVersion","Promise","resolve","fetch","cache","then","response","json","storage","setItem","v","version","fetchDb","JSON","stringify","promise","localStorage","getItem","parse","localDbVersion","initFake","Search","textChanged","moveCursorToEnd","state","extraSpaces","value","blink","showHitn","textInput","React","createRef","enterPressed","target","innerText","searchChanged","setState","charCode","last","el","createRange","setTimeout","selection","getSelection","range","setStart","childNodes","collapse","removeAllRanges","addRange","current","contentEditable","ref","onInput","onFocus","nativeEvent","onBlur","focus","PureComponent","TestResultDetailsItem","selectedTest","testName","unit","TestResultDetails","item","noHighlight","TestResult","itemProp","deviceYear","style","width","closableX","selectedIdRemoved","closableEsc","Hint","TestResults","onKeyUp","handleSingleDblClicks","expandedId","doubleTapHint","clickTimeout","text","singleClick","dblClick","preventDefault","clearTimeout","keyCode","deletableId","selectedPlatforms","selectedResultIds","selectedCount","selectedResults","concat","setTitle","keyboardEventsSubscription","itemScope","getAllResults","empty","resultSelected","DownloadLinks","href","src","windows","google_play","apk","github","opacity","linux","About","inApp","linkClass","toggleAbout","class","download","alt","App","platformClick","testClick","swipe","wpf","android","macos","urlParams","selectedIdsParam","aboutParam","showDownloadParam","qParam","inappParam","getSelectedIdsFromParam","inAppPlatform","q","inAppAdjustments","showAbout","showDownload","decodeURIComponent","renderCounter","ids","split","parseInt","Number","isInteger","delete","history","replaceState","toString","swipeHint","left","t","resultId","clearDevice","setSelectedIds","addSelectedIdsToParam","stl","helpLinkClass","onSwipedLeft","onSwipedRight","threshold","benchmark","testDb","themeParam","initParams","body","ReactDOM","render","getElementById","t1","performance","now","toFixed","alert","runBenchmark","start"],"mappings":"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","file":"static/js/main.e445eea7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/windows.15e72531.svg\";","module.exports = __webpack_public_path__ + \"static/media/macos.3a236d88.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-play.7041ae46.svg\";","module.exports = __webpack_public_path__ + \"static/media/apk.a00fa3a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.990c2b02.svg\";","module.exports = __webpack_public_path__ + \"static/media/linux.51ffa359.svg\";","import l18n from '../translations';\r\n\r\nlet platforms, tests;\r\nconst shortcutRegex = /[^\\[]+(?=\\])/;\r\n\r\nfunction addShortcut(obj) {\r\n  let match = obj.name.match(shortcutRegex);\r\n  if (match && match.length === 1)\r\n    obj.shortcut = match[0].toLowerCase();\r\n}\r\n\r\nfunction getEntities(items) {\r\n  return items.map(i => {\r\n      let obj = {\r\n        key: i,\r\n        name: l18n[i] ? l18n[i] : i,\r\n        shortcut: null\r\n      };\r\n      addShortcut(obj);\r\n      return obj;\r\n    });\r\n}\r\n\r\nfunction getEntitiesWithL18nMod(items, mod) {\r\n  return items.map(i => {\r\n      let obj = {\r\n        key: i,\r\n        name: l18n[i+mod] ? l18n[i+mod] : i,\r\n        shortcut: null\r\n      };\r\n      addShortcut(obj);\r\n      return obj;\r\n    });\r\n}\r\n\r\nconst dictionaries = \r\n{\r\n  getTests : function(){\r\n    if (!tests) tests = getEntitiesWithL18nMod(this.data.tests,\"_s\");\r\n    return tests;\r\n  },  \r\n\r\n  getPlatforms : function(){\r\n      if (!platforms){\r\n        platforms = getEntities(this.data.platforms);\r\n\r\n        let keys = platforms.map(p => p.key);\r\n\r\n        if (keys.length !== 4) console.log(\"Invalid number of platforms in DB, 4 supported, found \"+keys.length);\r\n        if (!keys.includes(this.Windows)) console.log(\"Windows platfrom not found in DB\");\r\n        if (!keys.includes(this.Android)) console.log(\"Android platfrom not found in DB\");\r\n        if (!keys.includes(this.macOS)) console.log(\"macOS platfrom not found in DB\");\r\n        if (!keys.includes(this.iOS)) console.log(\"iOS platfrom not found in DB\");\r\n      }\r\n      return platforms;\r\n  }\r\n}\r\n\r\ndictionaries.seqWrite = \"seqWrite\";\r\ndictionaries.seqRead = \"seqRead\";\r\ndictionaries.randWrite = \"randWrite\";\r\ndictionaries.randRead = \"randRead\";\r\ndictionaries.memCopy = \"memCopy\";\r\n\r\ndictionaries.Windows = \"Windows\";\r\ndictionaries.Android = \"Android\";\r\ndictionaries.macOS = \"macOS\";\r\ndictionaries.iOS = \"iOS\";\r\n\r\nexport default dictionaries;","const translations = \r\n{\r\n    pageTitle:  \"Бенчмарк CPDT: База производительности памяти\",\r\n    aboutTitle:  \"Бенчмарк CPDT: О программе\",\r\n    downloadTitle:  \"Бенчмарк CPDT: Скачать\",\r\n    title: \"Тестирование SSD/HDD\",\r\n    subTitle: \"Скорости устройств\",\r\n    seqWrite: \"[П]оследовательная запись\",\r\n    seqRead: \"[П]оследовательное чтение\",\r\n    randWrite: \"[П]роизвольная запись (4КБ)\",\r\n    randRead: \"[П]роизвольное чтение (4КБ)\",\r\n    memCopy: \"[К]опирование памяти\",\r\n\r\n    seqWrite_s: \"[П]осл. запись\",\r\n    seqRead_s: \"[П]осл. чтение\",\r\n    randWrite_s: \"[П]роизв. запись\",\r\n    randRead_s: \"[П]роизв. чтение\",\r\n    memCopy_s: \"[К]оп. памяти\",\r\n\r\n    seqWrite_f: \"Последовательная запись\",\r\n    seqRead_f: \"Последовательное чтение\",\r\n    randWrite_f: \"Произвольная запись (4КБ)\",\r\n    randRead_f: \"Произвольное чтение (4КБ)\",\r\n    memCopy_f: \"Копирование памяти\",\r\n\r\n    throughput: \"Пропускная способность\",\r\n    nothingToShow: \"Nothing to show\",\r\n\r\n    Android: \"[A]ndroid\",\r\n    macOS: \"mac[O]S\",\r\n    iOS: \"[i]OS\",\r\n    Windows: \"[W]indows\",\r\n    all: \"Все\",\r\n    mbps: \"МБ/с\",\r\n    gbps: \"ГБ/с\",\r\n\r\n    hitEnter: \"Нажать Enter для закрепления записи\",\r\n    hintDoubleTap: \"Нажать два раза для закрепления записи\",\r\n    hintSwipe: \"Свайп влево/вправо для смены теста\",\r\n    close: \"[C] Закрыть\",\r\n    yourDevice: \"Ваше устройство\",\r\n\r\n    result_SRW: \"Посл.З÷Ч\",\r\n    result_RRW: \"Прзв.З÷Ч\",\r\n    result_MEM: \"Коп.Пм\",\r\n\r\n    result_SW: \"Посл.З\",\r\n    result_SR: \"Посл.Ч\",\r\n    result_RW: \"Прзв.З\",\r\n    result_RR: \"Прзв.Ч\"\r\n}\r\n\r\nexport default translations;","const translations = \r\n{\r\n    pageTitle: \"CPDT Benchmark: Résultats de performance\",\r\n    aboutTitle:  \"CPDT Benchmark: Sur l'application\",\r\n    downloadTitle:  \"CPDT Benchmark: Télécharger\",\r\n    title: \"SSD/HDD Benchmark\",\r\n    subTitle: \"Tableau des performances\",\r\n    seqWrite: \"Ecriture [S]équentiel\",\r\n    seqRead: \"Lecture [S]équentiel\",\r\n    randWrite: \"Ecriture [A]léatoire (4KB)\",\r\n    randRead: \"Lecture [A]léatoire (4KB)\",\r\n    memCopy: \"[Copie de la [M]émoire\",\r\n\r\n    seqWrite_s: \"Ecriture [S]éq.\",\r\n    seqRead_s: \"Lecture [S]éq.\",\r\n    randWrite_s: \"Ecriture [A]léat.\",\r\n    randRead_s: \"Lecture [A]léat.\",\r\n    memCopy_s: \"Copie [M]émoire\",\r\n\r\n    seqWrite_f: \"Ecriture séquentiel\",\r\n    seqRead_f: \"Lecture séquentiel\",\r\n    randWrite_f: \"Ecriture aléatoire (4KB)\",\r\n    randRead_f: \"Lecture aléatoire (4KB)\",\r\n    memCopy_f: \"Copie mémoire\",\r\n\r\n    throughput: \"Débit\",\r\n    nothingToShow: \"Rien à montrer\",\r\n\r\n    all: \"Tous\",\r\n\r\n    hitEnter: \"Appuyez sur Entrée et corrigez le résultat supérieur\",\r\n    hintDoubleTap: \"Appuyez deux fois pour fixer l'enregistrement en haut\",\r\n    hintSwipe: \"Balayez vers la gauche ou la droite pour modifier le test\",\r\n    close: \"[F]ermer\",\r\n    yourDevice: \"Votre appareil\",\r\n\r\n    result_SRW: \"E÷L.Seq\",\r\n    result_RRW: \"E÷L.Alé\",\r\n    result_MEM: \"C.Mém\",\r\n\r\n    result_SW: \"E.Seq\",\r\n    result_SR: \"L.Seq\",\r\n    result_RW: \"E.Alé\",\r\n    result_RR: \"L.Alé\"\r\n}\r\n\r\nexport default translations;","const translations = \n{\n    pageTitle: \"跨平臺硬碟測試：硬碟效能排行榜\",\n    aboutTitle:  \"跨平臺硬碟測試：關於本程式\",\n    downloadTitle:  \"跨平臺硬碟測試：下載\",\n    title: \"固態/機械硬碟基準測試\",\n    subTitle: \"排行榜\",\n    seqWrite: \"[S]順序寫入\",\n    seqRead: \"[S]順序讀取\",\n    randWrite: \"[R]隨機寫入（4KB）\",\n    randRead: \"[R]隨機讀取（4KB）\",\n    memCopy: \"[M]記憶體複製\",\n\n    seqWrite_s: \"[S]順序寫入\",\n    seqRead_s: \"[S]順序讀取\",\n    randWrite_s: \"[R]隨機寫入\",\n    randRead_s: \"[R]隨機讀取\",\n    memCopy_s: \"[M]記憶體複製\",\n\n    seqWrite_f: \"順序寫入\",\n    seqRead_f: \"順序讀取\",\n    randWrite_f: \"隨機寫入（4KB）\",\n    randRead_f: \"隨機讀取（4KB）\",\n    memCopy_f: \"記憶體複製\",\n\n    throughput: \"吞吐量\",\n    nothingToShow: \"這裡啥都沒有\",\n\n    Android: \"[A]ndroid\",\n    macOS: \"mac[O]S\",\n    iOS: \"[i]OS\",\n    Windows: \"[W]indows\",\n    all: \"全選\",\n    mbps: \"MB/s\",\n    gbps: \"GB/s\",\n\n    hitEnter: \"單擊回車鍵以置頂該記錄\",\n    hintDoubleTap: \"雙擊以置頂該記錄\",\n    hintSwipe: \"左右滑動以更換測試項\",\n    close: \"[C]關閉\",\n    yourDevice: \"您的裝置\",\n\n    result_SRW: \"順序寫入÷讀取\",\n    result_RRW: \"隨機寫入÷讀取\",\n    result_MEM: \"記憶體複製\",\n\n    result_SW: \"順序寫入\",\n    result_SR: \"順序讀取\",\n    result_RW: \"隨機寫入\",\n    result_RR: \"隨機讀取\"\n}\n\nexport default translations;\n","const translations = \n{\n    pageTitle: \"跨平台硬盘测试：硬盘性能排行榜\",\n    aboutTitle:  \"跨平台硬盘测试：关于本程序\",\n    downloadTitle:  \"跨平台硬盘测试：下载\",\n    title: \"固态/机械硬盘基准测试\",\n    subTitle: \"排行榜\",\n    seqWrite: \"[S]顺序写入\",\n    seqRead: \"[S]顺序读取\",\n    randWrite: \"[R]随机写入（4KB）\",\n    randRead: \"[R]随机读取（4KB）\",\n    memCopy: \"[M]内存复制\",\n\n    seqWrite_s: \"[S]顺序写入\",\n    seqRead_s: \"[S]顺序读取\",\n    randWrite_s: \"[R]随机写入\",\n    randRead_s: \"[R]随机读取\",\n    memCopy_s: \"[M]内存复制\",\n\n    seqWrite_f: \"顺序写入\",\n    seqRead_f: \"顺序读取\",\n    randWrite_f: \"随机写入（4KB）\",\n    randRead_f: \"随机读取（4KB）\",\n    memCopy_f: \"内存复制\",\n\n    throughput: \"吞吐量\",\n    nothingToShow: \"这里啥都没有\",\n\n    Android: \"[A]ndroid\",\n    macOS: \"mac[O]S\",\n    iOS: \"[i]OS\",\n    Windows: \"[W]indows\",\n    all: \"全选\",\n    mbps: \"MB/s\",\n    gbps: \"GB/s\",\n\n    hitEnter: \"单击回车键以置顶该记录\",\n    hintDoubleTap: \"双击以置顶该记录\",\n    hintSwipe: \"左右滑动以更换测试项\",\n    close: \"[C]关闭\",\n    yourDevice: \"您的设备\",\n\n    result_SRW: \"顺序写入÷读取\",\n    result_RRW: \"随机写入÷读取\",\n    result_MEM: \"内存复制\",\n\n    result_SW: \"顺序写入\",\n    result_SR: \"顺序读取\",\n    result_RW: \"随机写入\",\n    result_RR: \"随机读取\"\n}\n\nexport default translations;\n","import en from './en';\nimport ru from './ru';\nimport fr from './fr';\nimport zht from './zht';\nimport zh from './zh';\n\nconst langParam = \"lang\";\n\n//Default texts\nconst translations = en;\n\n//Must be executed before accesing the translations. Updates default texts with locale specific translations. If there's no translation, default text will be used\ntranslations.init = function() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const param = urlParams.get(langParam);\n\n    let lang = this.enLocale;\n    this.locale = lang;\n\n    if (param) {\n        lang = param.toLocaleLowerCase();\n    }\n    else{\n        lang = navigator.language.toLowerCase();\n    }\n\n    let localeObj;\n\n    if (lang.includes(this.ruLocale)) {\n        localeObj = ru;\n        this.locale = this.ruLocale;\n    }\n    else if (lang.includes(this.frLocale)) {\n        localeObj = fr;\n        this.locale = this.frLocale;\n    }\n    else if (lang.includes(this.zhtLocale)) {\n        localeObj = zht;\n        this.locale = this.zhtLocale;\n    }\n    else if (lang.includes(this.zhLocale)) {\n        localeObj = zh;\n        this.locale = this.zhLocale;\n    }\n    \n    if (localeObj)\n        Object.keys(translations).forEach((key) => {\n            if (localeObj[key])\n                translations[key] = localeObj[key];\n        });\n};\n\ntranslations.enLocale = \"en\";\ntranslations.ruLocale = \"ru\";\ntranslations.frLocale = \"fr\";\ntranslations.zhLocale = \"zh\";\ntranslations.zhtLocale = \"zht\";\n\nexport default translations;","const translations = \r\n{\r\n    pageTitle: \"CPDT Benchmark: Storage Performance Database\",\r\n    aboutTitle:  \"CPDT Benchmark: About App\",\r\n    downloadTitle:  \"CPDT Benchmark: Download\",\r\n    title: \"SSD/HDD Benchmark\",\r\n    subTitle: \"Performance Chart\",\r\n    seqWrite: \"[S]equential write\",\r\n    seqRead: \"[S]equential read\",\r\n    randWrite: \"[R]andom write (4KB)\",\r\n    randRead: \"[R]andom read (4KB)\",\r\n    memCopy: \"[M]emory copy\",\r\n\r\n    seqWrite_s: \"[S]eq. write\",\r\n    seqRead_s: \"[S]eq. read\",\r\n    randWrite_s: \"[R]and. write\",\r\n    randRead_s: \"[R]and. read\",\r\n    memCopy_s: \"[M]em. copy\",\r\n\r\n    seqWrite_f: \"Sequential write\",\r\n    seqRead_f: \"Sequential read\",\r\n    randWrite_f: \"Random write (4KB)\",\r\n    randRead_f: \"Random read (4KB)\",\r\n    memCopy_f: \"Memory copy\",\r\n\r\n    throughput: \"Throughput\",\r\n    nothingToShow: \"Nothing to show\",\r\n\r\n    Android: \"[A]ndroid\",\r\n    macOS: \"mac[O]S\",\r\n    iOS: \"[i]OS\",\r\n    Windows: \"[W]indows\",\r\n    all: \"All\",\r\n    mbps: \"MB/s\",\r\n    gbps: \"GB/s\",\r\n\r\n    hitEnter: \"Hit Enter & fix top result\",\r\n    hintDoubleTap: \"Double tap to fix record at the top\",\r\n    hintSwipe: \"Swipe left or right to change test\",\r\n    close: \"[C]lose\",\r\n    yourDevice: \"Your device\",\r\n\r\n    result_SRW: \"Seq.W÷R\",\r\n    result_RRW: \"Rnd.W÷R\",\r\n    result_MEM: \"Mem.C\",\r\n\r\n    result_SW: \"Seq.W\",\r\n    result_SR: \"Seq.R\",\r\n    result_RW: \"Rnd.W\",\r\n    result_RR: \"Rnd.R\"\r\n}\r\n\r\nexport default translations;","import React, { Component } from 'react';\r\n\r\nconst shortcutRegex = /[^\\[]+(?=\\])/;\r\n\r\nclass PressableLink extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n    this.initShortcut = this.initShortcut.bind(this);\r\n\r\n    this.shortcut = null;\r\n    if (this.props.children){\r\n      let match = this.props.children.match(shortcutRegex);\r\n      if (match && match.length === 1)\r\n        this.shortcut = match[0].toLowerCase();\r\n    }\r\n  }\r\n\r\n  initShortcut() {\r\n    if (this.shortcut && !this.keyPressSubscribed) {\r\n      document.addEventListener('keypress', this.onKeyPress);\r\n      this.keyPressSubscribed = true;\r\n    }\r\n    else if (this.keyPressSubscribed) {\r\n      document.removeEventListener('keypress', this.onKeyPress);\r\n      this.keyPressSubscribed = false;\r\n    }\r\n  }\r\n\r\n  onKeyPress(e) {\r\n    if (document.activeElement instanceof HTMLBodyElement){\r\n      if (this.shortcut === e.key && this.props.onClick)\r\n      {\r\n        this.props.onClick();\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    if (this.keyPressSubscribed)\r\n      document.removeEventListener('keypress', this.onKeyPress);\r\n  }\r\n\r\n  render() {\r\n    this.initShortcut();\r\n    return <a className={this.props.className} onClick={this.props.onClick}>{this.props.children}</a>\r\n  }\r\n\r\n}\r\n\r\nexport default PressableLink;","import React, { Component } from 'react';\r\nimport l18n from './translations';\r\n\r\nclass ListSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.selectAll = this.selectAll.bind(this);\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n  }\r\n\r\n  toggle(key) {\r\n    if (this.props.selectedKey.includes(key)) { // remove key\r\n      if (this.props.selectedKey.length > 1) {\r\n        return this.props.selectedKey.filter(k => k !== key);\r\n      }\r\n      else {\r\n        return this.props.selectedKey;\r\n      }\r\n    }\r\n\r\n    this.props.selectedKey.push(key);\r\n\r\n    return this.props.selectedKey;\r\n  }\r\n\r\n  selectAll() {\r\n    return this.props.items.map(p => p.key);\r\n  }\r\n\r\n  onKeyPress(e) {\r\n    if (document.activeElement instanceof HTMLBodyElement){\r\n      if (this.shortcuts.has(e.key))\r\n      {\r\n        let val = this.shortcuts.get(e.key);\r\n\r\n        //TODO - add suport for repeting shortcuts in multiselect list\r\n        if (Array.isArray(val)){ // single select, repeat shortcuts\r\n          let key = val[0].key;\r\n          \r\n          for (let i = 0; i < val.length; i++){\r\n            if (val[i].key === this.props.selectedKey){\r\n              if (i+1 < val.length) key = val[i+1].key;\r\n            }\r\n          }\r\n\r\n          this.props.itemClick(key);\r\n        }\r\n        else if (Array.isArray(this.props.selectedKey)){ // multi select select, non-repeat shortcuts        \r\n          this.props.itemClick(this.toggle(val.key));\r\n        } else if (val.key !== this.props.selectedKey) { // single select, non-repeat shortcuts\r\n          this.props.itemClick(val.key);\r\n        } \r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    if (this.keyPressSubscribed)\r\n      document.removeEventListener('keypress', this.onKeyPress);\r\n  }\r\n\r\n  initShortcuts() {\r\n    this.prevItems = this.props.items;\r\n    this.shortcuts = new Map();\r\n    for (var i in this.prevItems) {\r\n      if (this.prevItems[i].shortcut) {\r\n        if (!this.shortcuts.has(this.prevItems[i].shortcut))\r\n          this.shortcuts.set(this.prevItems[i].shortcut, this.prevItems[i]);\r\n        else {\r\n          let sc = this.shortcuts.get(this.prevItems[i].shortcut);\r\n\r\n          if (Array.isArray(sc)) sc.push(this.prevItems[i]);\r\n          else {\r\n            let arr = [sc, this.prevItems[i]];\r\n            this.shortcuts.set(this.prevItems[i].shortcut, arr);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.shortcuts.size > 0) {\r\n      document.addEventListener('keypress', this.onKeyPress);\r\n      this.keyPressSubscribed = true;\r\n    }\r\n    else if (this.keyPressSubscribed) {\r\n      document.removeEventListener('keypress', this.onKeyPress);\r\n      this.keyPressSubscribed = false;\r\n    }\r\n  }\r\n\r\n  updateShortcuts() {\r\n    if (!this.prevItems) {\r\n      this.initShortcuts();\r\n    }\r\n    else if (this.prevItems !== this.props.items) {\r\n      this.initShortcuts();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.updateShortcuts();\r\n\r\n    if (this.props.items)\r\n      return (\r\n        <ul className={this.props.className}>\r\n          {\r\n              this.props.items.map( // multiselect\r\n                i =>\r\n                  <li\r\n                    key={i.key}\r\n                    className={this.props.selectedKey.includes(i.key) ? \"selected\" : null}\r\n                    onClick={\r\n                      Array.isArray(this.props.selectedKey) ? \r\n                      () => this.props.itemClick(this.toggle(i.key)) : // multiselect\r\n                      () => this.props.itemClick(i.key) //single select\r\n                    }\r\n                  >\r\n                    {i.name}\r\n                  </li>\r\n              )\r\n          }\r\n\r\n          {\r\n            this.props.selectAll && <li onClick={() => this.props.itemClick(this.selectAll())}>{l18n.all}</li>\r\n          }\r\n        </ul>\r\n      )\r\n\r\n      return null;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default ListSelector;","import l18n from '../translations';\r\n\r\nconst results = \r\n{\r\n  addYourDeviceResult: function(yd){\r\n    if (!yd.seqWrite && !yd.seqRead && !yd.randWrite && !yd.randRead && !yd.memCopy){\r\n      console.log(\"Invaid 'Your device' data\");\r\n      return;\r\n    }\r\n\r\n    if (!yd.device) yd.device = l18n.yourDevice;\r\n\r\n    yd.id = this.yourDeviceId;\r\n    yd.deviceDetail = \"\";\r\n\r\n    if (this.data.results[this.data.results.length-1].id === yd.id) this.data.results.pop();\r\n    this.data.results.push(yd);\r\n  },\r\n\r\n  getResults: function(platfroms, test, device, excludeIds){\r\n    let filters = [];\r\n\r\n    filters.push(r => !r.hidden);\r\n    \r\n    if (platfroms && Array.isArray(platfroms)){\r\n      filters.push(r => platfroms.includes(r.platform));\r\n    }\r\n\r\n    if (device){\r\n      device = device.trim().toLowerCase();\r\n      if (device) {\r\n        if (device.length < 4)\r\n          filters.push(r => r.device.toLowerCase().includes(device));\r\n        else\r\n          filters.push(r => r.device.toLowerCase().includes(device) || r.deviceDetail.toLowerCase().includes(device));\r\n      }\r\n    }\r\n\r\n    if (excludeIds && excludeIds.length > 0){\r\n      filters.push(r => !excludeIds.includes(r.id));\r\n    }\r\n\r\n    let result = this.data.results.filter(r => \r\n      {\r\n        let condition = true;\r\n        for (let i = 0; i < filters.length; i++){\r\n          condition &= filters[i](r);\r\n          if (!condition) return false;\r\n        }\r\n\r\n        return true;\r\n      });\r\n\r\n    if (test){\r\n      result.sort(\r\n        (a,b) => \r\n          b[test] - a[test]\r\n        );\r\n    }\r\n\r\n    if (result.length > 0) this.lastResultId = result[0].id; else this.lastResultId = null;\r\n\r\n    return result;\r\n  },\r\n\r\n  getResultById: function(id){\r\n    if (id < 0 || id > this.data.results.length) return null;\r\n    if (id === 0 && this.data.results[this.data.results.length-1].id === 0) return this.data.results[this.data.results.length-1];\r\n\r\n    return this.data.results[id-1];\r\n  },\r\n\r\n  idExists: function(id){\r\n    return this.getResultById(id) != null;\r\n  },\r\n\r\n  setPercents: function(results, test) {\r\n    let maxVal = 0;\r\n    for (let i = 0; i < results.length; i++){\r\n      if (results[i][test] > maxVal) maxVal = results[i][test];\r\n    }\r\n    for (let i = 0; i < results.length; i++){\r\n      results[i].percent = results[i][test]/maxVal;\r\n    }\r\n  },\r\n\r\n  getLastResultId: function(){\r\n    if (this.lastResultId) return this.lastResultId;\r\n    return null;\r\n  }\r\n}\r\n\r\nresults.lastResultId = null;\r\nresults.yourDeviceId = 0;\r\n\r\nexport default results;","import dictionaries from './dictionaries';\r\nimport results from './results';\r\n\r\nconst db_version_url = \"https://raw.githubusercontent.com/maxim-saplin/cpdt_results/master/Results_version.json\";\r\nlet db_url = \"https://raw.githubusercontent.com/maxim-saplin/cpdt_results/master/Results.json\";\r\nconst db_url_test = \"https://raw.githubusercontent.com/maxim-saplin/cpdt_results/master/Results_test.json\";\r\nconst db_version_sotrage_key = \"cpdt_db_version\";\r\nconst db_sotrage_key = \"cpdt_db\";\r\n\r\nconst db = {\r\n    dictionaries : dictionaries,\r\n    results : results,\r\n    \r\n    init: function (useTest){\r\n        let fetchVersion = () => {\r\n            return new Promise (resolve => {\r\n                fetch(db_version_url, {cache: \"no-store\"})\r\n                .then(response => {\r\n                    return response.json();\r\n                })\r\n                .then(result => {\r\n                    storage.setItem(db_version_sotrage_key, result.v);\r\n                    this.version = result.v;\r\n                    resolve(result.v);\r\n                });\r\n            });\r\n        };\r\n\r\n        let fetchDb = () => {\r\n            return new Promise (resolve => {\r\n                fetch(db_url, {cache: \"no-store\"})\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    storage.setItem(db_sotrage_key, JSON.stringify(result));\r\n                    dictionaries.data = result;\r\n                    results.data = result;\r\n                    resolve(result);\r\n                })\r\n            });\r\n        };\r\n\r\n        let promise = null;\r\n\r\n        let storage = window.localStorage;\r\n\r\n        if (useTest){\r\n          db_url = db_url_test;\r\n          storage.setItem(db_version_sotrage_key,\"test\");\r\n        }\r\n\r\n        let data = storage.getItem(db_sotrage_key);\r\n        if (data) {\r\n          try { data = JSON.parse(data);} catch{};\r\n          if (!data.results) data = null; // shallow check for corrupt data\r\n        }\r\n        let localDbVersion = storage.getItem(db_version_sotrage_key);\r\n\r\n        if (data){\r\n            promise = new Promise( resolve => {\r\n                fetchVersion()\r\n                .then(result => {\r\n                    if (useTest){\r\n                      storage.setItem(db_version_sotrage_key,\"test\");\r\n                    }\r\n\r\n                    if (result !== localDbVersion){\r\n                        fetchDb().then(result => resolve(result));                    \r\n                    }\r\n                    // local data is up to date\r\n                    else{ \r\n                        dictionaries.data = data;\r\n                        results.data = data;\r\n                        resolve(data)\r\n                    };\r\n                });\r\n            });\r\n        }\r\n        else{\r\n            fetchVersion();\r\n            promise = fetchDb();\r\n        }\r\n\r\n        return promise;\r\n    },\r\n\r\n    initFake: function() {\r\n      dictionaries.data = {\"results\":[{\"id\":\"1\",\"device\":\"Xiaomi Mi8 SE\",\"platfrom\":\"Android\",\"deviceDetail\":\"Snapdragon 710, 64GB\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"23.10.2018\",\"seqWrite\":\"110\",\"seqRead\":\"299\",\"randWrite\":\"18,9\",\"randRead\":\"9,5\",\"memCopy\":\"4,65\"},{\"id\":\"2\",\"device\":\"Samsung Galaxy S9\",\"platfrom\":\"Android\",\"deviceDetail\":\"Exynos 9810, 64Gb\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"04.10.2018\",\"seqWrite\":\"118\",\"seqRead\":\"654\",\"randWrite\":\"1,72\",\"randRead\":\"14,43\",\"memCopy\":\"12,7\"},{\"id\":\"3\",\"device\":\"Essential Phone PH-1\",\"platfrom\":\"Android\",\"deviceDetail\":\"Snapdragon 835, 128GB\",\"deviceComment\":\"\",\"deviceYear\":\"2017\",\"dateTested\":\"30.09.2018\",\"seqWrite\":\"125\",\"seqRead\":\"440\",\"randWrite\":\"4,3\",\"randRead\":\"17,4\",\"memCopy\":\"6,6\"},{\"id\":\"4\",\"device\":\"15\\\" MacBook Pro\",\"platfrom\":\"macOS\",\"deviceDetail\":\"macOS, APFS\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"03.10.2018\",\"seqWrite\":\"1331,2\",\"seqRead\":\"2088,96\",\"randWrite\":\"75\",\"randRead\":\"38\",\"memCopy\":\"10,3\"},{\"id\":\"5\",\"device\":\"15\\\" MacBook Pro\",\"platfrom\":\"macOS\",\"deviceDetail\":\"macOS, NTFS partition\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"03.10.2018\",\"seqWrite\":\"730\",\"seqRead\":\"694\",\"randWrite\":\"27\",\"randRead\":\"8\",\"memCopy\":\"10,3\"},{\"id\":\"6\",\"device\":\"15\\\" MacBook Pro\",\"platfrom\":\"Windows\",\"deviceDetail\":\"Windows 10 Bootcamp, NTFS\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"03.10.2018\",\"seqWrite\":\"343\",\"seqRead\":\"1617,92\",\"randWrite\":\"0,5625\",\"randRead\":\"11,01\",\"memCopy\":\"8,5\"},{\"id\":\"7\",\"device\":\"15\\\" MacBook Pro\",\"platfrom\":\"Windows\",\"deviceDetail\":\"Windows 10, VMWare Fusion, NTFS\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"03.10.2018\",\"seqWrite\":\"850\",\"seqRead\":\"2457,6\",\"randWrite\":\"12\",\"randRead\":\"29\",\"memCopy\":\"5,8\"}],\"platforms\":[\"Android\", \"macOS\", \"Windows\"],\"tests\":[\"seqWrite\", \"seqRead\", \"randWrite\", \"randRead\", \"memCopy\"]};\r\n      results.data = dictionaries.data;\r\n    }\r\n};\r\n\r\nexport default db;","import db from './db';\r\n\r\nexport default db;","import React, { PureComponent } from 'react';\r\nimport db from './data';\r\nimport l18n from './translations';\r\n\r\nclass Search extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.textChanged = this.textChanged.bind(this);\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n    this.moveCursorToEnd = this.moveCursorToEnd.bind(this);\r\n\r\n    this.state = {\r\n      extraSpaces: props.value ? false : true, \r\n      blink: false,\r\n      showHitn: false\r\n    };\r\n\r\n    this.textInput = React.createRef();\r\n  }\r\n\r\n  textChanged(e){\r\n    if (this.enterPressed) {\r\n      e.target.innerText = \"\"; \r\n      this.enterPressed = false;\r\n    }\r\n    \r\n    if (this.props.searchChanged) {\r\n      this.props.searchChanged(e.target.innerText, true);\r\n    }\r\n    if (e.target.innerText && this.state.extraSpaces) this.setState({extraSpaces: false});\r\n    else if (!e.target.innerText && !this.state.extraSpaces) this.setState({extraSpaces: true});\r\n  }\r\n\r\n  onKeyPress(e){\r\n    if (e.key === \"Enter\" || e.charCode === 13) {\r\n      this.enterPressed = true;\r\n      let last = db.results.getLastResultId();\r\n      if (e.target.innerText && this.props.enterPressed && last) this.props.enterPressed(last);\r\n    }\r\n    else this.enterPressed = false;\r\n  }\r\n\r\n  moveCursorToEnd(el){\r\n    if(el.innerText && document.createRange)\r\n    {\r\n      window.setTimeout(() =>\r\n        {\r\n          let selection = document.getSelection();\r\n          let range = document.createRange();\r\n      \r\n          range.setStart(el.childNodes[0],el.innerText.length);\r\n          range.collapse(true);\r\n          selection.removeAllRanges();\r\n          selection.addRange(range);\r\n        }\r\n      ,1);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if (document.activeElement === this.textInput.current) \r\n      this.moveCursorToEnd(this.textInput.current);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>      \r\n        <span className=\"searchBox\">\r\n          <span \r\n            contentEditable=\"true\" \r\n            ref={this.textInput} \r\n            onInput={this.textChanged} \r\n            onKeyPress={this.onKeyPress}\r\n            onFocus={(e) => {this.setState({blink:true}); this.moveCursorToEnd(e.nativeEvent.target)}} \r\n            onBlur={() => {this.setState({blink:false})}}\r\n          >\r\n          {this.props.value}\r\n          </span>\r\n          <span \r\n            className={this.state.blink ? \"blink\" : \"\"} \r\n            onClick={() => {this.textInput.current.focus()}}\r\n          >\r\n            {!this.state.blink && this.state.extraSpaces && \"\\xA0\\xA0\\xA0\\xA0\"}_\r\n          </span>\r\n          &lt;/\r\n        </span>\r\n        <span className={!this.state.extraSpaces && this.state.blink ? \"searchBoxHint visible\" : \"searchBoxHint\"}>\r\n          {l18n.hitEnter}\r\n        </span>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;","import React, { PureComponent } from 'react';\r\n\r\nclass TestResultDetailsItem extends PureComponent {\r\n  render() {\r\n    return(\r\n    <>\r\n      <span className={this.props.selectedTest === this.props.test? \"singleRes selected\" : \"singleRes\"}>\r\n      <span className=\"ttl\">{this.props.testName}</span>\r\n      <br/>\r\n      <span className=\"res\">{this.props.result}</span>\r\n      <br className=\"unitBreak\"/>\r\n      <span className=\"unit\">{this.props.unit}</span>\r\n      </span>\r\n    </>);\r\n  }\r\n}\r\n\r\nexport default TestResultDetailsItem;","import React, { PureComponent } from 'react';\r\nimport TestResultDetailsItem from './TestResultDetailsItem';\r\nimport l18n from './translations';\r\nimport db from './data';\r\n\r\nclass TestResultDetails extends PureComponent {\r\n  render() {\r\n    let i = this.props.item;\r\n\r\n    if (i) return (\r\n      <span className={this.props.noHighlight ? \"centerColumn noHighlight\" : \"centerColumn\"}>\r\n\r\n        <TestResultDetailsItem \r\n          selectedTest={this.props.selectedTest}\r\n          test={db.dictionaries.seqWrite}\r\n          testName={l18n.result_SW}\r\n          unit={l18n.mbps}\r\n          result={i[db.dictionaries.seqWrite]}\r\n        />\r\n\r\n        <TestResultDetailsItem \r\n          selectedTest={this.props.selectedTest}\r\n          test={db.dictionaries.seqRead}\r\n          testName={l18n.result_SR}\r\n          unit={l18n.mbps}\r\n          result={i[db.dictionaries.seqRead]}\r\n        />\r\n\r\n        <TestResultDetailsItem \r\n          selectedTest={this.props.selectedTest}\r\n          test={db.dictionaries.randWrite}\r\n          testName={l18n.result_RW}\r\n          unit={l18n.mbps}\r\n          result={i[db.dictionaries.randWrite]}\r\n        />\r\n\r\n        <TestResultDetailsItem \r\n          selectedTest={this.props.selectedTest}\r\n          test={db.dictionaries.randRead}\r\n          testName={l18n.result_RR}\r\n          unit={l18n.mbps}\r\n          result={i[db.dictionaries.randRead]}\r\n        />        \r\n        \r\n        <TestResultDetailsItem \r\n          selectedTest={this.props.selectedTest}\r\n          test={db.dictionaries.memCopy}\r\n          testName={l18n.result_MEM}\r\n          unit={l18n.gbps}\r\n          result={i[db.dictionaries.memCopy]}\r\n        /> \r\n\r\n      </span>);\r\n\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default TestResultDetails;","import React, { PureComponent } from 'react';\r\nimport l18n from './translations';\r\n\r\nclass TestResult extends PureComponent {\r\n  render() {\r\n    let i = this.props.item;\r\n\r\n    if (i) return (\r\n      <>\r\n        <span className=\"leftColumn\">\r\n          <em itemProp=\"name\">\r\n            {i.device}\r\n          </em>\r\n          <br />\r\n          <span className=\"greyed\" itemProp=\"description\">\r\n            {i.deviceYear}{i.deviceDetail && \",\"} {i.deviceDetail}\r\n          </span>\r\n        </span>\r\n        <span className=\"rightColumn\">\r\n          <span style={{ width: i.percent * 80 + \"%\" }} itemProp=\"throughput\" > \r\n            {i[this.props.selectedTest]} {this.props.selectedTest === \"memCopy\" ? l18n.gbps : l18n.mbps}\r\n          </span>\r\n          {this.props.closableX && <button onClick={() => this.props.selectedIdRemoved(i.id)}>X</button>}\r\n          {this.props.closableEsc && <button onClick={() => this.props.selectedIdRemoved(i.id)}>[Esc]</button>}\r\n        </span>\r\n      </>);\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default TestResult;","import React, { PureComponent } from 'react';\r\n\r\nclass Hint extends PureComponent {\r\n  render() {\r\n    return <span className=\"hint\">{this.props.children}</span>\r\n  }\r\n}\r\n\r\nexport default Hint;","import React, { Component } from 'react';\r\nimport TestResultDetails from './TestResultDetails';\r\nimport TestResult from './TestResult';\r\nimport Hint from './Hint';\r\nimport l18n from './translations';\r\nimport db from './data';\r\n\r\nclass TestResults extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onKeyUp = this.onKeyUp.bind(this);\r\n    this.handleSingleDblClicks = this.handleSingleDblClicks.bind(this);\r\n    this.state = {expandedId: null, doubleTapHint: false};\r\n    this.clickTimeout = null;\r\n  }\r\n\r\n  getAllResults(result) {\r\n    let text = l18n.throughput + \"\\x0A\";\r\n    let tests = db.dictionaries.getTests();\r\n\r\n    for (var i = 0; i < tests.length; i++) {\r\n      text += l18n[tests[i].key + \"_s\"] + \": \" + result[tests[i].key] + \" \";\r\n      text += tests[i].key === \"memCopy\" ? l18n.gbps : l18n.mbps;\r\n      if (i !== tests.length - 1) text += \"\\x0A\";\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    if (this.keyPressSubscribed){\r\n      document.removeEventListener('keyup', this.onKeyUp);\r\n    }\r\n  }\r\n\r\n  handleSingleDblClicks(e, singleClick, dblClick){\r\n    e.preventDefault();\r\n    if (this.clickTimeout !== null) {\r\n      console.log(\"Dbl\");\r\n      clearTimeout(this.clickTimeout)\r\n      this.clickTimeout = null;\r\n      if (dblClick) dblClick();\r\n    } \r\n    else {\r\n      console.log(\"Sngl\");\r\n      if (singleClick) singleClick();\r\n      this.clickTimeout = setTimeout(\r\n        ()=>{\r\n              clearTimeout(this.clickTimeout)\r\n              this.clickTimeout = null\r\n            },\r\n        300);\r\n    }\r\n  }\r\n\r\n  onKeyUp(e){\r\n    if ((e.key === \"Escape\" || e.keyCode === 27) && this.deletableId) {\r\n      this.props.selectedIdRemoved(this.deletableId);\r\n    }\r\n  }\r\n\r\n  keyboardEventsSubscription() {\r\n    if (!this.deletableId && this.keyPressSubscribed) {\r\n      document.removeEventListener('keyup', this.onKeyUp);\r\n      this.keyPressSubscribed = false;\r\n    }\r\n    else if (this.deletableId && !this.keyPressSubscribed) {\r\n      document.addEventListener('keyup', this.onKeyUp);\r\n      this.keyPressSubscribed = true;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let items = db.results.getResults(this.props.selectedPlatforms, this.props.selectedTest, this.props.device, this.props.selectedResultIds);\r\n    let selectedCount = -1;\r\n    this.deletableId = null;\r\n    let title = \"\";\r\n\r\n    let selectedResultIds = this.props.selectedResultIds;\r\n    let expandedId = this.state.expandedId;\r\n\r\n    if (selectedResultIds && selectedResultIds.length > 0){\r\n      let selectedResults = selectedResultIds.map(id => db.results.getResultById(id));\r\n      items = selectedResults.concat(items);\r\n      selectedCount = selectedResults.length;\r\n      this.deletableId = selectedResults[selectedCount-1].id;\r\n\r\n      for (let i = 0; (i < 2) && (i < selectedResults.length); i++){\r\n        title += selectedResults[i].device;\r\n        if (i === 1 || i === selectedResults.length-1) title +=\" - \"; else title +=\", \";\r\n      }\r\n    }\r\n\r\n    if (this.props.setTitle) this.props.setTitle(title + l18n.pageTitle);\r\n    \r\n    this.keyboardEventsSubscription();\r\n\r\n    if (items && items.length > 0) {\r\n      db.results.setPercents(items, this.props.selectedTest);\r\n      return (\r\n        <>\r\n        {this.state.doubleTapHint && <Hint>{l18n.hintDoubleTap}</Hint>}\r\n        {items.map(i =>\r\n          <div \r\n            itemScope\r\n            key={i.id} \r\n            className={selectedCount-- > 0 ? \"item selected\" : (expandedId === i.id) ? \"item highlight\" : \"item\"} \r\n            id={selectedCount === 0 ? \"last\" : null}\r\n            title={this.getAllResults(i)}\r\n            onClick={\r\n              (e) =>\r\n              {\r\n                this.handleSingleDblClicks(\r\n                  e,\r\n                  //single click\r\n                  (!selectedResultIds || selectedResultIds.length === 0 || !selectedResultIds.includes(i.id)) ?\r\n                  () => {\r\n                    this.setState({expandedId: expandedId === i.id ? null : i.id});\r\n                    if (!this.state.doubleTapHint) this.setState({doubleTapHint:true});\r\n                  }\r\n                  : null,\r\n                  //dbl click\r\n                  (!selectedResultIds || selectedResultIds.length === 0 || !selectedResultIds.includes(i.id)) ?\r\n                  (e) => {\r\n                    let selection = window.getSelection();\r\n                    if (selection.empty) selection.empty(); \r\n                    this.props.resultSelected(i.id); \r\n                    if (expandedId === i.id) this.setState({expandedId: null});\r\n                  }\r\n                  : null\r\n                );\r\n              }\r\n            }\r\n          >\r\n            <TestResult\r\n              item={i}\r\n              percent={i.percent} // hack to make PureComponent re-render, somehow for selected id's percent inside 'item' is'nt considered as changed, though the filed differs. For non selcted ids it works fine\r\n              selectedTest={this.props.selectedTest }\r\n              selectedIdRemoved={this.props.selectedIdRemoved}\r\n              closableX={selectedCount > 0 && i.id !== db.results.yourDeviceId}\r\n              closableEsc={selectedCount === 0 && i.id !== db.results.yourDeviceId}\r\n            />\r\n            {((selectedCount >= 0) || (expandedId === i.id)) && <TestResultDetails item={i} noHighlight={expandedId === i.id} selectedTest={this.props.selectedTest }/> }\r\n          </div>)}\r\n      </>)\r\n    }\r\n    else return <div className=\"nothing\">{l18n.nothingToShow}</div>\r\n  }\r\n}\r\n\r\nexport default TestResults;","import React from 'react';\nimport windows from './img/windows.svg';\nimport macOS from './img/macos.svg';\nimport google_play from './img/google-play.svg';\nimport apk from './img/apk.svg';\nimport github from './img/github.svg';\nimport linux from './img/linux.svg';\n\nexport default function DownloadLinks(props){\n    return (\n        <>\n            <a href=\"https://github.com/maxim-saplin/CrossPlatformDiskTest/releases/download/2.3.3WPF/CPDT.zip\" \n            target=\"_blank\">\n                <img src={windows}/>\n                <br/>Windows\n            </a>\n            <a href=\"https://github.com/maxim-saplin/CrossPlatformDiskTest/releases/download/2.3.3/CPDT.app.zip\" \n            target=\"_blank\">\n                <img src={macOS}/>\n                <br/>macOS\n            </a>\n            <a href=\"https://play.google.com/store/apps/details?id=com.Saplin.CPDT\" \n            target=\"_blank\">\n                <img src={google_play}/><br/>\n                Android\n            </a>\n            <a href=\"https://github.com/maxim-saplin/CrossPlatformDiskTest/releases/download/2.3.9/com.Saplin.CPDT.apk\" \n            target=\"_blank\">\n                <img src={apk}/>\n                <br/>.APK\n            </a>\n            <a href=\"https://github.com/maxim-saplin/CrossPlatformDiskTest\" \n            target=\"_blank\">\n                <img src={github}/>\n                <br/>GitHub\n            </a>\n            <a href=\"https://github.com/maxim-saplin/NetCoreStorageSpeedTest/blob/master/README.md\" \n            style={{opacity: 0.65}}\n            target=\"_blank\">\n                <img src={linux}/>\n                <br/>Linux\n            </a>\n        </>\n    )\n}","import React from 'react';\nimport PressableLink from './PressableLink';\nimport DownloadLinks from './DownloadLinks';\n\nexport default function About(props){\n    return (\n        <>\n            {props.inApp && <br/>}\n            <PressableLink className={props.linkClass} onClick={props.toggleAbout}>[B]ack to Chart</PressableLink>\n            <br/>\n            {!props.inApp &&\n            <div class=\"downloadBox\">\n                <h1>Download CPDT Benchmark</h1>\n                <br/>\n                <DownloadLinks />    \n            </div>}\n\n            {!props.download &&\n            <> \n            <h1>How are the Chart Results Obtained</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                <em>Cross Platform Disk Test (CPDT)</em> application is used to measure storage performance. \n                {!props.inApp && <> See download links above.</>}\n                </p>\n                <p>\n                At least 3 test runs are done, \n                for each of the 5 performance metrics the best one is selected. I.e. the set of 5 metrics associated with a certain device \n                are the greatest of all the average thoughput values obtained through testing.\n                </p>\n                <p>\n                The tests are executed with the following options: file size is 1GB, write buffering is off, \n                in-memory cache is off. For very fast devices (sequential speeds above 1GB/s)\n                file size is increased to 2GB.\n                </p>\n                <p>\n                To avoid intereferences and side effects all running apps are closed, network activity is disabled (e.g. updates, downloads).\n                Since lack of free disk space affects performance (very noticable on mobile devices)\n                testing is conducted only if at least 70% of storage space is available.\n                </p>\n                <p>\n                In the test results you can find same device tested under different conditions\n                (e.g. encryption on/off, different file systems, different free space etc.)\n                which in such a case is noted under the device name.\n                </p>\n            </div>\n            <br/>\n            </>}\n            <h1>How does the App Work</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                This application uses standard OS's file API (WinAPI on Windows, POSIX on Mac and NDK on Android) to measure the speed of data transfer (in Megabytes per Second) between storage device (HDD, SSD, USB flash drive) and system memory(RAM). API calls are done through .NET Framework/Mono.\n                </p>\n                <img id=\"aboutEn\" alt=\"\"/>\n                <p>\n                Operations on computers and smartphones are executed by processor (CPU) against data which is loaded in system memory (RAM). This memory is not permanent and limited in size, that's why theres always a permanent storage (SSD, HDD, SD Card - aka \"disk/drive\"). In many cases the performance of the system is determined not only by CPU (which are usually in the spotlight of advertising and target of numerous benchmarks) but by the performance of memory, specifically RAM and storage. Official specs (especially with smartphones) give little description of storage characteristics, beyond capacity. This application attempts to give clear performance characteristics of memory by  isolating and measuring 3 aspects: the speed of reads (transfers from DRIVE-to-RAM). writes (RAM-to-DRIVE) and system memory (copying data from one area in RAM to another).\n                </p>\n                <p>\n                Sequential read and sequential write tests transfer large chunks of data (megabytes) between RAM and Storage. These tests are representative of such disk operations as large file copying, video recording/encoding/decoding etc.\n                </p>\n                <p>\n                Random tests run for 7 seconds each and do transfers in small chunks (4KB and 32KB) at random positions within the test file. These tests show how file system performance influence applications' load times, copying multiple small files, running database queries etc.\n                </p>\n                <p>\n                Write buffering - influences write test. Write operations use intermediary memory buffer and postpone data commit to latter more convenient time for better performance at a cost of less resilient writes (e.g. power failure and not committing to disk write buffer contents).\n                </p>\n                <p>\n                In-memory file cache - influences read tests. Any file operation requires from OS either transferring file data to memory or memory data to disk, OS will keep those memory pages in RAM until there's pressure for RAM from other apps. In case OS receives subsequent file read/write requests through API it will simply copy the cached memory pages from previous file operations and not utilize the actual storage device. Turning this option on is essentially a test of OS's file caching subsystem and RAM speed, rather than storage device test.\n                </p>\n            </div>\n        </>\n    )\n}","import React from 'react';\nimport PressableLink from './PressableLink';\nimport DownloadLinks from './DownloadLinks';\n\nexport default function About(props){\n    return (\n        <>\n            {props.inApp && <br/>}\n            <PressableLink className={props.linkClass} onClick={props.toggleAbout}>[B] Назад к списку</PressableLink>\n            <br/>\n            {!props.inApp &&\n            <div class=\"downloadBox\">\n                <h1>Скачать CPDT Бенчмарк</h1>\n                <br/>\n                <DownloadLinks />    \n            </div>}\n\n            {!props.download &&\n            <> \n            <h1>Как получены результаты для списка</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                Для измерения производительности используется приложение <em>Cross Platform Disk Test (CPDT)</em>\n                {!props.inApp && <>, скачать кооторое можно по ссылкам выше</>}.\n                </p>\n                <p>\n                Выполняется по меньшей мере 3 тестовых прогона, \n                для каждого из 5-ти показателей выбирается наилучший результат. Т.о. представленная для каждого устройства\n                пятерка результатов - это наилучшие из полученных значений средней пропускной способности.\n                </p>\n                <p>\n                Тесты выполняются со следующими настройками: размер файла 1Гб, буферизация записи выключена, \n                кеширование в памяти выключено. Для устройств с быстрыми дисками (последовательные скорости более 1Гб/с)\n                размер файла увеличивается до 2Гб.\n                </p>\n                <p>\n                Для исключения влияния на результаты сторонней активности выгружаются все приложения, отключается сетевая\n                активность (обновления, загрузки). Объем свободного пространства существенно влияет на скрость устройств \n                (данный эффект особо заметен на мобильных устройствах), тестирование проводится при не менее чем 70% свободного\n                места на диске.\n                </p>\n                <p>\n                Также в результатах можно найти измерения одного и того-же устройства в разных условиях (включено/выключено шифрование,\n                различные файловые системы, разное количество свободного места), о чем отдельно указано в примечании под названием\n                устройстваю.\n                </p>\n            </div>\n            <br/>\n            </>}\n            \n            <h1>Как работает приложение</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                Приложение использует  стандартный API операционной системы (WinAPI для Windows, POSIX на Mac и NDK на Android) для измерения скорости передачи данных (мегабайты/гигабайты в секунду) между устройством хранения (HDD, SSD, флешка) и системной памятью (ОЗУ). Вызовы к API операционных системы реализованы через .NET Framework/Mono.\n                </p>\n                <img id=\"aboutRu\" alt=\"\"/>\n                <p>\n                В компьютерах и смартфонах центральный процессор выполняет операции только над данными, которые загружены в оперативную память (ОЗУ). Данная память не постоянная и ограничена в размере, потому в системе всегда присутствует постоянное хранилище (SSD, жесткий диск, SD карта - для простоты \"диск\"). Во многих случаях производительность системы определяется не только процессором (который зачастую находится в центре внимания в рекламе и бенчмарках) но и производительностью памяти, в частности ОЗУ и диска. Официальные спецификации (особенно это актуально для смартфонов) дают мало информации о характеристиках памяти, кроме разве что объемов. Данное приложение пытается дать четкие характеристики производительности памяти посредством выделения и оценки трех аспектов: скорости чтения (передача данных с диска в ОЗУ), записи (ОЗУ-диск) и непосредственно скорости ОЗУ (копирование блоков внутри ОЗУ).\n                </p>\n                <p>\n                Тесты последовательной записи и чтения измеряют скорость операций, при которых большие блоки (мегабайты) данных передаются последовательно. Данные тесты соответствуют таким операциям, как копирование больших файлов, кодирование/декодирование видео и т.д.    \n                </p>\n                <p>\n                Тесты с произвольным доступом выполняются на протяжении нескольких десятков секунд и передают небольшие блоки данных (4КБ) в случайных позициях файла. Данные тесты показывают производительность файловой системы в таких задачах, как время загрузки приложений и ОС, копирование большого количества маленьких файлов, выполнение запросов баз данных и т.п.\n                </p>\n                <p>\n                Буферизация записи - влияет на тесты записи. При записи ОС может использовать промежуточный буфер в памяти и откладывать фактическую запись до поздних более удобных моментов (например когда соберется некоторое количество данных и можно за раз сохранить большую порцию данных). Данный режим увеличивает производительность записи за счет меньшей надежности (например, при отключении питания часть данных может быть потеряна).\n                </p>\n                <p>\n                Файловый кэш в памяти - влияет на тесты чтения. При любых файловых операциях ОС либо переносит данные с диска в память (чтение), либо из памяти на диск (запись). При этом данные будут оставлены в памяти до тех пор, пока она не потребуется другим приложениям. При получении запроса на чтение из файла, ОС проверит, считывались ли данные из файл ранее и содержится ли они уже в памяти. При наличии закэшированных данных в памяти ОС не будет обращаться к файлу и сделает копирование из памяти (которое существенно быстрее доступа к диску). Включение данной опции по сути тестирует не устройство хранение, а механизм кеширования и ОЗУ.\n                </p>\n            </div>\n        </>\n    )\n}","import React from 'react';\nimport PressableLink from './PressableLink';\nimport DownloadLinks from './DownloadLinks';\n\nexport default function About(props){\n    return (\n        <>\n            {props.inApp && <br/>}\n            <PressableLink className={props.linkClass} onClick={props.toggleAbout}>[R]etour aux résultats</PressableLink>\n            <br/>\n            {!props.inApp &&\n            <div class=\"downloadBox\">\n                <h1>Télécharger CPDT Benchmark</h1>\n                <br/>\n                <DownloadLinks />    \n            </div>}\n\n            {!props.download &&\n            <> \n            <h1>Comment les résultats du graphique sont-ils obtenus</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                <em>Cross Platform Disk Test (CPDT)</em> l'application est utilisée pour mesurer les performances de stockage. \n                {!props.inApp && <>Voir les liens de téléchargement ci-dessus.</>}\n                </p>\n                <p>\n                Au moins 3 essais sont effectués,\n                pour chacune des 5 mesures de performance, la meilleure est sélectionnée. C'est à dire. l'ensemble de 5 mesures associées à un certain appareil\n                sont les plus grandes de toutes les valeurs de débit moyen obtenues lors des tests.\n                </p>\n                <p>\n                Les tests sont exécutés avec les options suivantes: la taille du fichier est de 1 Go, le tampon d'écriture est désactivé,\n                le cache en mémoire est désactivé. Pour les appareils très rapides (vitesses séquentielles supérieures à 1 Go / s)\n                la taille du fichier est augmentée à 2 Go.\n                </p>\n                <p>\n                Pour éviter les interférences et les effets secondaires, toutes les applications en cours d'exécution sont fermées, l'activité réseau est désactivée (par exemple, mises à jour, téléchargements).\n                Étant donné que le manque d'espace disque libre affecte les performances (très visible sur les appareils mobiles)\n                le test est effectué sur au moins 70% de l'espace disponible sur le lecteur.\n                </p>\n                <p>\n                Dans les résultats du test, vous pouvez trouver le même appareil testé dans différentes conditions\n                (par exemple, chiffrement activé / désactivé, différents systèmes de fichiers, différents espaces libres, etc.)\n                qui dans un tel cas est noté sous le nom de l'appareil.\n                </p>\n            </div>\n            <br/>\n            </>}\n            <h1>Comment fonctionne l'application</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                Cette application utilise l’interface standard API du système d'exploitation (WinAPI pour Windows, POSIX pour Mac et NDK pour Android) pour mesurer la vitesse de transfert des données (mégaoctets / gigaoctets par seconde) entre le périphérique de stockage (HDD, SSD, clé USB) et la mémoire système (RAM). Les appels aux API sont réalisés via .NET Framework/Mono.\n                </p>\n                <img id=\"aboutEn\" alt=\"\"/>\n                <p>\n                Sur les ordinateurs et les smartphones, le processeur central n’effectue des opérations que sur les données chargées dans la RAM. Cette mémoire n’est pas permanente et sa taille est limitée, c’est pourquoi le système dispose toujours d’une mémoire permanente (SSD, disque dur, carte SD - ci-après le \"disque\"). Dans de nombreux cas, la performance du système est déterminée non seulement par le processeur (qui est souvent au centre d’attention des publicités et des benchmarks), mais aussi par la performance de la mémoire, en particulier de la RAM et du disque. Les spécifications officielles (notamment celles des smartphones) présentent peu d'informations sur les caractéristiques de la mémoire, sauf peut-être celles des volumes. Cette application cherche à définir clairement les performances de la mémoire en mettant en évidence et en évaluant trois aspects: la vitesse de lecture (transfert de données du disque vers la RAM), l’écriture (de la RAM vers le disque) et la vitesse de la RAM (copie de données d’une zone de RAM à une autre).\n                </p>\n                <p>\n                Les tests de lecture/écriture séquentielle mesurent la vitesse des opérations, dans lesquelles de gros blocs (mégaoctets) de données sont transmis de manière séquentielle. Ces tests représentent des opérations telles que la copie de fichiers volumineux, le codage/décodage vidéo, etc.\n                </p>\n                <p>\n                Les tests aléatoires durent plusieurs dizaines de secondes et transmettent de petits blocs de données (4 KB) dans des positions aléatoires dans un fichier de test. Ces tests montrent comment la performance du système de fichiers influence le temps de chargement des applications et du système d'exploitation, le processus de copie de plusieurs petits fichiers, l'exécution de requêtes de base de données, etc.\n                </p>\n                <p>\n                La mise en mémoire tampon de l'écriture - influence les tests d'écriture. Lors des opérations d'écriture, le système d'exploitation peut utiliser une mémoire tampon intermédiaire et retarder l’écriture réelle data commit à des moments plus opportuns (par exemple, lorsqu’une certaine quantité de données est collectée et qu’une grande partie des données peut être sauvegardée à la fois). Ce mode augmente les performances d'écriture au moyen d'une fiabilité moindre (par exemple, dans le cas de coupure de courant certaines données peuvent être perdues).\n                </p>\n                <p>\n                Le cache de fichier en mémoire - influence les tests de lecture. Pour toutes les opérations de fichiers, le système d'exploitation transfère les données du disque vers la mémoire (lecture) ou depuis la mémoire vers le disque (écriture). Le système d'exploitation stocke ces données dans la RAM jusqu'à ce que d'autres applications en aient besoin. À la réception de demandes de lecture/d’écriture d'un fichier, le système d'exploitation vérifie si les données ont déjà été lues depuis un fichier et si elles sont déjà en mémoire. S'il y a des données codées dans la mémoire, le système d'exploitation ne s'accédera pas au fichier et copiera de la mémoire (ce qui est beaucoup plus rapide que d'accéder au disque). En fait, l’activation de cette option ne teste pas le périphérique de stockage, mais le mécanisme de mise en cache et la RAM.\n                </p>\n            </div>\n        </>\n    )\n}","import React from 'react';\nimport PressableLink from './PressableLink';\nimport DownloadLinks from './DownloadLinks';\n\nexport default function About(props){\n    return (\n        <>\n            {props.inApp && <br/>}\n            <PressableLink className={props.linkClass} onClick={props.toggleAbout}>[B]返回排行榜</PressableLink>\n            <br/>\n            {!props.inApp &&\n            <div class=\"downloadBox\">\n                <h1>下载跨平台硬盘测试软件</h1>\n                <br/>\n                <DownloadLinks />    \n            </div>}\n\n            {!props.download &&\n            <> \n            <h1>使用教学与排行榜上传要求</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                <em>跨平台硬盘测试 (CPDT)</em> 是用于衡量储存设备性能的应用程序。\n                {!props.inApp && <> 您可在网页上方下载适用您设备的安装文件。</>}\n                </p>\n                <p>\n                测试时请至少进行3次测试。\n                测试结果分为5种数据，每种数据需选择3次测试中最高的一项。也就是说，关于设备的最高性能取决于3次测试中吞吐量数值的最大值。\n                </p>\n                <p>\n                测试前请将这些选项设置正确：测试文件大小为 1GB，关闭写入缓存, \n                关闭内存缓存。若设备具有高速读写（如顺序读写速度超过 1GB/s）\n                则测试文件大小提升至 2GB\n                </p>\n                <p>\n                为了避免干扰或其他副作用，测试时应关闭所有后台的应用程序与网络连接（如更新、下载）。\n                可用空间不足可能会影响性能（在移动设备上非常明显）。\n                请在测试前至少留出 70% 的可用储存空间。\n                </p>\n                <p>\n                测试结果可能会因设备的不同条件而发生变化。\n                （例如设备加密开启/关闭，文件系统不同，剩余空间不同等）\n                若出现以上情况请在设备名称下注明。\n                </p>\n            </div>\n            <br/>\n            </>}\n            <h1>本程序是如何运作的</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                本应用通过调用操作系统的标准文件 API（Windows 上的 WinAPI、Mac 上的 POSIX、Android 上的 NDK）来测试存储设备（机械硬盘、固态硬盘、USB 闪存驱动器）和内存（RAM）之间的数据传输速度（单位为 MB/s）。 API 调用通过 .NET Framework 与 Mono 完成。\n                </p>\n                <img id=\"aboutZh\" alt=\"\"/>\n                <p>\n                无论是家用计算机还是智能手机，处理器（CPU）的操作都依赖于加载在系统内存（RAM）中的数据。因为内存具有易失性且容量有限，这也是为什么我们需要外部储存设备（固态硬盘、机械硬盘、SD 卡等，它们也被称作“磁盘”或“驱动器”）。在很多情况下，系统的整体性能不光取决于 CPU（虽然 CPU 的权重的确很高，而且往往是产品营销和跑分软件中的头牌），还取决于储存——具体来说是内部储存（RAM）和外部储存。官方参数（特别是智能手机）往往对储存方面的性能语焉不详。本程序致力于通过独立且合理的3个维度，即：读取速度（从储存设备到内存）、写入速度（从内存到储存设备）、内存复制（从内存的一个区域到另一个区域）来全面评价系统的储存性能。\n                </p>\n                <p>\n                顺序读取与顺序写入测试通过在储存设备和 RAM 之间传输大块数据（MB 级别）来测试复制大文件、视频录制、编码、解码等日常应用环境中的储存性能。\n                </p>\n                <p>\n                随机读取与随机写入通过读写测试文件中的随机位置的小块数据（4KB 和 32KB）来测试文件系统性能对应用加载、小文件复制、数据库查询能力的影响。此测试的运行时间为 7 秒。\n                </p>\n                <p>\n                写入缓存 — 影响写入测试。通过在写入操作中使用中间缓冲区，将写入数据进行排序，以在最佳的写入时机写入数据来提升数据写入能力。其代价是较低的弹性写入能力（例如发生电源故障导致缓冲区内的数据丢失，或是写入那些无法使用缓冲区的数据）。\n                </p>\n                <p>\n                内存缓存 — 影响读取测试。在内存充足的情况下，任何向操作系统发出的文件操作请求，不论是将储存中的数据读入内存，还是将内存中的数据写入储存，操作系统都会将那些内存页保留在内存中待用。后续如果操作系统通过 API 收到的文件读取/写入请求，操作系统将会直接调用之前保留在内存中的内存页，而不是实际的储存设备。启用此选项时，测试结果所反映的是操作系统的内存缓存性能以及内存本身的性能，而非储存设备的性能。\n                </p>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\nimport PressableLink from './PressableLink';\nimport DownloadLinks from './DownloadLinks';\n\nexport default function About(props){\n    return (\n        <>\n            {props.inApp && <br/>}\n            <PressableLink className={props.linkClass} onClick={props.toggleAbout}>[B]返回排行榜</PressableLink>\n            <br/>\n            {!props.inApp &&\n            <div class=\"downloadBox\">\n                <h1>下載跨平臺硬碟測試軟體</h1>\n                <br/>\n                <DownloadLinks />    \n            </div>}\n\n            {!props.download &&\n            <> \n            <h1>使用教學與排行榜上傳要求</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                <em>跨平臺硬碟測試 (CPDT)</em> 是用於衡量儲存裝置效能的應用程式。\n                {!props.inApp && <> 您可在網頁上方下載適用您裝置的安裝檔案。</>}\n                </p>\n                <p>\n                測試時請至少進行3次測試。\n                測試結果分為5種資料，每種資料需選擇3次測試中最高的一項。也就是說，關於裝置的最高效能取決於3次測試中吞吐量數值的最大值。\n                </p>\n                <p>\n                測試前請將這些選項設定正確：測試檔案大小為 1GB，關閉寫入快取, \n                關閉記憶體快取。若裝置具有高速讀寫（順序讀寫速度超過 1GB/s）\n                則測試檔案大小提升至 2GB。\n                </p>\n                <p>\n                為了避免干擾或其他副作用，測試時應關閉所有後臺的應用程式與網路連線（如更新、下載）。\n                可用空間不足可能會影響效能（在移動裝置上非常明顯）。\n                請在測試前至少留出 70% 的可用儲存空間。\n                </p>\n                <p>\n                測試結果可能會因裝置的不同條件而發生變化。\n                （例如裝置加密開啟/關閉，檔案系統不同，剩餘空間不同等）\n                若出現以上情況請在裝置名稱下注明。\n                </p>\n            </div>\n            <br/>\n            </>}\n            <h1>本程式是如何運作的</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                本應用通過呼叫作業系統的標準檔案 API（Windows 上的 WinAPI、Mac 上的 POSIX、Android 上的 NDK）來測試儲存裝置（機械硬碟、固態硬碟、USB 快閃記憶體驅動器）和記憶體（RAM）之間的資料傳輸速度（單位為 MB/s）。 API 呼叫通過 .NET Framework 與 Mono 完成。\n                </p>\n                <img id=\"aboutZht\" alt=\"\"/>\n                <p>\n                無論是家用計算機還是智慧手機，處理器（CPU）的操作都依賴於載入在系統記憶體（RAM）中的資料。因為記憶體具有易失性且容量有限，這也是為什麼我們需要外部儲存裝置（固態硬碟、機械硬碟、SD 卡等，它們也被稱作“磁碟”或“驅動器”）。在很多情況下，系統的整體效能不光取決於 CPU（雖然 CPU 的權重的確很高，而且往往是產品營銷和跑分軟體中的頭牌），還取決於儲存——具體來說是內部儲存（RAM）和外部儲存。官方參數（特別是智慧手機）往往對儲存方面的效能語焉不詳。本程式致力於通過獨立且合理的3個維度，即：讀取速度（從儲存裝置到記憶體）、寫入速度（從記憶體到儲存裝置）、記憶體複製（從記憶體的一個區域到另一個區域）來全面評價系統的儲存效能。\n                </p>\n                <p>\n                順序讀取與順序寫入測試通過在儲存裝置和 RAM 之間傳輸大塊資料（MB 級別）來測試複製大檔案、視訊錄製、編碼、解碼等日常應用環境中的儲存效能。\n                </p>\n                <p>\n                隨機讀取與隨機寫入通過讀寫測試檔案中的隨機位置的小塊資料（4KB 和 32KB）來測試檔案系統效能對應用載入、小檔案複製、資料庫查詢能力的影響。此測試的執行時間為 7 秒。\n                </p>\n                <p>\n                寫入快取 — 影響寫入測試。通過在寫入操作中使用中間緩衝區，將寫入資料進行排序，以在最佳的寫入時機寫入資料來提升資料寫入能力。其代價是較低的彈性寫入能力（例如發生電源故障導致緩衝區內的資料丟失，或是寫入那些無法使用緩衝區的資料）。\n                </p>\n                <p>\n                記憶體快取 — 影響讀取測試。在記憶體充足的情況下，任何向作業系統發出的檔案操作請求，不論是將儲存中的資料讀入記憶體，還是將記憶體中的資料寫入儲存，作業系統都會將那些記憶體頁保留在記憶體中待用。後續如果作業系統通過 API 收到的檔案讀取/寫入請求，作業系統將會直接呼叫之前保留在記憶體中的記憶體頁，而不是實際的儲存裝置。啟用此選項時，測試結果所反映的是作業系統的記憶體快取效能以及記憶體本身的效能，而非儲存裝置的效能。\n                </p>\n            </div>\n        </>\n    )\n}\n","import React, { Component } from 'react'\nimport ReactSwipeEvents from 'react-swipe-events'\nimport l18n from './translations'\nimport PressableLink from './PressableLink'\nimport ListSelector from './ListSelector'\nimport Search from './Search'\nimport TestResults from './TestResults'\nimport Hint from './Hint'\nimport AboutEn from './AboutEn'\nimport AboutRu from './AboutRu'\nimport AboutFr from './AboutFr'\nimport AboutZh from './AboutZh'\nimport AboutZht from './AboutZht'\nimport db from './data'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.platformClick = this.platformClick.bind(this);\n    this.testClick = this.testClick.bind(this);\n    this.searchChanged = this.searchChanged.bind(this);\n    this.resultSelected = this.resultSelected.bind(this);\n    this.selectedIdRemoved = this.selectedIdRemoved.bind(this);\n    this.toggleAbout = this.toggleAbout.bind(this);\n    this.swipe = this.swipe.bind(this);\n    this.wpf = \"wpf\";\n    this.android = \"android\";\n    this.macos = \"macos\";\n\n    this.urlParams = new URLSearchParams(window.location.search ? window.location.search : \"\");\n    \n    this.selectedIdsParam = \"selected\";\n    this.aboutParam = \"about\";\n    this.showDownloadParam = \"download\";\n    this.qParam = \"q\";\n    this.inappParam = \"inapp\";\n\n    let selectedResultIds = this.getSelectedIdsFromParam()\n    let inAppPlatform = this.urlParams.get(this.inappParam) ? this.urlParams.get(this.inappParam).toLocaleLowerCase() : null;\n    let selectedPlatforms = db.dictionaries.getPlatforms().map(p => p.key);\n    let q = this.urlParams.get(this.qParam) ? this.urlParams.get(this.qParam).toLocaleLowerCase() : null;\n\n    ({ selectedPlatforms, selectedResultIds } = this.inAppAdjustments(inAppPlatform, selectedPlatforms, selectedResultIds));\n\n    this.state = {\n      selectedTest: db.dictionaries.getTests()[0].key,\n      selectedResultIds: selectedResultIds,\n      inAppPlatform: inAppPlatform,\n      selectedPlatforms: selectedPlatforms,\n      device: q,\n      showAbout: this.urlParams.has(this.aboutParam),\n      showDownload: this.urlParams.has(this.showDownloadParam)\n    };\n\n    this.title = this.urlParams.get(\"ttl\") ? decodeURIComponent(this.urlParams.get(\"ttl\")) : null;\n\n    this.renderCounter = 0;\n  }\n\n  inAppAdjustments(inAppPlatform, selectedPlatforms, selectedResultIds) {\n    if (inAppPlatform) {\n      if (inAppPlatform === this.wpf) selectedPlatforms = [db.dictionaries.Windows];\n      else if (inAppPlatform === this.android) selectedPlatforms = [db.dictionaries.Android];\n      else if (inAppPlatform === this.macos) selectedPlatforms = [db.dictionaries.macOS];\n      let yourDevice = this.urlParams.get(\"yd\");\n      if (yourDevice) {\n        let yd = null;\n        try {\n          yd = JSON.parse(yourDevice);\n          if (yd) {\n            yd.platform = selectedPlatforms[0];\n            db.results.addYourDeviceResult(yd);\n          }\n          selectedResultIds = [db.results.yourDeviceId];\n        }\n        catch { }\n      }\n    }\n    return { selectedPlatforms, selectedResultIds };\n  }\n\n  getSelectedIdsFromParam(){\n    let param = this.urlParams.get(this.selectedIdsParam);\n    let ids = [];\n\n    if (param) {\n      let split = param.split(\",\");\n      \n      for (let i = 0; i < split.length; i++){\n        let id = parseInt(split[i]);\n        if (Number.isInteger(id) && db.results.idExists(id) && !ids.includes(id)){\n          ids.push(id);\n        }\n      }\n    }\n\n    return ids;\n  }\n\n  addSelectedIdsToParam(ids){\n    if (ids.length > 0){ \n      let param = \"\";\n\n      for (let i = 0; i < ids.length; i++) {\n        param += ids[i];\n        if (i !== ids.length-1) param+=\",\";\n      }\n\n      this.urlParams.set(this.selectedIdsParam, param);\n    }\n    else {\n      this.urlParams.delete(this.selectedIdsParam);\n    }\n    window.history.replaceState({},null,\"?\"+this.urlParams.toString());\n  }\n\n  testClick(key){\n    this.setState({selectedTest: key, swipeHint: true});\n  }\n\n  swipe(left){\n    let t = db.dictionaries.getTests();\n    let i = 0;\n\n    for (i; i < t.length; i++){\n      if (t[i].key === this.state.selectedTest) break;\n    }\n\n    if (left) i++; else i--;\n\n    if (i < 0) i = t.length-1;\n    else if (i >= t.length) i = 0;\n    \n    this.setState({selectedTest: t[i].key, swipeHint: true});\n  }\n\n  platformClick(key){\n    this.setState({selectedPlatforms: key});\n  }\n\n  searchChanged(val){\n    this.setState({device: val});\n  }\n\n  resultSelected(resultId, clearDevice){\n    let selectedResultIds = this.state.selectedResultIds;\n    selectedResultIds.push(resultId);\n    if (clearDevice) {\n      this.setState({device: \"\"});\n    }\n    this.setSelectedIds(selectedResultIds);\n  }\n\n  setSelectedIds(selectedResultIds) {\n    this.setState({ selectedResultIds: selectedResultIds });\n    this.addSelectedIdsToParam(selectedResultIds);\n  }\n\n  selectedIdRemoved(id){\n    let selectedResultIds = this.state.selectedResultIds;\n    selectedResultIds = selectedResultIds.filter(i => i !== id);\n    this.setSelectedIds(selectedResultIds);\n  }\n\n  setTitle(title){\n    document.title = title;\n  }\n\n  toggleAbout(){\n    let showAbout = !(this.state.showAbout || this.state.showDownload);\n\n    this.setState({showAbout: showAbout, showDownload: false});\n\n    if (showAbout) this.urlParams.set(this.aboutParam, \"\");\n    else {\n      this.urlParams.delete(this.aboutParam);\n      this.urlParams.delete(this.showDownloadParam);\n    }\n\n    window.history.replaceState({},null,\"?\"+this.urlParams.toString());\n  }\n\n  render() {\n    let stl = this.setTitle;\n\n    if (this.title){ // TestResults can change title, upon first load override title with the value from parm\n      stl(this.title);\n      this.title = null;\n      stl = null;\n    }\n    else {\n      if (this.state.showAbout) this.setTitle(l18n.aboutTitle);\n      else if (this.state.showDownload) this.setTitle(l18n.downloadTitle);\n      else this.setTitle(l18n.title);\n    }\n\n    this.renderCounter++;\n\n    let helpLinkClass = \"leftCorner\";\n    if (this.state.inAppPlatform) helpLinkClass +=\" inapp\";\n    if (this.renderCounter < 2 ) helpLinkClass +=\" textColorVibration\";\n\n    return (\n      !this.state.showAbout && !this.state.showDownload ?\n      <ReactSwipeEvents id=\"swipe\" onSwipedLeft={() => this.swipe(true)} onSwipedRight={() => this.swipe(false)} threshold={75}>\n        <>\n          <div className={this.state.inAppPlatform !== this.wpf ? \"pad\" : null}>\n            {!this.state.inAppPlatform && <h1>{l18n.title}: </h1>}\n            {!this.state.inAppPlatform && <h2>{l18n.subTitle}</h2>}\n            <PressableLink className={helpLinkClass} onClick={this.toggleAbout}>[?]</PressableLink>\n            \n            <ListSelector itemClick={this.platformClick} selectedKey={this.state.selectedPlatforms} \n              items={db.dictionaries.getPlatforms()} selectAll={true} />\n            <ListSelector itemClick={this.testClick} selectedKey={this.state.selectedTest} \n              items={db.dictionaries.getTests()} />\n            <Search searchChanged={this.searchChanged} enterPressed={this.resultSelected} value={this.state.device}/>\n            <br/>\n            <TestResults \n              selectedTest={this.state.selectedTest}\n              selectedPlatforms={this.state.selectedPlatforms}\n              selectedResultIds={this.state.selectedResultIds}\n              selectedIdRemoved={this.selectedIdRemoved}\n              resultSelected={this.resultSelected}\n              device={this.state.device}\n              setTitle={stl}\n            />        \n          </div>\n          {'ontouchstart' in window && this.state.swipeHint && <Hint>{l18n.hintSwipe}</Hint>}\n        </>\n      </ReactSwipeEvents>\n      : (\n        l18n.locale === l18n.ruLocale \n          ? <AboutRu toggleAbout={this.toggleAbout} linkClass={helpLinkClass} inApp={this.state.inAppPlatform != null} download={this.state.showDownload}/> \n        : l18n.locale === l18n.frLocale \n          ? <AboutFr toggleAbout={this.toggleAbout} linkClass={helpLinkClass} inApp={this.state.inAppPlatform != null} download={this.state.showDownload}/> \n        : l18n.locale === l18n.zhtLocale\n            ? <AboutZht toggleAbout={this.toggleAbout} linkClass={helpLinkClass} inApp={this.state.inAppPlatform != null} download={this.state.showDownload}/> \n        : l18n.locale === l18n.zhLocale \n            ? <AboutZh toggleAbout={this.toggleAbout} linkClass={helpLinkClass} inApp={this.state.inAppPlatform != null} download={this.state.showDownload}/> \n        : <AboutEn toggleAbout={this.toggleAbout} linkClass={helpLinkClass} inApp={this.state.inAppPlatform != null} download={this.state.showDownload}/>)\n        );\n  }\n}\n\nexport default App;","import 'babel-polyfill';\nimport 'url-search-params-polyfill';\nimport 'whatwg-fetch'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './index_dark.css';\nimport App from './App';\nimport l18n from './translations';\nimport db from './data';\n\nlet benchmark = false;\nlet testDb = false;\nlet themeParam = null;\n\ninitParams(); \nstart();\n\nfunction start(){\n  l18n.init();\n  document.title = l18n.pageTitle;\n  if (themeParam !== \"white\") document.body.className=\"dark\";\n\n  db.init(testDb).then(() => {\n    ReactDOM.render(<App />, document.getElementById('root'));\n    if (benchmark){\n      document.title = \"Running benchmark...\";\n      runBenchmark();\n    }\n  });\n}\n\nfunction initParams(){\n  const urlParams = new URLSearchParams(window.location.search);\n  themeParam = urlParams.get(\"theme\");\n  if (urlParams.get(\"benchmark\") === \"true\") { benchmark = true; testDb = true; }\n  else if (urlParams.get(\"testdb\") === \"true\") testDb = true\n}\n\nfunction runBenchmark(){\n  let t1 = performance.now();\n  const repeats = 5;\n  for (var i = 0; i < repeats; i++){\n    ReactDOM.render(<span>Swap</span>, document.getElementById('root'))\n    ReactDOM.render(<App />, document.getElementById('root'))\n  }\n  let t2 = performance.now();\n\n  let result = \"Rendering page took on average: \" + ((t2-t1)/repeats).toFixed(2) + \"ms\";\n  document.title = \"Becnchmark completed. \" + result;\n  alert(result);\n}"],"sourceRoot":""}