{"version":3,"sources":["data/dictionaries.js","translations/ru.js","translations/fr.js","translations/index.js","translations/en.js","ListSelector.js","Search.js","data/results.js","data/db.js","data/index.js","TestResults.js","App.js","index.js"],"names":["platforms","tests","translations","pageTitle","title","subTitle","seqWrite","seqRead","randWrite","randRead","memCopy","seqWrite_s","seqRead_s","randWrite_s","randRead_s","memCopy_s","Android","macOS","Windows","all","mbps","gbps","helloWorld","locale","param","URLSearchParams","window","location","search","get","lang","toLocaleLowerCase","navigator","language","toLowerCase","includes","ru","fr","Object","keys","forEach","key","ListSelector","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","selectAll","keyPress","selectedKey","length","filter","k","push","items","map","p","e","document","activeElement","HTMLBodyElement","shortcuts","has","val","Array","isArray","i","itemClick","keyPressSubscribed","removeEventListener","prevItems","Map","shortcut","sc","arr","set","size","addEventListener","initShortcuts","_this2","updateShortcuts","react_default","a","createElement","className","onClick","name","l18n","Component","Search","textChanged","state","extraSpaces","blink","textInput","React","createRef","searchChanged","target","innerText","setState","contentEditable","ref","onInput","onFocus","onBlur","current","focus","PureComponent","shortcutRegex","getEntities","obj","match","addShortcut","dictionaries","getTests","data","getPlatforms","results","getResults","platfroms","test","device","result","r","platform","sort","b","maxVal","percent","db_url","db","init","useTest","fetchVersion","Promise","resolve","fetch","cache","then","response","json","storage","setItem","v","version","fetchDb","JSON","stringify","promise","localStorage","getItem","parse","_unused","localDbVersion","initFake","id","platfrom","deviceDetail","deviceComment","deviceYear","dateTested","TestResults","text","selectedPlatforms","selectedTest","getAllResults","style","width","App","platformClick","testClick","src_ListSelector","src_Search","src_TestResults","urlParams","body","benchmark","testDb","benchmarkParam","testDbParam","ReactDOM","render","src_App","getElementById","t1","performance","now","toFixed","alert","runBenchmark"],"mappings":"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","file":"static/js/main.673b1621.chunk.js","sourcesContent":["import l18n from '../translations';\r\n\r\nlet platforms, tests;\r\nconst shortcutRegex = /[^\\[]+(?=\\])/;\r\n\r\nfunction addShortcut(obj) {\r\n  let match = obj.name.match(shortcutRegex);\r\n  if (match && match.length === 1)\r\n    obj.shortcut = match[0].toLowerCase();\r\n}\r\n\r\nfunction getEntities(items) {\r\n  return items.map(i => {\r\n      let obj = {\r\n        key: i,\r\n        name: l18n[i] ? l18n[i] : i,\r\n        shortcut: null\r\n      };\r\n      addShortcut(obj);\r\n      return obj;\r\n    });\r\n}\r\n\r\nconst dictionaries = \r\n{\r\n  getTests : function(){\r\n    if (!tests) tests = getEntities(this.data.tests);\r\n    return tests;\r\n  },  \r\n\r\n  getPlatforms : function(){\r\n      if (!platforms) platforms = getEntities(this.data.platforms);\r\n\r\n      return platforms;\r\n  }\r\n}\r\n\r\nexport default dictionaries;","const translations = \r\n{\r\n    pageTitle:  \"CPDT: База результатов\",\r\n    title: \"CPDT. Тестирование SSD/HDD\",\r\n    subTitle: \"Скорости устройств\",\r\n    seqWrite: \"[П]оследовательная запись\",\r\n    seqRead: \"[П]оследовательное чтение\",\r\n    randWrite: \"[П]роизвольная запись (4КБ)\",\r\n    randRead: \"[П]роизвольное чтение (4КБ)\",\r\n    memCopy: \"[К]опирование памяти\",\r\n\r\n    seqWrite_s: \"[П]осл. запись\",\r\n    seqRead_s: \"[П]осл. чтение\",\r\n    randWrite_s: \"[П]роизв. запись (4КБ)\",\r\n    randRead_s: \"[П]роизв. чтение (4КБ)\",\r\n    memCopy_s: \"[К]оп. памяти\",\r\n\r\n    Android: \"[A]ndroid\",\r\n    macOS: \"mac[O]S\",\r\n    Windows: \"[W]indows\",\r\n    all: \"Все\",\r\n    mbps: \"МБ/с\",\r\n    gbps: \"ГБ/с\"\r\n}\r\n\r\nexport default translations;","const translations = \r\n{\r\n    helloWorld:  \"Bonjour!\",\r\n}\r\n\r\nexport default translations;","import en from './en';\r\nimport ru from './ru';\r\nimport fr from './fr';\r\n\r\nconst enLocale = \"en\";\r\nconst ruLocale = \"ru\";\r\nconst frLocale = \"fr\";\r\nconst langParam = \"lang\";\r\n\r\n//Default texts\r\nconst translations = en;\r\n\r\n//Must be executed before accesing the translations. Updates default texts with locale specific translations. If there's no translation, default text will be used\r\ntranslations.init = function() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const param = urlParams.get(langParam);\r\n\r\n    let lang = enLocale;\r\n\r\n    if (param) {\r\n        lang = param.toLocaleLowerCase();\r\n    }\r\n    else{\r\n        lang = navigator.language.toLowerCase();\r\n    }\r\n\r\n    let locale;\r\n\r\n    if (lang.includes(ruLocale)) {\r\n        locale = ru;\r\n    }\r\n    else if (lang.includes(frLocale)) {\r\n        locale = fr;\r\n    }\r\n\r\n    if (locale)\r\n        Object.keys(translations).forEach((key) => {\r\n            if (locale[key])\r\n                translations[key] = locale[key];\r\n        });\r\n};\r\n\r\nexport default translations;","const translations = \r\n{\r\n    pageTitle: \"CPDT: Results Database\",\r\n    title: \"CPDT SSD/HDD Benchmark\",\r\n    subTitle: \"Performance Chart\",\r\n    seqWrite: \"[S]equential write\",\r\n    seqRead: \"[S]equential read\",\r\n    randWrite: \"[R]andom write (4KB)\",\r\n    randRead: \"[R]andom read (4KB)\",\r\n    memCopy: \"[M]emory copy\",\r\n\r\n    seqWrite_s: \"[S]eq. write\",\r\n    seqRead_s: \"[S]eq. read\",\r\n    randWrite_s: \"[R]and. write (4KB)\",\r\n    randRead_s: \"[R]and. read (4KB)\",\r\n    memCopy_s: \"[M]em. copy\",\r\n\r\n    Android: \"[A]ndroid\",\r\n    macOS: \"mac[O]S\",\r\n    Windows: \"[W]indows\",\r\n    all: \"All\",\r\n    mbps: \"MB/s\",\r\n    gbps: \"GB/s\"\r\n}\r\n\r\nexport default translations;","import React, { Component } from 'react';\r\nimport l18n from './translations';\r\n\r\nclass ListSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.selectAll = this.selectAll.bind(this);\r\n    this.keyPress = this.keyPress.bind(this);\r\n  }\r\n\r\n  toggle(key) {\r\n    if (this.props.selectedKey.includes(key)) { // remove key\r\n      if (this.props.selectedKey.length > 1) {\r\n        return this.props.selectedKey.filter(k => k !== key);\r\n      }\r\n      else {\r\n        return this.props.selectedKey;\r\n      }\r\n    }\r\n\r\n    this.props.selectedKey.push(key);\r\n\r\n    return this.props.selectedKey;\r\n  }\r\n\r\n  selectAll() {\r\n    return this.props.items.map(p => p.key);\r\n  }\r\n\r\n  keyPress(e) {\r\n    if (document.activeElement instanceof HTMLBodyElement){\r\n      if (this.shortcuts.has(e.key))\r\n      {\r\n        let val = this.shortcuts.get(e.key);\r\n\r\n        //TODO - add suport for repeting shortcuts in multiselect list\r\n        if (Array.isArray(val)){ // single select, repeat shortcuts\r\n          let key = val[0].key;\r\n          \r\n          for (let i = 0; i < val.length; i++){\r\n            if (val[i].key === this.props.selectedKey){\r\n              if (i+1 < val.length) key = val[i+1].key;\r\n            }\r\n          }\r\n\r\n          this.props.itemClick(key);\r\n        }\r\n        else if (Array.isArray(this.props.selectedKey)){ // multi select select, non-repeat shortcuts        \r\n          this.props.itemClick(this.toggle(val.key));\r\n        } else if (val.key !== this.props.selectedKey) { // single select, non-repeat shortcuts\r\n          this.props.itemClick(val.key);\r\n        } \r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    if (this.keyPressSubscribed)\r\n      document.removeEventListener('keypress', this.keyPress);\r\n  }\r\n\r\n  initShortcuts() {\r\n    this.prevItems = this.props.items;\r\n    this.shortcuts = new Map();\r\n    for (var i in this.prevItems) {\r\n      if (this.prevItems[i].shortcut) {\r\n        if (!this.shortcuts.has(this.prevItems[i].shortcut))\r\n          this.shortcuts.set(this.prevItems[i].shortcut, this.prevItems[i]);\r\n        else {\r\n          let sc = this.shortcuts.get(this.prevItems[i].shortcut);\r\n\r\n          if (Array.isArray(sc)) sc.push(this.prevItems[i]);\r\n          else {\r\n            let arr = [sc, this.prevItems[i]];\r\n            this.shortcuts.set(this.prevItems[i].shortcut, arr);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.shortcuts.size > 0) {\r\n      document.addEventListener('keypress', this.keyPress);\r\n      this.keyPressSubscribed = true;\r\n    }\r\n    else if (this.keyPressSubscribed) {\r\n      document.removeEventListener('keypress', this.keyPress);\r\n      this.keyPressSubscribed = false;\r\n    }\r\n  }\r\n\r\n  updateShortcuts() {\r\n    if (!this.prevItems) {\r\n      this.initShortcuts();\r\n    }\r\n    else if (this.prevItems !== this.props.items) {\r\n      this.initShortcuts();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.updateShortcuts();\r\n\r\n    if (this.props.items)\r\n      return (\r\n        <ul>\r\n          {\r\n            Array.isArray(this.props.selectedKey) ?\r\n              this.props.items.map( // multiselect\r\n                i =>\r\n                  <li\r\n                    key={i.key}\r\n                    className={this.props.selectedKey.includes(i.key) ? \"selected\" : null}\r\n                    onClick={() => this.props.itemClick(this.toggle(i.key))}\r\n                  >\r\n                    {i.name}\r\n                  </li>\r\n              )\r\n              :\r\n              this.props.items.map( //single select\r\n                i =>\r\n                  <li\r\n                    key={i.key}\r\n                    className={this.props.selectedKey === i.key ? \"selected\" : null}\r\n                    onClick={() => this.props.itemClick(i.key)}\r\n                  >\r\n                    {i.name}\r\n                  </li>\r\n              )\r\n          }\r\n\r\n          {\r\n            this.props.selectAll && <li onClick={() => this.props.itemClick(this.selectAll())}>{l18n.all}</li>\r\n          }\r\n        </ul>\r\n      )\r\n\r\n      return null;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default ListSelector;","import React, { PureComponent } from 'react';\r\n\r\nclass Search extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.textChanged = this.textChanged.bind(this);\r\n    this.state = {extraSpaces: true, blink:false};\r\n    this.textInput = React.createRef();\r\n  }\r\n\r\n  textChanged(e){\r\n    if (this.props.searchChanged) this.props.searchChanged(e.target.innerText);\r\n    if (e.target.innerText && this.state.extraSpaces) this.setState({extraSpaces: false});\r\n    else if (!e.target.innerText && !this.state.extraSpaces) this.setState({extraSpaces: true});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"searchBox\">\r\n        <span contentEditable=\"true\" ref={this.textInput} onInput={this.textChanged} onFocus={() => {this.setState({blink:true})}} onBlur={() => {this.setState({blink:false})}}></span>\r\n        <span className={this.state.blink ? \"blink\" : \"\"} onClick={() => {this.textInput.current.focus()}}>{!this.state.blink && this.state.extraSpaces && \"\\xA0\\xA0\\xA0\\xA0\"}_</span>\r\n        &lt;/\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;","const results = \r\n{\r\n  getResults: function(platfroms, test, device){\r\n    let result = this.data.results;\r\n    \r\n    if (platfroms && Array.isArray(platfroms)){\r\n      result = result.filter(r => platfroms.includes(r.platform));\r\n    }\r\n\r\n    if (device){\r\n      result = result.filter(r => r.device.toLowerCase().includes(device.toLowerCase()));\r\n    }\r\n\r\n    if (test){\r\n      result.sort(\r\n        (a,b) => \r\n          b[test] - a[test]\r\n        );\r\n      if (result.length > 0){\r\n        let maxVal = result[0][test];\r\n        for (var i = 0; i < result.length; i++){\r\n          result[i].percent = result[i][test]/maxVal;\r\n        }\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default results;","import dictionaries from './dictionaries';\r\nimport results from './results';\r\n\r\nconst db_version_url = \"https://raw.githubusercontent.com/maxim-saplin/cpdt_results/master/Results_version.json\";\r\nlet db_url = \"https://raw.githubusercontent.com/maxim-saplin/cpdt_results/master/Results.json\";\r\nconst db_url_test = \"https://raw.githubusercontent.com/maxim-saplin/cpdt_results/master/Results_test.json\";\r\nconst db_version_sotrage_key = \"cpdt_db_version\";\r\nconst db_sotrage_key = \"cpdt_db\";\r\n\r\nconst db = {\r\n    dictionaries : dictionaries,\r\n    results : results,\r\n    \r\n    init: function (useTest){\r\n        let fetchVersion = () => {\r\n            return new Promise (resolve => {\r\n                fetch(db_version_url, {cache: \"no-store\"})\r\n                .then(response => {\r\n                    return response.json();\r\n                })\r\n                .then(result => {\r\n                    storage.setItem(db_version_sotrage_key, result.v);\r\n                    this.version = result.v;\r\n                    resolve(result.v);\r\n                });\r\n            });\r\n        };\r\n\r\n        let fetchDb = () => {\r\n            return new Promise (resolve => {\r\n                fetch(db_url, {cache: \"no-store\"})\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    storage.setItem(db_sotrage_key, JSON.stringify(result));\r\n                    dictionaries.data = result;\r\n                    results.data = result;\r\n                    resolve(result);\r\n                })\r\n            });\r\n        };\r\n\r\n        let promise = null;\r\n\r\n        let storage = window.localStorage;\r\n\r\n        if (useTest){\r\n          db_url = db_url_test;\r\n          storage.setItem(db_version_sotrage_key,\"test\");\r\n        }\r\n\r\n        let data = storage.getItem(db_sotrage_key);\r\n        if (data) {\r\n          try { data = JSON.parse(data);} catch{};\r\n          if (!data.results) data = null; // shallow check for corrupt data\r\n        }\r\n        let localDbVersion = storage.getItem(db_version_sotrage_key);\r\n\r\n        if (data){\r\n            promise = new Promise( resolve => {\r\n                fetchVersion()\r\n                .then(result => {\r\n                    if (useTest){\r\n                      storage.setItem(db_version_sotrage_key,\"test\");\r\n                    }\r\n\r\n                    if (result !== localDbVersion){\r\n                        fetchDb().then(result => resolve(result));                    \r\n                    }\r\n                    // local data is up to date\r\n                    else{ \r\n                        dictionaries.data = data;\r\n                        results.data = data;\r\n                        resolve(data)\r\n                    };\r\n                });\r\n            });\r\n        }\r\n        else{\r\n            fetchVersion();\r\n            promise = fetchDb();\r\n        }\r\n\r\n        return promise;\r\n    },\r\n\r\n    initFake: function() {\r\n      dictionaries.data = {\"results\":[{\"id\":\"1\",\"device\":\"Xiaomi Mi8 SE\",\"platfrom\":\"Android\",\"deviceDetail\":\"Snapdragon 710, 64GB\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"23.10.2018\",\"seqWrite\":\"110\",\"seqRead\":\"299\",\"randWrite\":\"18,9\",\"randRead\":\"9,5\",\"memCopy\":\"4,65\"},{\"id\":\"2\",\"device\":\"Samsung Galaxy S9\",\"platfrom\":\"Android\",\"deviceDetail\":\"Exynos 9810, 64Gb\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"04.10.2018\",\"seqWrite\":\"118\",\"seqRead\":\"654\",\"randWrite\":\"1,72\",\"randRead\":\"14,43\",\"memCopy\":\"12,7\"},{\"id\":\"3\",\"device\":\"Essential Phone PH-1\",\"platfrom\":\"Android\",\"deviceDetail\":\"Snapdragon 835, 128GB\",\"deviceComment\":\"\",\"deviceYear\":\"2017\",\"dateTested\":\"30.09.2018\",\"seqWrite\":\"125\",\"seqRead\":\"440\",\"randWrite\":\"4,3\",\"randRead\":\"17,4\",\"memCopy\":\"6,6\"},{\"id\":\"4\",\"device\":\"15\\\" MacBook Pro\",\"platfrom\":\"macOS\",\"deviceDetail\":\"macOS, APFS\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"03.10.2018\",\"seqWrite\":\"1331,2\",\"seqRead\":\"2088,96\",\"randWrite\":\"75\",\"randRead\":\"38\",\"memCopy\":\"10,3\"},{\"id\":\"5\",\"device\":\"15\\\" MacBook Pro\",\"platfrom\":\"macOS\",\"deviceDetail\":\"macOS, NTFS partition\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"03.10.2018\",\"seqWrite\":\"730\",\"seqRead\":\"694\",\"randWrite\":\"27\",\"randRead\":\"8\",\"memCopy\":\"10,3\"},{\"id\":\"6\",\"device\":\"15\\\" MacBook Pro\",\"platfrom\":\"Windows\",\"deviceDetail\":\"Windows 10 Bootcamp, NTFS\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"03.10.2018\",\"seqWrite\":\"343\",\"seqRead\":\"1617,92\",\"randWrite\":\"0,5625\",\"randRead\":\"11,01\",\"memCopy\":\"8,5\"},{\"id\":\"7\",\"device\":\"15\\\" MacBook Pro\",\"platfrom\":\"Windows\",\"deviceDetail\":\"Windows 10, VMWare Fusion, NTFS\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"03.10.2018\",\"seqWrite\":\"850\",\"seqRead\":\"2457,6\",\"randWrite\":\"12\",\"randRead\":\"29\",\"memCopy\":\"5,8\"}],\"platforms\":[\"Android\", \"macOS\", \"Windows\"],\"tests\":[\"seqWrite\", \"seqRead\", \"randWrite\", \"randRead\", \"memCopy\"]};\r\n      results.data = dictionaries.data;\r\n    }\r\n};\r\n\r\nexport default db;","import db from './db';\r\n\r\nexport default db;","import React, { Component } from 'react';\r\nimport l18n from './translations';\r\nimport db from './data';\r\n\r\nclass TestResults extends Component {\r\n  getAllResults(result){\r\n    let text = \"\";\r\n    let tests = db.dictionaries.getTests();\r\n\r\n    for (var i = 0; i < tests.length; i++){\r\n      text += l18n[tests[i].key+\"_s\"]+\": \"+result[tests[i].key]+\" \";\r\n      text += tests[i].key === \"memCopy\" ? l18n.gbps : l18n.mbps;\r\n      if (i !== tests.length-1) text += \"\\x0A\";\r\n    }\r\n\r\n    return text;\r\n  }\r\n  \r\n  render() {\r\n    let items = db.results.getResults(this.props.selectedPlatforms, this.props.selectedTest, this.props.device);\r\n\r\n    return (\r\n      items.map(i =>\r\n        <div key={i.id} className=\"item\" title={this.getAllResults(i)}>\r\n          <span className=\"leftColumn\">\r\n            {i.device}\r\n            <br />\r\n            <span className=\"greyed\">\r\n              {i.deviceYear}, {i.deviceDetail}\r\n            </span>\r\n          </span>\r\n          <span className=\"rightColumn\">\r\n            <span style={{width: i.percent*80 +\"%\"} }>\r\n              {i[this.props.selectedTest]} {this.props.selectedTest === \"memCopy\" ? l18n.gbps : l18n.mbps} \r\n            </span>\r\n          </span>\r\n        </div>)\r\n    )\r\n  }\r\n}\r\n\r\nexport default TestResults;","import React, { Component } from 'react';\nimport l18n from './translations';\nimport ListSelector from './ListSelector'\nimport Search from './Search'\nimport TestResults from './TestResults'\nimport db from './data';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.platformClick = this.platformClick.bind(this);\n    this.testClick = this.testClick.bind(this);\n    this.searchChanged = this.searchChanged.bind(this);\n\n    this.state = {\n      selectedTest: db.dictionaries.getTests()[0].key,\n      selectedPlatforms: db.dictionaries.getPlatforms().map(p => p.key),\n      device: \"\"\n    };\n  }\n\n  testClick(key){\n    this.setState({selectedTest: key});\n  }\n\n  platformClick(key){\n    this.setState({selectedPlatforms: key});\n  }\n\n  searchChanged(val){\n    this.setState({device: val});\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>{l18n.title}: </h1>\n        <h2>{l18n.subTitle}</h2>\n        <ListSelector itemClick={this.testClick} selectedKey={this.state.selectedTest} \n          items={db.dictionaries.getTests()} />\n        <ListSelector itemClick={this.platformClick} selectedKey={this.state.selectedPlatforms} \n          items={db.dictionaries.getPlatforms()} selectAll={true} />\n        <Search searchChanged={this.searchChanged}/>\n        <br/>\n        <TestResults \n          selectedTest={this.state.selectedTest}\n          selectedPlatforms={this.state.selectedPlatforms}\n          device={this.state.device}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","import 'babel-polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './index_dark.css';\nimport App from './App';\nimport l18n from './translations';\nimport db from './data';\n\nconst urlParams = new URLSearchParams(window.location.search);\nconst themeParam = urlParams.get(\"theme\");\nif (themeParam !== \"white\") document.body.className=\"dark\";\n\nlet benchmark = false;\nlet testDb = false;\n\nconst benchmarkParam = urlParams.get(\"benchmark\");\nconst testDbParam = urlParams.get(\"testdb\");\nif (benchmarkParam === \"true\") { benchmark = true; testDb = true; }\nelse if (testDbParam === \"true\") testDb = true; \n\nl18n.init();\ndocument.title = l18n.pageTitle;\ndb.init(testDb).then(() => {\n  ReactDOM.render(<App />, document.getElementById('root'));\n  if (benchmark){\n    document.title = \"Running benchmark...\";\n    runBenchmark();\n  }\n});\n\nfunction runBenchmark(){\n  let t1 = performance.now();\n  const repeats = 5;\n  for (var i = 0; i < repeats; i++){\n    ReactDOM.render(<span>Swap</span>, document.getElementById('root'))\n    ReactDOM.render(<App />, document.getElementById('root'))\n  }\n  let t2 = performance.now();\n\n  let result = \"Rendering page took on average: \" + ((t2-t1)/repeats).toFixed(2) + \"ms\";\n  document.title = \"Becnchmark completed. \" + result;\n  alert(result);\n}"],"sourceRoot":""}