{"version":3,"sources":["data/dictionaries.js","translations/ru.js","translations/fr.js","translations/index.js","translations/en.js","ListSelector.js","data/results.js","data/db.js","data/index.js","Search.js","TestResultDetails.js","TestResult.js","Hint.js","TestResults.js","App.js","index.js"],"names":["platforms","tests","translations","pageTitle","title","subTitle","seqWrite","seqRead","randWrite","randRead","memCopy","seqWrite_s","seqRead_s","randWrite_s","randRead_s","memCopy_s","seqWrite_f","seqRead_f","randWrite_f","randRead_f","memCopy_f","throughput","nothingToShow","Android","macOS","Windows","all","mbps","gbps","hitEnter","hintDoubleTap","close","yourDevice","result_SRW","result_RRW","result_MEM","helloWorld","locale","param","URLSearchParams","window","location","search","get","lang","toLocaleLowerCase","navigator","language","toLowerCase","includes","ru","fr","Object","keys","forEach","key","ListSelector","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","selectAll","onKeyPress","selectedKey","length","filter","k","push","items","map","p","e","document","activeElement","HTMLBodyElement","shortcuts","has","val","Array","isArray","i","itemClick","keyPressSubscribed","removeEventListener","prevItems","Map","shortcut","sc","arr","set","size","addEventListener","initShortcuts","_this2","updateShortcuts","react_default","a","createElement","className","onClick","name","l18n","Component","shortcutRegex","getEntities","obj","match","addShortcut","dictionaries","getTests","data","getPlatforms","console","log","results","addYourDeviceResult","yd","device","id","yourDeviceId","deviceDetail","pop","getResults","platfroms","test","excludeIds","filters","r","hidden","platform","trim","result","condition","sort","b","lastResultId","getResultById","idExists","setPercents","maxVal","percent","getLastResultId","db_url","db","init","useTest","fetchVersion","Promise","resolve","fetch","cache","then","response","json","storage","setItem","v","version","fetchDb","JSON","stringify","promise","localStorage","getItem","parse","_unused","localDbVersion","initFake","platfrom","deviceComment","deviceYear","dateTested","Search","textChanged","state","extraSpaces","blink","showHitn","textInput","React","createRef","enterPressed","target","innerText","searchChanged","setState","charCode","last","Fragment","contentEditable","ref","onInput","onFocus","onBlur","current","focus","PureComponent","TestResultDetails","item","noHighlight","selectedTest","TestResult","itemProp","style","width","closableX","selectedIdRemoved","closableEsc","Hint","children","TestResults","onKeyUp","expandedId","doubleTapHint","text","keyCode","deletableId","selectedPlatforms","selectedResultIds","selectedCount","selectedResults","concat","setTitle","keyboardEventsSubscription","src_Hint","itemScope","getAllResults","onDoubleClick","selection","getSelection","empty","resultSelected","src_TestResult","src_TestResultDetails","App","platformClick","testClick","wpf","android","macos","urlParams","selectedIdsParam","getSelectedIdsFromParam","inAppPlatform","_this$inAppAdjustment","inAppAdjustments","decodeURIComponent","ids","split","parseInt","Number","isInteger","delete","history","replaceState","toString","resultId","clearDevice","setSelectedIds","addSelectedIdsToParam","stl","src_ListSelector","src_Search","src_TestResults","benchmark","testDb","themeParam","initParams","body","ReactDOM","render","src_App","getElementById","t1","performance","now","toFixed","alert","runBenchmark","start"],"mappings":"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","file":"static/js/main.edb4bbbb.chunk.js","sourcesContent":["import l18n from '../translations';\r\n\r\nlet platforms, tests;\r\nconst shortcutRegex = /[^\\[]+(?=\\])/;\r\n\r\nfunction addShortcut(obj) {\r\n  let match = obj.name.match(shortcutRegex);\r\n  if (match && match.length === 1)\r\n    obj.shortcut = match[0].toLowerCase();\r\n}\r\n\r\nfunction getEntities(items) {\r\n  return items.map(i => {\r\n      let obj = {\r\n        key: i,\r\n        name: l18n[i] ? l18n[i] : i,\r\n        shortcut: null\r\n      };\r\n      addShortcut(obj);\r\n      return obj;\r\n    });\r\n}\r\n\r\nconst dictionaries = \r\n{\r\n  getTests : function(){\r\n    if (!tests) tests = getEntities(this.data.tests);\r\n    return tests;\r\n  },  \r\n\r\n  getPlatforms : function(){\r\n      if (!platforms){\r\n        platforms = getEntities(this.data.platforms);\r\n\r\n        let keys = platforms.map(p => p.key);\r\n\r\n        if (keys.length !== 3) console.log(\"Invalid number of platforms in DB, 3 supported, found \"+keys.length);\r\n        if (!keys.includes(this.Windows)) console.log(\"Windows platfrom not found in DB\");\r\n        if (!keys.includes(this.Android)) console.log(\"Android platfrom not found in DB\");\r\n        if (!keys.includes(this.macOS)) console.log(\"macOS platfrom not found in DB\");\r\n      }\r\n      return platforms;\r\n  }\r\n}\r\n\r\ndictionaries.seqWrite = \"seqWrite\";\r\ndictionaries.seqRead = \"seqRead\";\r\ndictionaries.randWrite = \"randWrite\";\r\ndictionaries.randRead = \"randRead\";\r\ndictionaries.memCopy = \"memCopy\";\r\n\r\ndictionaries.Windows = \"Windows\";\r\ndictionaries.Android = \"Android\";\r\ndictionaries.macOS = \"macOS\";\r\n\r\nexport default dictionaries;","const translations = \r\n{\r\n    pageTitle:  \"CPDT: База производительности памяти\",\r\n    title: \"Тестирование SSD/HDD\",\r\n    subTitle: \"Скорости устройств\",\r\n    seqWrite: \"[П]оследовательная запись\",\r\n    seqRead: \"[П]оследовательное чтение\",\r\n    randWrite: \"[П]роизвольная запись (4КБ)\",\r\n    randRead: \"[П]роизвольное чтение (4КБ)\",\r\n    memCopy: \"[К]опирование памяти\",\r\n\r\n    seqWrite_s: \"[П]осл. запись\",\r\n    seqRead_s: \"[П]осл. чтение\",\r\n    randWrite_s: \"[П]роизв. запись (4КБ)\",\r\n    randRead_s: \"[П]роизв. чтение (4КБ)\",\r\n    memCopy_s: \"[К]оп. памяти\",\r\n\r\n    seqWrite_f: \"Последовательная запись\",\r\n    seqRead_f: \"Последовательное чтение\",\r\n    randWrite_f: \"Произвольная запись (4КБ)\",\r\n    randRead_f: \"Произвольное чтение (4КБ)\",\r\n    memCopy_f: \"Копирование памяти\",\r\n\r\n    throughput: \"Пропускная способность\",\r\n    nothingToShow: \"Nothing to show\",\r\n\r\n    Android: \"[A]ndroid\",\r\n    macOS: \"mac[O]S\",\r\n    Windows: \"[W]indows\",\r\n    all: \"Все\",\r\n    mbps: \"МБ/с\",\r\n    gbps: \"ГБ/с\",\r\n\r\n    hitEnter: \"Нажать Enter для закрепления записи\",\r\n    hintDoubleTap: \"Нажать два раза для закрепления записи\",\r\n    close: \"[C] Закрыть\",\r\n    yourDevice: \"Ваше устройство\",\r\n\r\n    result_SRW: \"Посл.З÷Ч\",\r\n    result_RRW: \"Прзв.З÷Ч\",\r\n    result_MEM: \"Коп.пам\",\r\n}\r\n\r\nexport default translations;","const translations = \r\n{\r\n    helloWorld:  \"Bonjour!\",\r\n}\r\n\r\nexport default translations;","import en from './en';\r\nimport ru from './ru';\r\nimport fr from './fr';\r\n\r\nconst enLocale = \"en\";\r\nconst ruLocale = \"ru\";\r\nconst frLocale = \"fr\";\r\nconst langParam = \"lang\";\r\n\r\n//Default texts\r\nconst translations = en;\r\n\r\n//Must be executed before accesing the translations. Updates default texts with locale specific translations. If there's no translation, default text will be used\r\ntranslations.init = function() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const param = urlParams.get(langParam);\r\n\r\n    let lang = enLocale;\r\n\r\n    if (param) {\r\n        lang = param.toLocaleLowerCase();\r\n    }\r\n    else{\r\n        lang = navigator.language.toLowerCase();\r\n    }\r\n\r\n    let locale;\r\n\r\n    if (lang.includes(ruLocale)) {\r\n        locale = ru;\r\n    }\r\n    else if (lang.includes(frLocale)) {\r\n        locale = fr;\r\n    }\r\n\r\n    if (locale)\r\n        Object.keys(translations).forEach((key) => {\r\n            if (locale[key])\r\n                translations[key] = locale[key];\r\n        });\r\n};\r\n\r\nexport default translations;","const translations = \r\n{\r\n    pageTitle: \"CPDT: Storage Performance Database\",\r\n    title: \"SSD/HDD Benchmark\",\r\n    subTitle: \"Performance Chart\",\r\n    seqWrite: \"[S]equential write\",\r\n    seqRead: \"[S]equential read\",\r\n    randWrite: \"[R]andom write (4KB)\",\r\n    randRead: \"[R]andom read (4KB)\",\r\n    memCopy: \"[M]emory copy\",\r\n\r\n    seqWrite_s: \"[S]eq. write\",\r\n    seqRead_s: \"[S]eq. read\",\r\n    randWrite_s: \"[R]and. write (4KB)\",\r\n    randRead_s: \"[R]and. read (4KB)\",\r\n    memCopy_s: \"[M]em. copy\",\r\n\r\n    seqWrite_f: \"Sequential write\",\r\n    seqRead_f: \"Sequential read\",\r\n    randWrite_f: \"Random write (4KB)\",\r\n    randRead_f: \"Random read (4KB)\",\r\n    memCopy_f: \"Memory copy\",\r\n\r\n    throughput: \"Throughput\",\r\n    nothingToShow: \"Nothing to show\",\r\n\r\n    Android: \"[A]ndroid\",\r\n    macOS: \"mac[O]S\",\r\n    Windows: \"[W]indows\",\r\n    all: \"All\",\r\n    mbps: \"MB/s\",\r\n    gbps: \"GB/s\",\r\n\r\n    hitEnter: \"Hit Enter & fix top result\",\r\n    hintDoubleTap: \"Double tap to fix record at the top\",\r\n    close: \"[C]lose\",\r\n    yourDevice: \"Your device\",\r\n\r\n    result_SRW: \"Seq.W÷R\",\r\n    result_RRW: \"Rnd.W÷R\",\r\n    result_MEM: \"Mem.cpy\",\r\n}\r\n\r\nexport default translations;","import React, { Component } from 'react';\r\nimport l18n from './translations';\r\n\r\nclass ListSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.selectAll = this.selectAll.bind(this);\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n  }\r\n\r\n  toggle(key) {\r\n    if (this.props.selectedKey.includes(key)) { // remove key\r\n      if (this.props.selectedKey.length > 1) {\r\n        return this.props.selectedKey.filter(k => k !== key);\r\n      }\r\n      else {\r\n        return this.props.selectedKey;\r\n      }\r\n    }\r\n\r\n    this.props.selectedKey.push(key);\r\n\r\n    return this.props.selectedKey;\r\n  }\r\n\r\n  selectAll() {\r\n    return this.props.items.map(p => p.key);\r\n  }\r\n\r\n  onKeyPress(e) {\r\n    if (document.activeElement instanceof HTMLBodyElement){\r\n      if (this.shortcuts.has(e.key))\r\n      {\r\n        let val = this.shortcuts.get(e.key);\r\n\r\n        //TODO - add suport for repeting shortcuts in multiselect list\r\n        if (Array.isArray(val)){ // single select, repeat shortcuts\r\n          let key = val[0].key;\r\n          \r\n          for (let i = 0; i < val.length; i++){\r\n            if (val[i].key === this.props.selectedKey){\r\n              if (i+1 < val.length) key = val[i+1].key;\r\n            }\r\n          }\r\n\r\n          this.props.itemClick(key);\r\n        }\r\n        else if (Array.isArray(this.props.selectedKey)){ // multi select select, non-repeat shortcuts        \r\n          this.props.itemClick(this.toggle(val.key));\r\n        } else if (val.key !== this.props.selectedKey) { // single select, non-repeat shortcuts\r\n          this.props.itemClick(val.key);\r\n        } \r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    if (this.keyPressSubscribed)\r\n      document.removeEventListener('keypress', this.onKeyPress);\r\n  }\r\n\r\n  initShortcuts() {\r\n    this.prevItems = this.props.items;\r\n    this.shortcuts = new Map();\r\n    for (var i in this.prevItems) {\r\n      if (this.prevItems[i].shortcut) {\r\n        if (!this.shortcuts.has(this.prevItems[i].shortcut))\r\n          this.shortcuts.set(this.prevItems[i].shortcut, this.prevItems[i]);\r\n        else {\r\n          let sc = this.shortcuts.get(this.prevItems[i].shortcut);\r\n\r\n          if (Array.isArray(sc)) sc.push(this.prevItems[i]);\r\n          else {\r\n            let arr = [sc, this.prevItems[i]];\r\n            this.shortcuts.set(this.prevItems[i].shortcut, arr);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.shortcuts.size > 0) {\r\n      document.addEventListener('keypress', this.onKeyPress);\r\n      this.keyPressSubscribed = true;\r\n    }\r\n    else if (this.keyPressSubscribed) {\r\n      document.removeEventListener('keypress', this.onKeyPress);\r\n      this.keyPressSubscribed = false;\r\n    }\r\n  }\r\n\r\n  updateShortcuts() {\r\n    if (!this.prevItems) {\r\n      this.initShortcuts();\r\n    }\r\n    else if (this.prevItems !== this.props.items) {\r\n      this.initShortcuts();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.updateShortcuts();\r\n\r\n    if (this.props.items)\r\n      return (\r\n        <ul className={this.props.className}>\r\n          {\r\n            Array.isArray(this.props.selectedKey) ?\r\n              this.props.items.map( // multiselect\r\n                i =>\r\n                  <li\r\n                    key={i.key}\r\n                    className={this.props.selectedKey.includes(i.key) ? \"selected\" : null}\r\n                    onClick={() => this.props.itemClick(this.toggle(i.key))}\r\n                  >\r\n                    {i.name}\r\n                  </li>\r\n              )\r\n              :\r\n              this.props.items.map( //single select\r\n                i =>\r\n                  <li\r\n                    key={i.key}\r\n                    className={this.props.selectedKey === i.key ? \"selected\" : null}\r\n                    onClick={() => this.props.itemClick(i.key)}\r\n                  >\r\n                    {i.name}\r\n                  </li>\r\n              )\r\n          }\r\n\r\n          {\r\n            this.props.selectAll && <li onClick={() => this.props.itemClick(this.selectAll())}>{l18n.all}</li>\r\n          }\r\n        </ul>\r\n      )\r\n\r\n      return null;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default ListSelector;","import l18n from '../translations';\r\n\r\nconst results = \r\n{\r\n  addYourDeviceResult: function(yd){\r\n    if (!yd.seqWrite && !yd.seqRead && !yd.randWrite && !yd.randRead && !yd.memCopy){\r\n      console.log(\"Invaid 'Your device' data\");\r\n      return;\r\n    }\r\n\r\n    if (!yd.device) yd.device = l18n.yourDevice;\r\n\r\n    yd.id = this.yourDeviceId;\r\n    yd.deviceDetail = \"\";\r\n\r\n    if (this.data.results[this.data.results.length-1].id === yd.id) this.data.results.pop();\r\n    this.data.results.push(yd);\r\n  },\r\n\r\n  getResults: function(platfroms, test, device, excludeIds){\r\n    let filters = [];\r\n\r\n    filters.push(r => !r.hidden);\r\n    \r\n    if (platfroms && Array.isArray(platfroms)){\r\n      filters.push(r => platfroms.includes(r.platform));\r\n    }\r\n\r\n    if (device){\r\n      device = device.trim().toLowerCase();\r\n      if (device) filters.push(r => r.device.toLowerCase().includes(device));\r\n    }\r\n\r\n    if (excludeIds && excludeIds.length > 0){\r\n      filters.push(r => !excludeIds.includes(r.id));\r\n    }\r\n\r\n    let result = this.data.results.filter(r => \r\n      {\r\n        let condition = true;\r\n        for (let i = 0; i < filters.length; i++){\r\n          condition &= filters[i](r);\r\n          if (!condition) return false;\r\n        }\r\n\r\n        return true;\r\n      });\r\n\r\n    if (test){\r\n      result.sort(\r\n        (a,b) => \r\n          b[test] - a[test]\r\n        );\r\n    }\r\n\r\n    if (result.length > 0) this.lastResultId = result[0].id; else this.lastResultId = null;\r\n\r\n    return result;\r\n  },\r\n\r\n  getResultById: function(id){\r\n    if (id < 0 || id > this.data.results.length) return null;\r\n    if (id === 0 && this.data.results[this.data.results.length-1].id === 0) return this.data.results[this.data.results.length-1];\r\n\r\n    return this.data.results[id-1];\r\n  },\r\n\r\n  idExists: function(id){\r\n    return this.getResultById(id) != null;\r\n  },\r\n\r\n  setPercents: function(results, test) {\r\n    let maxVal = 0;\r\n    for (let i = 0; i < results.length; i++){\r\n      if (results[i][test] > maxVal) maxVal = results[i][test];\r\n    }\r\n    for (let i = 0; i < results.length; i++){\r\n      results[i].percent = results[i][test]/maxVal;\r\n    }\r\n  },\r\n\r\n  getLastResultId: function(){\r\n    if (this.lastResultId) return this.lastResultId;\r\n    return null;\r\n  }\r\n}\r\n\r\nresults.lastResultId = null;\r\nresults.yourDeviceId = 0;\r\n\r\nexport default results;","import dictionaries from './dictionaries';\r\nimport results from './results';\r\n\r\nconst db_version_url = \"https://raw.githubusercontent.com/maxim-saplin/cpdt_results/master/Results_version.json\";\r\nlet db_url = \"https://raw.githubusercontent.com/maxim-saplin/cpdt_results/master/Results.json\";\r\nconst db_url_test = \"https://raw.githubusercontent.com/maxim-saplin/cpdt_results/master/Results_test.json\";\r\nconst db_version_sotrage_key = \"cpdt_db_version\";\r\nconst db_sotrage_key = \"cpdt_db\";\r\n\r\nconst db = {\r\n    dictionaries : dictionaries,\r\n    results : results,\r\n    \r\n    init: function (useTest){\r\n        let fetchVersion = () => {\r\n            return new Promise (resolve => {\r\n                fetch(db_version_url, {cache: \"no-store\"})\r\n                .then(response => {\r\n                    return response.json();\r\n                })\r\n                .then(result => {\r\n                    storage.setItem(db_version_sotrage_key, result.v);\r\n                    this.version = result.v;\r\n                    resolve(result.v);\r\n                });\r\n            });\r\n        };\r\n\r\n        let fetchDb = () => {\r\n            return new Promise (resolve => {\r\n                fetch(db_url, {cache: \"no-store\"})\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    storage.setItem(db_sotrage_key, JSON.stringify(result));\r\n                    dictionaries.data = result;\r\n                    results.data = result;\r\n                    resolve(result);\r\n                })\r\n            });\r\n        };\r\n\r\n        let promise = null;\r\n\r\n        let storage = window.localStorage;\r\n\r\n        if (useTest){\r\n          db_url = db_url_test;\r\n          storage.setItem(db_version_sotrage_key,\"test\");\r\n        }\r\n\r\n        let data = storage.getItem(db_sotrage_key);\r\n        if (data) {\r\n          try { data = JSON.parse(data);} catch{};\r\n          if (!data.results) data = null; // shallow check for corrupt data\r\n        }\r\n        let localDbVersion = storage.getItem(db_version_sotrage_key);\r\n\r\n        if (data){\r\n            promise = new Promise( resolve => {\r\n                fetchVersion()\r\n                .then(result => {\r\n                    if (useTest){\r\n                      storage.setItem(db_version_sotrage_key,\"test\");\r\n                    }\r\n\r\n                    if (result !== localDbVersion){\r\n                        fetchDb().then(result => resolve(result));                    \r\n                    }\r\n                    // local data is up to date\r\n                    else{ \r\n                        dictionaries.data = data;\r\n                        results.data = data;\r\n                        resolve(data)\r\n                    };\r\n                });\r\n            });\r\n        }\r\n        else{\r\n            fetchVersion();\r\n            promise = fetchDb();\r\n        }\r\n\r\n        return promise;\r\n    },\r\n\r\n    initFake: function() {\r\n      dictionaries.data = {\"results\":[{\"id\":\"1\",\"device\":\"Xiaomi Mi8 SE\",\"platfrom\":\"Android\",\"deviceDetail\":\"Snapdragon 710, 64GB\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"23.10.2018\",\"seqWrite\":\"110\",\"seqRead\":\"299\",\"randWrite\":\"18,9\",\"randRead\":\"9,5\",\"memCopy\":\"4,65\"},{\"id\":\"2\",\"device\":\"Samsung Galaxy S9\",\"platfrom\":\"Android\",\"deviceDetail\":\"Exynos 9810, 64Gb\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"04.10.2018\",\"seqWrite\":\"118\",\"seqRead\":\"654\",\"randWrite\":\"1,72\",\"randRead\":\"14,43\",\"memCopy\":\"12,7\"},{\"id\":\"3\",\"device\":\"Essential Phone PH-1\",\"platfrom\":\"Android\",\"deviceDetail\":\"Snapdragon 835, 128GB\",\"deviceComment\":\"\",\"deviceYear\":\"2017\",\"dateTested\":\"30.09.2018\",\"seqWrite\":\"125\",\"seqRead\":\"440\",\"randWrite\":\"4,3\",\"randRead\":\"17,4\",\"memCopy\":\"6,6\"},{\"id\":\"4\",\"device\":\"15\\\" MacBook Pro\",\"platfrom\":\"macOS\",\"deviceDetail\":\"macOS, APFS\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"03.10.2018\",\"seqWrite\":\"1331,2\",\"seqRead\":\"2088,96\",\"randWrite\":\"75\",\"randRead\":\"38\",\"memCopy\":\"10,3\"},{\"id\":\"5\",\"device\":\"15\\\" MacBook Pro\",\"platfrom\":\"macOS\",\"deviceDetail\":\"macOS, NTFS partition\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"03.10.2018\",\"seqWrite\":\"730\",\"seqRead\":\"694\",\"randWrite\":\"27\",\"randRead\":\"8\",\"memCopy\":\"10,3\"},{\"id\":\"6\",\"device\":\"15\\\" MacBook Pro\",\"platfrom\":\"Windows\",\"deviceDetail\":\"Windows 10 Bootcamp, NTFS\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"03.10.2018\",\"seqWrite\":\"343\",\"seqRead\":\"1617,92\",\"randWrite\":\"0,5625\",\"randRead\":\"11,01\",\"memCopy\":\"8,5\"},{\"id\":\"7\",\"device\":\"15\\\" MacBook Pro\",\"platfrom\":\"Windows\",\"deviceDetail\":\"Windows 10, VMWare Fusion, NTFS\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"03.10.2018\",\"seqWrite\":\"850\",\"seqRead\":\"2457,6\",\"randWrite\":\"12\",\"randRead\":\"29\",\"memCopy\":\"5,8\"}],\"platforms\":[\"Android\", \"macOS\", \"Windows\"],\"tests\":[\"seqWrite\", \"seqRead\", \"randWrite\", \"randRead\", \"memCopy\"]};\r\n      results.data = dictionaries.data;\r\n    }\r\n};\r\n\r\nexport default db;","import db from './db';\r\n\r\nexport default db;","import React, { PureComponent } from 'react';\r\nimport db from './data';\r\nimport l18n from './translations';\r\n\r\nclass Search extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.textChanged = this.textChanged.bind(this);\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n\r\n    this.state = {\r\n      extraSpaces: true, \r\n      blink: false,\r\n      showHitn: false\r\n    };\r\n    this.textInput = React.createRef();\r\n  }\r\n\r\n  textChanged(e){\r\n    if (this.enterPressed) {\r\n      e.target.innerText = \"\"; \r\n      this.enterPressed = false;\r\n    }\r\n    \r\n    if (this.props.searchChanged) {\r\n      this.props.searchChanged(e.target.innerText, true);\r\n    }\r\n    if (e.target.innerText && this.state.extraSpaces) this.setState({extraSpaces: false});\r\n    else if (!e.target.innerText && !this.state.extraSpaces) this.setState({extraSpaces: true});\r\n  }\r\n\r\n  onKeyPress(e){\r\n    if (e.key === \"Enter\" || e.charCode === 13) {\r\n      this.enterPressed = true;\r\n      let last = db.results.getLastResultId();\r\n      if (e.target.innerText && this.props.enterPressed && last) this.props.enterPressed(last);\r\n    }\r\n    else this.enterPressed = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>      \r\n        <span className=\"searchBox\">\r\n          <span \r\n            contentEditable=\"true\" \r\n            ref={this.textInput} \r\n            onInput={this.textChanged} \r\n            onKeyPress={this.onKeyPress}\r\n            onFocus={() => {this.setState({blink:true})}} \r\n            onBlur={() => {this.setState({blink:false})}}\r\n          >\r\n          </span>\r\n          <span \r\n            className={this.state.blink ? \"blink\" : \"\"} \r\n            onClick={() => {this.textInput.current.focus()}}\r\n          >\r\n            {!this.state.blink && this.state.extraSpaces && \"\\xA0\\xA0\\xA0\\xA0\"}_\r\n          </span>\r\n          &lt;/\r\n        </span>\r\n        <span className={!this.state.extraSpaces && this.state.blink ? \"searchBoxHint visible\" : \"searchBoxHint\"}>\r\n          {l18n.hitEnter}\r\n        </span>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;","import React, { PureComponent } from 'react';\r\nimport l18n from './translations';\r\nimport db from './data';\r\n\r\nclass TestResultDetails extends PureComponent {\r\n  render() {\r\n    let i = this.props.item;\r\n\r\n    if (i) return (\r\n      <span className={this.props.noHighlight ? \"centerColumn noHighlight\" : \"centerColumn\"}>\r\n        <span className=\"ttl\">{l18n.result_SRW}:</span>\r\n        <span className=\"res\">\r\n          {this.props.selectedTest == db.dictionaries.seqWrite ? \r\n          <em>{i[db.dictionaries.seqWrite]}</em> :\r\n          i[db.dictionaries.seqWrite]}          \r\n          ÷\r\n          {this.props.selectedTest == db.dictionaries.seqRead ? \r\n          <em>{i[db.dictionaries.seqRead]}</em> :\r\n          i[db.dictionaries.seqRead]}   \r\n        </span>\r\n        <span className=\"unit\">{l18n.mbps} </span>\r\n\r\n        <span className=\"ttl\">{l18n.result_RRW}:</span>\r\n        <span className=\"res\">\r\n          {this.props.selectedTest == db.dictionaries.randWrite ? \r\n          <em>{i[db.dictionaries.randWrite]}</em> :\r\n          i[db.dictionaries.randWrite]}          \r\n          ÷\r\n          {this.props.selectedTest == db.dictionaries.randRead ? \r\n          <em>{i[db.dictionaries.randRead]}</em> :\r\n          i[db.dictionaries.randRead]}   \r\n        </span>\r\n        <span className=\"unit\">{l18n.mbps} </span>\r\n\r\n        <span className=\"ttl\">{l18n.result_MEM}:</span>\r\n        <span className=\"res\">\r\n          {this.props.selectedTest == db.dictionaries.memCopy ? \r\n          <em>{i[db.dictionaries.memCopy]}</em> :\r\n          i[db.dictionaries.memCopy]}          \r\n        </span>\r\n        <span className=\"unit\">{l18n.gbps}</span>\r\n      </span>);\r\n\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default TestResultDetails;","import React, { PureComponent } from 'react';\r\nimport l18n from './translations';\r\n\r\nclass TestResult extends PureComponent {\r\n  render() {\r\n    let i = this.props.item;\r\n\r\n    if (i) return (\r\n      <>\r\n        <span className=\"leftColumn\">\r\n          <em itemProp=\"name\">\r\n            {i.device}\r\n          </em>\r\n          <br />\r\n          <span className=\"greyed\" itemProp=\"description\">\r\n            {i.deviceYear}{i.deviceDetail && \",\"} {i.deviceDetail}\r\n          </span>\r\n        </span>\r\n        <span className=\"rightColumn\">\r\n          <span style={{ width: i.percent * 80 + \"%\" }} itemProp=\"throughput\" > \r\n            {i[this.props.selectedTest]} {this.props.selectedTest === \"memCopy\" ? l18n.gbps : l18n.mbps}\r\n          </span>\r\n          {this.props.closableX && <button onClick={() => this.props.selectedIdRemoved(i.id)}>X</button>}\r\n          {this.props.closableEsc && <button onClick={() => this.props.selectedIdRemoved(i.id)}>[Esc]</button>}\r\n        </span>\r\n      </>);\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default TestResult;","import React, { PureComponent } from 'react';\r\n\r\nclass Hint extends PureComponent {\r\n  render() {\r\n    return <span className=\"hint\">{this.props.children}</span>\r\n  }\r\n}\r\n\r\nexport default Hint;","import React, { Component } from 'react';\r\nimport TestResultDetails from './TestResultDetails';\r\nimport TestResult from './TestResult';\r\nimport Hint from './Hint';\r\nimport l18n from './translations';\r\nimport db from './data';\r\n\r\nclass TestResults extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onKeyUp = this.onKeyUp.bind(this);\r\n    this.state = {expandedId: null, doubleTapHint: false};\r\n  }\r\n\r\n  getAllResults(result) {\r\n    let text = l18n.throughput + \"\\x0A\";\r\n    let tests = db.dictionaries.getTests();\r\n\r\n    for (var i = 0; i < tests.length; i++) {\r\n      text += l18n[tests[i].key + \"_f\"] + \": \" + result[tests[i].key] + \" \";\r\n      text += tests[i].key === \"memCopy\" ? l18n.gbps : l18n.mbps;\r\n      if (i !== tests.length - 1) text += \"\\x0A\";\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    if (this.keyPressSubscribed)\r\n      document.removeEventListener('keyup', this.onKeyUp);\r\n  }\r\n\r\n  onKeyUp(e){\r\n    if ((e.key === \"Escape\" || e.keyCode === 27) && this.deletableId) {\r\n      this.props.selectedIdRemoved(this.deletableId);\r\n    }\r\n  }\r\n\r\n  keyboardEventsSubscription() {\r\n    if (!this.deletableId && this.keyPressSubscribed) {\r\n      document.removeEventListener('keyup', this.onKeyUp);\r\n      this.keyPressSubscribed = false;\r\n    }\r\n    else if (this.deletableId && !this.keyPressSubscribed) {\r\n      document.addEventListener('keyup', this.onKeyUp);\r\n      this.keyPressSubscribed = true;\r\n    }\r\n  }\r\n\r\n  render() {\r\n   \r\n    let items = db.results.getResults(this.props.selectedPlatforms, this.props.selectedTest, this.props.device, this.props.selectedResultIds);\r\n    let selectedCount = -1;\r\n    this.deletableId = null;\r\n    let title = \"\";\r\n\r\n    let selectedResultIds = this.props.selectedResultIds;\r\n    let expandedId = this.state.expandedId;\r\n\r\n    if (selectedResultIds && selectedResultIds.length > 0){\r\n      let selectedResults = selectedResultIds.map(id => db.results.getResultById(id));\r\n      items = selectedResults.concat(items);\r\n      selectedCount = selectedResults.length;\r\n      this.deletableId = selectedResults[selectedCount-1].id;\r\n\r\n      for (let i = 0; (i < 2) && (i < selectedResults.length); i++){\r\n        title += selectedResults[i].device;\r\n        if (i === 1 || i === selectedResults.length-1) title +=\" - \"; else title +=\", \";\r\n      }\r\n    }\r\n\r\n    if (this.props.setTitle) this.props.setTitle(title + l18n.pageTitle);\r\n    \r\n    this.keyboardEventsSubscription();\r\n\r\n    if (items && items.length > 0) {\r\n      db.results.setPercents(items, this.props.selectedTest);\r\n      return (\r\n        <>\r\n        {this.state.doubleTapHint && <Hint>{l18n.hintDoubleTap}</Hint>}\r\n        {items.map(i =>\r\n          <div \r\n            itemScope\r\n            key={i.id} \r\n            className={selectedCount-- > 0 ? \"item selected\" : (expandedId === i.id) ? \"item highlight\" : \"item\"} \r\n            id={selectedCount === 0 ? \"last\" : null}\r\n            title={this.getAllResults(i)}\r\n            onClick={\r\n              (!selectedResultIds || selectedResultIds.length === 0 || !selectedResultIds.includes(i.id)) ?\r\n              () => {\r\n                this.setState({expandedId: expandedId === i.id ? null : i.id});\r\n                if (!this.state.doubleTapHint) this.setState({doubleTapHint:true});\r\n              }\r\n              : null\r\n            }\r\n            onDoubleClick={\r\n              (!selectedResultIds || selectedResultIds.length === 0 || !selectedResultIds.includes(i.id)) ?\r\n              (e) => {\r\n                let selection = window.getSelection();\r\n                if (selection.empty) selection.empty(); \r\n                this.props.resultSelected(i.id); \r\n                if (expandedId === i.id) this.setState({expandedId: null});\r\n              }\r\n              : null\r\n            }\r\n          >\r\n            <TestResult\r\n              item={i}\r\n              percent={i.percent} // hack to make PureComponent re-render, somehow for selected id's percent inside 'item' is'nt considered as changed, though the filed differs. For non selcted ids it works fine\r\n              selectedTest={this.props.selectedTest }\r\n              selectedIdRemoved={this.props.selectedIdRemoved}\r\n              closableX={selectedCount > 0 && i.id !== db.results.yourDeviceId}\r\n              closableEsc={selectedCount === 0 && i.id !== db.results.yourDeviceId}\r\n            />\r\n            {((selectedCount >= 0) || (expandedId === i.id)) && <TestResultDetails item={i} noHighlight={expandedId === i.id} selectedTest={this.props.selectedTest }/> }\r\n          </div>)}\r\n      </>)\r\n    }\r\n    else return <div className=\"nothing\">{l18n.nothingToShow}</div>\r\n  }\r\n}\r\n\r\nexport default TestResults;","import React, { Component } from 'react';\nimport l18n from './translations';\nimport ListSelector from './ListSelector'\nimport Search from './Search'\nimport TestResults from './TestResults'\nimport db from './data';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.platformClick = this.platformClick.bind(this);\n    this.testClick = this.testClick.bind(this);\n    this.searchChanged = this.searchChanged.bind(this);\n    this.resultSelected = this.resultSelected.bind(this);\n    this.selectedIdRemoved = this.selectedIdRemoved.bind(this);\n    this.wpf = \"wpf\";\n    this.android = \"android\";\n    this.macos = \"macos\";\n\n    this.urlParams = new URLSearchParams(window.location.search ? window.location.search : \"\");\n    this.selectedIdsParam = \"selected\";\n\n    let selectedResultIds = this.getSelectedIdsFromParam()\n    let inAppPlatform = this.urlParams.get(\"inapp\") ? this.urlParams.get(\"inapp\").toLocaleLowerCase() : null;\n    let selectedPlatforms = db.dictionaries.getPlatforms().map(p => p.key);\n\n    ({ selectedPlatforms, selectedResultIds } = this.inAppAdjustments(inAppPlatform, selectedPlatforms, selectedResultIds));\n\n    this.state = {\n      selectedTest: db.dictionaries.getTests()[0].key,\n      selectedResultIds: selectedResultIds,\n      inAppPlatform: inAppPlatform,\n      selectedPlatforms: selectedPlatforms,\n      device: \"\"\n    };\n\n    this.title = this.urlParams.get(\"ttl\") ? decodeURIComponent(this.urlParams.get(\"ttl\")) : null;\n  }\n\n  inAppAdjustments(inAppPlatform, selectedPlatforms, selectedResultIds) {\n    if (inAppPlatform) {\n      if (inAppPlatform === this.wpf) selectedPlatforms = [db.dictionaries.Windows];\n      else if (inAppPlatform === this.android) selectedPlatforms = [db.dictionaries.Android];\n      else if (inAppPlatform === this.macos) selectedPlatforms = [db.dictionaries.macOS];\n      let yourDevice = this.urlParams.get(\"yd\");\n      if (yourDevice) {\n        let yd = null;\n        try {\n          yd = JSON.parse(yourDevice);\n          if (yd) {\n            yd.platform = selectedPlatforms[0];\n            db.results.addYourDeviceResult(yd);\n          }\n          selectedResultIds = [db.results.yourDeviceId];\n        }\n        catch { }\n      }\n    }\n    return { selectedPlatforms, selectedResultIds };\n  }\n\n  getSelectedIdsFromParam(){\n    let param = this.urlParams.get(this.selectedIdsParam);\n    let ids = [];\n\n    if (param) {\n      let split = param.split(\",\");\n      \n      for (let i = 0; i < split.length; i++){\n        let id = parseInt(split[i]);\n        if (Number.isInteger(id) && db.results.idExists(id) && !ids.includes(id)){\n          ids.push(id);\n        }\n      }\n    }\n\n    return ids;\n  }\n\n  addSelectedIdsToParam(ids){\n    if (ids.length > 0){ \n      let param = \"\";\n\n      for (let i = 0; i < ids.length; i++) {\n        param += ids[i];\n        if (i !== ids.length-1) param+=\",\";\n      }\n\n      this.urlParams.set(this.selectedIdsParam, param);\n    }\n    else {\n      this.urlParams.delete(this.selectedIdsParam);\n    }\n    window.history.replaceState({},null,\"?\"+this.urlParams.toString());\n  }\n\n  testClick(key){\n    this.setState({selectedTest: key});\n  }\n\n  platformClick(key){\n    this.setState({selectedPlatforms: key});\n  }\n\n  searchChanged(val){\n    this.setState({device: val});\n  }\n\n  resultSelected(resultId, clearDevice){\n    let selectedResultIds = this.state.selectedResultIds;\n    selectedResultIds.push(resultId);\n    if (clearDevice) {\n      this.setState({device: \"\"});\n    }\n    this.setSelectedIds(selectedResultIds);\n  }\n\n  setSelectedIds(selectedResultIds) {\n    this.setState({ selectedResultIds: selectedResultIds });\n    this.addSelectedIdsToParam(selectedResultIds);\n  }\n\n  selectedIdRemoved(id){\n    let selectedResultIds = this.state.selectedResultIds;\n    selectedResultIds = selectedResultIds.filter(i => i !== id);\n    this.setSelectedIds(selectedResultIds);\n  }\n\n  setTitle(title){\n    document.title = title;\n  }\n\n  render() {\n    let stl = this.setTitle;\n\n    if (this.title){ // TestResults can change title, upon first load override title with the value from parm\n      stl(this.title);\n      this.title = null;\n      stl = null;\n    }\n\n    return (\n      <div className={this.state.inAppPlatform !== this.wpf ? \"pad\" : null}>\n        {!this.state.inAppPlatform && <h1>{l18n.title}: </h1>}\n        {!this.state.inAppPlatform && <h2>{l18n.subTitle}</h2>}\n        <ListSelector itemClick={this.platformClick} selectedKey={this.state.selectedPlatforms} \n          items={db.dictionaries.getPlatforms()} selectAll={true} />\n        <ListSelector itemClick={this.testClick} selectedKey={this.state.selectedTest} \n          items={db.dictionaries.getTests()} />\n        <Search searchChanged={this.searchChanged} enterPressed={this.resultSelected}/>\n        <br/>\n        <TestResults \n          selectedTest={this.state.selectedTest}\n          selectedPlatforms={this.state.selectedPlatforms}\n          selectedResultIds={this.state.selectedResultIds}\n          selectedIdRemoved={this.selectedIdRemoved}\n          resultSelected={this.resultSelected}\n          device={this.state.device}\n          setTitle={stl}\n        />\n      </div>\n    );\n\n\n\n  }\n}\n\nexport default App;","import 'babel-polyfill';\nimport 'url-search-params-polyfill';\nimport 'whatwg-fetch'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './index_dark.css';\nimport App from './App';\nimport l18n from './translations';\nimport db from './data';\n\nlet benchmark = false;\nlet testDb = false;\nlet themeParam = null;\n\ninitParams(); \nstart();\n\nfunction start(){\n  l18n.init();\n  document.title = l18n.pageTitle;\n  if (themeParam !== \"white\") document.body.className=\"dark\";\n\n  db.init(testDb).then(() => {\n    ReactDOM.render(<App />, document.getElementById('root'));\n    if (benchmark){\n      document.title = \"Running benchmark...\";\n      runBenchmark();\n    }\n  });\n}\n\nfunction initParams(){\n  const urlParams = new URLSearchParams(window.location.search);\n  themeParam = urlParams.get(\"theme\");\n  if (urlParams.get(\"benchmark\") === \"true\") { benchmark = true; testDb = true; }\n  else if (urlParams.get(\"testdb\") === \"true\") testDb = true\n}\n\nfunction runBenchmark(){\n  let t1 = performance.now();\n  const repeats = 5;\n  for (var i = 0; i < repeats; i++){\n    ReactDOM.render(<span>Swap</span>, document.getElementById('root'))\n    ReactDOM.render(<App />, document.getElementById('root'))\n  }\n  let t2 = performance.now();\n\n  let result = \"Rendering page took on average: \" + ((t2-t1)/repeats).toFixed(2) + \"ms\";\n  document.title = \"Becnchmark completed. \" + result;\n  alert(result);\n}"],"sourceRoot":""}