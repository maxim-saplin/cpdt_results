{"version":3,"sources":["img/windows.svg","img/macos.svg","img/google-play.svg","img/apk.svg","img/github.svg","img/linux.svg","data/dictionaries.js","translations/ru.js","translations/fr.js","translations/index.js","translations/en.js","PressableLink.js","ListSelector.js","data/results.js","data/db.js","data/index.js","Search.js","TestResultDetails.js","TestResult.js","Hint.js","TestResults.js","DownloadLinks.js","AboutEn.js","AboutRu.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","platforms","tests","translations","pageTitle","aboutTitle","downloadTitle","title","subTitle","seqWrite","seqRead","randWrite","randRead","memCopy","seqWrite_s","seqRead_s","randWrite_s","randRead_s","memCopy_s","seqWrite_f","seqRead_f","randWrite_f","randRead_f","memCopy_f","throughput","nothingToShow","Android","macOS","iOS","Windows","all","mbps","gbps","hitEnter","hintDoubleTap","hintSwipe","close","yourDevice","result_SRW","result_RRW","result_MEM","result_SW","result_SR","result_RW","result_RR","helloWorld","localeObj","param","URLSearchParams","window","location","search","get","lang","this","enLocale","locale","toLocaleLowerCase","navigator","language","toLowerCase","includes","ruLocale","ru","frLocale","fr","Object","keys","forEach","key","shortcutRegex","PressableLink","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onKeyPress","bind","assertThisInitialized","initShortcut","shortcut","children","match","length","keyPressSubscribed","document","addEventListener","removeEventListener","e","activeElement","HTMLBodyElement","onClick","react_default","a","createElement","className","Component","ListSelector","toggle","selectAll","selectedKey","filter","k","push","items","map","shortcuts","has","val","Array","isArray","i","itemClick","prevItems","Map","sc","arr","set","size","initShortcuts","_this2","updateShortcuts","name","l18n","addShortcut","obj","dictionaries","getTests","mod","data","getPlatforms","console","log","results","addYourDeviceResult","yd","device","id","yourDeviceId","deviceDetail","pop","getResults","platfroms","test","excludeIds","filters","r","hidden","platform","trim","result","condition","sort","b","lastResultId","getResultById","idExists","setPercents","maxVal","percent","getLastResultId","db_url","db","init","useTest","fetchVersion","Promise","resolve","fetch","cache","then","response","json","storage","setItem","v","version","fetchDb","JSON","stringify","promise","localStorage","getItem","parse","_unused","localDbVersion","initFake","platfrom","deviceComment","deviceYear","dateTested","Search","textChanged","moveCursorToEnd","state","extraSpaces","value","blink","showHitn","textInput","React","createRef","enterPressed","target","innerText","searchChanged","setState","charCode","last","el","createRange","setTimeout","selection","getSelection","range","setStart","childNodes","collapse","removeAllRanges","addRange","current","Fragment","contentEditable","ref","onInput","onFocus","nativeEvent","onBlur","focus","PureComponent","TestResultDetails","item","noHighlight","selectedTest","TestResult","itemProp","style","width","closableX","selectedIdRemoved","closableEsc","Hint","TestResults","onKeyUp","handleSingleDblClicks","expandedId","doubleTapHint","text","clickTimeout","singleClick","dblClick","preventDefault","clearTimeout","keyCode","deletableId","_this3","selectedPlatforms","selectedResultIds","selectedCount","selectedResults","concat","setTitle","keyboardEventsSubscription","src_Hint","itemScope","getAllResults","empty","resultSelected","src_TestResult","src_TestResultDetails","DownloadLinks","href","src","windows","google_play","apk","github","opacity","linux","About","inApp","src_PressableLink","linkClass","toggleAbout","class","download","App","platformClick","testClick","swipe","wpf","android","macos","urlParams","selectedIdsParam","aboutParam","showDownloadParam","qParam","inappParam","getSelectedIdsFromParam","inAppPlatform","q","_this$inAppAdjustment","inAppAdjustments","showAbout","showDownload","decodeURIComponent","renderCounter","ids","split","parseInt","Number","isInteger","delete","history","replaceState","toString","swipeHint","left","t","resultId","clearDevice","setSelectedIds","addSelectedIdsToParam","stl","helpLinkClass","AboutRu_About","react_swipe_events_default","onSwipedLeft","onSwipedRight","threshold","src_ListSelector","src_Search","src_TestResults","benchmark","testDb","themeParam","initParams","body","ReactDOM","render","src_App","getElementById","t1","performance","now","toFixed","alert","runBenchmark","start"],"mappings":"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","file":"static/js/main.e3959fd6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/windows.15e72531.svg\";","module.exports = __webpack_public_path__ + \"static/media/macos.3a236d88.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-play.7041ae46.svg\";","module.exports = __webpack_public_path__ + \"static/media/apk.a00fa3a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.990c2b02.svg\";","module.exports = __webpack_public_path__ + \"static/media/linux.51ffa359.svg\";","import l18n from '../translations';\r\n\r\nlet platforms, tests;\r\nconst shortcutRegex = /[^\\[]+(?=\\])/;\r\n\r\nfunction addShortcut(obj) {\r\n  let match = obj.name.match(shortcutRegex);\r\n  if (match && match.length === 1)\r\n    obj.shortcut = match[0].toLowerCase();\r\n}\r\n\r\nfunction getEntities(items) {\r\n  return items.map(i => {\r\n      let obj = {\r\n        key: i,\r\n        name: l18n[i] ? l18n[i] : i,\r\n        shortcut: null\r\n      };\r\n      addShortcut(obj);\r\n      return obj;\r\n    });\r\n}\r\n\r\nfunction getEntitiesWithL18nMod(items, mod) {\r\n  return items.map(i => {\r\n      let obj = {\r\n        key: i,\r\n        name: l18n[i+mod] ? l18n[i+mod] : i,\r\n        shortcut: null\r\n      };\r\n      addShortcut(obj);\r\n      return obj;\r\n    });\r\n}\r\n\r\nconst dictionaries = \r\n{\r\n  getTests : function(){\r\n    if (!tests) tests = getEntitiesWithL18nMod(this.data.tests,\"_s\");\r\n    return tests;\r\n  },  \r\n\r\n  getPlatforms : function(){\r\n      if (!platforms){\r\n        platforms = getEntities(this.data.platforms);\r\n\r\n        let keys = platforms.map(p => p.key);\r\n\r\n        if (keys.length !== 4) console.log(\"Invalid number of platforms in DB, 4 supported, found \"+keys.length);\r\n        if (!keys.includes(this.Windows)) console.log(\"Windows platfrom not found in DB\");\r\n        if (!keys.includes(this.Android)) console.log(\"Android platfrom not found in DB\");\r\n        if (!keys.includes(this.macOS)) console.log(\"macOS platfrom not found in DB\");\r\n        if (!keys.includes(this.iOS)) console.log(\"iOS platfrom not found in DB\");\r\n      }\r\n      return platforms;\r\n  }\r\n}\r\n\r\ndictionaries.seqWrite = \"seqWrite\";\r\ndictionaries.seqRead = \"seqRead\";\r\ndictionaries.randWrite = \"randWrite\";\r\ndictionaries.randRead = \"randRead\";\r\ndictionaries.memCopy = \"memCopy\";\r\n\r\ndictionaries.Windows = \"Windows\";\r\ndictionaries.Android = \"Android\";\r\ndictionaries.macOS = \"macOS\";\r\ndictionaries.iOS = \"iOS\";\r\n\r\nexport default dictionaries;","const translations = \r\n{\r\n    pageTitle:  \"Бенчмарк CPDT: База производительности памяти\",\r\n    aboutTitle:  \"Бенчмарк CPDT: О программе\",\r\n    downloadTitle:  \"Бенчмарк CPDT: Скачать\",\r\n    title: \"Тестирование SSD/HDD\",\r\n    subTitle: \"Скорости устройств\",\r\n    seqWrite: \"[П]оследовательная запись\",\r\n    seqRead: \"[П]оследовательное чтение\",\r\n    randWrite: \"[П]роизвольная запись (4КБ)\",\r\n    randRead: \"[П]роизвольное чтение (4КБ)\",\r\n    memCopy: \"[К]опирование памяти\",\r\n\r\n    seqWrite_s: \"[П]осл. запись\",\r\n    seqRead_s: \"[П]осл. чтение\",\r\n    randWrite_s: \"[П]роизв. запись\",\r\n    randRead_s: \"[П]роизв. чтение\",\r\n    memCopy_s: \"[К]оп. памяти\",\r\n\r\n    seqWrite_f: \"Последовательная запись\",\r\n    seqRead_f: \"Последовательное чтение\",\r\n    randWrite_f: \"Произвольная запись (4КБ)\",\r\n    randRead_f: \"Произвольное чтение (4КБ)\",\r\n    memCopy_f: \"Копирование памяти\",\r\n\r\n    throughput: \"Пропускная способность\",\r\n    nothingToShow: \"Nothing to show\",\r\n\r\n    Android: \"[A]ndroid\",\r\n    macOS: \"mac[O]S\",\r\n    iOS: \"[i]OS\",\r\n    Windows: \"[W]indows\",\r\n    all: \"Все\",\r\n    mbps: \"МБ/с\",\r\n    gbps: \"ГБ/с\",\r\n\r\n    hitEnter: \"Нажать Enter для закрепления записи\",\r\n    hintDoubleTap: \"Нажать два раза для закрепления записи\",\r\n    hintSwipe: \"Свайп влево/вправо для смены теста\",\r\n    close: \"[C] Закрыть\",\r\n    yourDevice: \"Ваше устройство\",\r\n\r\n    result_SRW: \"Посл.З÷Ч\",\r\n    result_RRW: \"Прзв.З÷Ч\",\r\n    result_MEM: \"Коп.пам\",\r\n\r\n    result_SW: \"Посл.З\",\r\n    result_SR: \"Посл.Ч\",\r\n    result_RW: \"Прзв.З\",\r\n    result_RR: \"Прзв.Ч\"\r\n}\r\n\r\nexport default translations;","const translations = \r\n{\r\n    helloWorld:  \"Bonjour!\",\r\n}\r\n\r\nexport default translations;","import en from './en';\r\nimport ru from './ru';\r\nimport fr from './fr';\r\n\r\nconst langParam = \"lang\";\r\n\r\n//Default texts\r\nconst translations = en;\r\n\r\n//Must be executed before accesing the translations. Updates default texts with locale specific translations. If there's no translation, default text will be used\r\ntranslations.init = function() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const param = urlParams.get(langParam);\r\n\r\n    let lang = this.enLocale;\r\n    this.locale = lang;\r\n\r\n    if (param) {\r\n        lang = param.toLocaleLowerCase();\r\n    }\r\n    else{\r\n        lang = navigator.language.toLowerCase();\r\n    }\r\n\r\n    let localeObj;\r\n\r\n    if (lang.includes(this.ruLocale)) {\r\n        localeObj = ru;\r\n        this.locale = this.ruLocale;\r\n    }\r\n    else if (lang.includes(this.frLocale)) {\r\n        localeObj = fr;\r\n        this.locale = this.frLocale;\r\n    }\r\n\r\n    if (localeObj)\r\n        Object.keys(translations).forEach((key) => {\r\n            if (localeObj[key])\r\n                translations[key] = localeObj[key];\r\n        });\r\n};\r\n\r\ntranslations.enLocale = \"en\";\r\ntranslations.ruLocale = \"ru\";\r\ntranslations.frLocale = \"fr\";\r\n\r\nexport default translations;","const translations = \r\n{\r\n    pageTitle: \"CPDT Benchmark: Storage Performance Database\",\r\n    aboutTitle:  \"CPDT Benchmark: About App\",\r\n    downloadTitle:  \"CPDT Benchmark: Download\",\r\n    title: \"SSD/HDD Benchmark\",\r\n    subTitle: \"Performance Chart\",\r\n    seqWrite: \"[S]equential write\",\r\n    seqRead: \"[S]equential read\",\r\n    randWrite: \"[R]andom write (4KB)\",\r\n    randRead: \"[R]andom read (4KB)\",\r\n    memCopy: \"[M]emory copy\",\r\n\r\n    seqWrite_s: \"[S]eq. write\",\r\n    seqRead_s: \"[S]eq. read\",\r\n    randWrite_s: \"[R]and. write\",\r\n    randRead_s: \"[R]and. read\",\r\n    memCopy_s: \"[M]em. copy\",\r\n\r\n    seqWrite_f: \"Sequential write\",\r\n    seqRead_f: \"Sequential read\",\r\n    randWrite_f: \"Random write (4KB)\",\r\n    randRead_f: \"Random read (4KB)\",\r\n    memCopy_f: \"Memory copy\",\r\n\r\n    throughput: \"Throughput\",\r\n    nothingToShow: \"Nothing to show\",\r\n\r\n    Android: \"[A]ndroid\",\r\n    macOS: \"mac[O]S\",\r\n    iOS: \"[i]OS\",\r\n    Windows: \"[W]indows\",\r\n    all: \"All\",\r\n    mbps: \"MB/s\",\r\n    gbps: \"GB/s\",\r\n\r\n    hitEnter: \"Hit Enter & fix top result\",\r\n    hintDoubleTap: \"Double tap to fix record at the top\",\r\n    hintSwipe: \"Swipe left or right to change test\",\r\n    close: \"[C]lose\",\r\n    yourDevice: \"Your device\",\r\n\r\n    result_SRW: \"Seq.W÷R\",\r\n    result_RRW: \"Rnd.W÷R\",\r\n    result_MEM: \"Mem.cpy\",\r\n\r\n    result_SW: \"Seq.W\",\r\n    result_SR: \"Seq.R\",\r\n    result_RW: \"Rnd.W\",\r\n    result_RR: \"Rnd.R\"\r\n}\r\n\r\nexport default translations;","import React, { Component } from 'react';\r\n\r\nconst shortcutRegex = /[^\\[]+(?=\\])/;\r\n\r\nclass PressableLink extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n    this.initShortcut = this.initShortcut.bind(this);\r\n\r\n    this.shortcut = null;\r\n    if (this.props.children){\r\n      let match = this.props.children.match(shortcutRegex);\r\n      if (match && match.length === 1)\r\n        this.shortcut = match[0].toLowerCase();\r\n    }\r\n  }\r\n\r\n  initShortcut() {\r\n    if (this.shortcut && !this.keyPressSubscribed) {\r\n      document.addEventListener('keypress', this.onKeyPress);\r\n      this.keyPressSubscribed = true;\r\n    }\r\n    else if (this.keyPressSubscribed) {\r\n      document.removeEventListener('keypress', this.onKeyPress);\r\n      this.keyPressSubscribed = false;\r\n    }\r\n  }\r\n\r\n  onKeyPress(e) {\r\n    if (document.activeElement instanceof HTMLBodyElement){\r\n      if (this.shortcut === e.key && this.props.onClick)\r\n      {\r\n        this.props.onClick();\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    if (this.keyPressSubscribed)\r\n      document.removeEventListener('keypress', this.onKeyPress);\r\n  }\r\n\r\n  render() {\r\n    this.initShortcut();\r\n    return <a className={this.props.className} onClick={this.props.onClick}>{this.props.children}</a>\r\n  }\r\n\r\n}\r\n\r\nexport default PressableLink;","import React, { Component } from 'react';\r\nimport l18n from './translations';\r\n\r\nclass ListSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.selectAll = this.selectAll.bind(this);\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n  }\r\n\r\n  toggle(key) {\r\n    if (this.props.selectedKey.includes(key)) { // remove key\r\n      if (this.props.selectedKey.length > 1) {\r\n        return this.props.selectedKey.filter(k => k !== key);\r\n      }\r\n      else {\r\n        return this.props.selectedKey;\r\n      }\r\n    }\r\n\r\n    this.props.selectedKey.push(key);\r\n\r\n    return this.props.selectedKey;\r\n  }\r\n\r\n  selectAll() {\r\n    return this.props.items.map(p => p.key);\r\n  }\r\n\r\n  onKeyPress(e) {\r\n    if (document.activeElement instanceof HTMLBodyElement){\r\n      if (this.shortcuts.has(e.key))\r\n      {\r\n        let val = this.shortcuts.get(e.key);\r\n\r\n        //TODO - add suport for repeting shortcuts in multiselect list\r\n        if (Array.isArray(val)){ // single select, repeat shortcuts\r\n          let key = val[0].key;\r\n          \r\n          for (let i = 0; i < val.length; i++){\r\n            if (val[i].key === this.props.selectedKey){\r\n              if (i+1 < val.length) key = val[i+1].key;\r\n            }\r\n          }\r\n\r\n          this.props.itemClick(key);\r\n        }\r\n        else if (Array.isArray(this.props.selectedKey)){ // multi select select, non-repeat shortcuts        \r\n          this.props.itemClick(this.toggle(val.key));\r\n        } else if (val.key !== this.props.selectedKey) { // single select, non-repeat shortcuts\r\n          this.props.itemClick(val.key);\r\n        } \r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    if (this.keyPressSubscribed)\r\n      document.removeEventListener('keypress', this.onKeyPress);\r\n  }\r\n\r\n  initShortcuts() {\r\n    this.prevItems = this.props.items;\r\n    this.shortcuts = new Map();\r\n    for (var i in this.prevItems) {\r\n      if (this.prevItems[i].shortcut) {\r\n        if (!this.shortcuts.has(this.prevItems[i].shortcut))\r\n          this.shortcuts.set(this.prevItems[i].shortcut, this.prevItems[i]);\r\n        else {\r\n          let sc = this.shortcuts.get(this.prevItems[i].shortcut);\r\n\r\n          if (Array.isArray(sc)) sc.push(this.prevItems[i]);\r\n          else {\r\n            let arr = [sc, this.prevItems[i]];\r\n            this.shortcuts.set(this.prevItems[i].shortcut, arr);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.shortcuts.size > 0) {\r\n      document.addEventListener('keypress', this.onKeyPress);\r\n      this.keyPressSubscribed = true;\r\n    }\r\n    else if (this.keyPressSubscribed) {\r\n      document.removeEventListener('keypress', this.onKeyPress);\r\n      this.keyPressSubscribed = false;\r\n    }\r\n  }\r\n\r\n  updateShortcuts() {\r\n    if (!this.prevItems) {\r\n      this.initShortcuts();\r\n    }\r\n    else if (this.prevItems !== this.props.items) {\r\n      this.initShortcuts();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.updateShortcuts();\r\n\r\n    if (this.props.items)\r\n      return (\r\n        <ul className={this.props.className}>\r\n          {\r\n              this.props.items.map( // multiselect\r\n                i =>\r\n                  <li\r\n                    key={i.key}\r\n                    className={this.props.selectedKey.includes(i.key) ? \"selected\" : null}\r\n                    onClick={\r\n                      Array.isArray(this.props.selectedKey) ? \r\n                      () => this.props.itemClick(this.toggle(i.key)) : // multiselect\r\n                      () => this.props.itemClick(i.key) //single select\r\n                    }\r\n                  >\r\n                    {i.name}\r\n                  </li>\r\n              )\r\n          }\r\n\r\n          {\r\n            this.props.selectAll && <li onClick={() => this.props.itemClick(this.selectAll())}>{l18n.all}</li>\r\n          }\r\n        </ul>\r\n      )\r\n\r\n      return null;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default ListSelector;","import l18n from '../translations';\r\n\r\nconst results = \r\n{\r\n  addYourDeviceResult: function(yd){\r\n    if (!yd.seqWrite && !yd.seqRead && !yd.randWrite && !yd.randRead && !yd.memCopy){\r\n      console.log(\"Invaid 'Your device' data\");\r\n      return;\r\n    }\r\n\r\n    if (!yd.device) yd.device = l18n.yourDevice;\r\n\r\n    yd.id = this.yourDeviceId;\r\n    yd.deviceDetail = \"\";\r\n\r\n    if (this.data.results[this.data.results.length-1].id === yd.id) this.data.results.pop();\r\n    this.data.results.push(yd);\r\n  },\r\n\r\n  getResults: function(platfroms, test, device, excludeIds){\r\n    let filters = [];\r\n\r\n    filters.push(r => !r.hidden);\r\n    \r\n    if (platfroms && Array.isArray(platfroms)){\r\n      filters.push(r => platfroms.includes(r.platform));\r\n    }\r\n\r\n    if (device){\r\n      device = device.trim().toLowerCase();\r\n      if (device) {\r\n        if (device.length < 4)\r\n          filters.push(r => r.device.toLowerCase().includes(device));\r\n        else\r\n          filters.push(r => r.device.toLowerCase().includes(device) || r.deviceDetail.toLowerCase().includes(device));\r\n      }\r\n    }\r\n\r\n    if (excludeIds && excludeIds.length > 0){\r\n      filters.push(r => !excludeIds.includes(r.id));\r\n    }\r\n\r\n    let result = this.data.results.filter(r => \r\n      {\r\n        let condition = true;\r\n        for (let i = 0; i < filters.length; i++){\r\n          condition &= filters[i](r);\r\n          if (!condition) return false;\r\n        }\r\n\r\n        return true;\r\n      });\r\n\r\n    if (test){\r\n      result.sort(\r\n        (a,b) => \r\n          b[test] - a[test]\r\n        );\r\n    }\r\n\r\n    if (result.length > 0) this.lastResultId = result[0].id; else this.lastResultId = null;\r\n\r\n    return result;\r\n  },\r\n\r\n  getResultById: function(id){\r\n    if (id < 0 || id > this.data.results.length) return null;\r\n    if (id === 0 && this.data.results[this.data.results.length-1].id === 0) return this.data.results[this.data.results.length-1];\r\n\r\n    return this.data.results[id-1];\r\n  },\r\n\r\n  idExists: function(id){\r\n    return this.getResultById(id) != null;\r\n  },\r\n\r\n  setPercents: function(results, test) {\r\n    let maxVal = 0;\r\n    for (let i = 0; i < results.length; i++){\r\n      if (results[i][test] > maxVal) maxVal = results[i][test];\r\n    }\r\n    for (let i = 0; i < results.length; i++){\r\n      results[i].percent = results[i][test]/maxVal;\r\n    }\r\n  },\r\n\r\n  getLastResultId: function(){\r\n    if (this.lastResultId) return this.lastResultId;\r\n    return null;\r\n  }\r\n}\r\n\r\nresults.lastResultId = null;\r\nresults.yourDeviceId = 0;\r\n\r\nexport default results;","import dictionaries from './dictionaries';\r\nimport results from './results';\r\n\r\nconst db_version_url = \"https://raw.githubusercontent.com/maxim-saplin/cpdt_results/master/Results_version.json\";\r\nlet db_url = \"https://raw.githubusercontent.com/maxim-saplin/cpdt_results/master/Results.json\";\r\nconst db_url_test = \"https://raw.githubusercontent.com/maxim-saplin/cpdt_results/master/Results_test.json\";\r\nconst db_version_sotrage_key = \"cpdt_db_version\";\r\nconst db_sotrage_key = \"cpdt_db\";\r\n\r\nconst db = {\r\n    dictionaries : dictionaries,\r\n    results : results,\r\n    \r\n    init: function (useTest){\r\n        let fetchVersion = () => {\r\n            return new Promise (resolve => {\r\n                fetch(db_version_url, {cache: \"no-store\"})\r\n                .then(response => {\r\n                    return response.json();\r\n                })\r\n                .then(result => {\r\n                    storage.setItem(db_version_sotrage_key, result.v);\r\n                    this.version = result.v;\r\n                    resolve(result.v);\r\n                });\r\n            });\r\n        };\r\n\r\n        let fetchDb = () => {\r\n            return new Promise (resolve => {\r\n                fetch(db_url, {cache: \"no-store\"})\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    storage.setItem(db_sotrage_key, JSON.stringify(result));\r\n                    dictionaries.data = result;\r\n                    results.data = result;\r\n                    resolve(result);\r\n                })\r\n            });\r\n        };\r\n\r\n        let promise = null;\r\n\r\n        let storage = window.localStorage;\r\n\r\n        if (useTest){\r\n          db_url = db_url_test;\r\n          storage.setItem(db_version_sotrage_key,\"test\");\r\n        }\r\n\r\n        let data = storage.getItem(db_sotrage_key);\r\n        if (data) {\r\n          try { data = JSON.parse(data);} catch{};\r\n          if (!data.results) data = null; // shallow check for corrupt data\r\n        }\r\n        let localDbVersion = storage.getItem(db_version_sotrage_key);\r\n\r\n        if (data){\r\n            promise = new Promise( resolve => {\r\n                fetchVersion()\r\n                .then(result => {\r\n                    if (useTest){\r\n                      storage.setItem(db_version_sotrage_key,\"test\");\r\n                    }\r\n\r\n                    if (result !== localDbVersion){\r\n                        fetchDb().then(result => resolve(result));                    \r\n                    }\r\n                    // local data is up to date\r\n                    else{ \r\n                        dictionaries.data = data;\r\n                        results.data = data;\r\n                        resolve(data)\r\n                    };\r\n                });\r\n            });\r\n        }\r\n        else{\r\n            fetchVersion();\r\n            promise = fetchDb();\r\n        }\r\n\r\n        return promise;\r\n    },\r\n\r\n    initFake: function() {\r\n      dictionaries.data = {\"results\":[{\"id\":\"1\",\"device\":\"Xiaomi Mi8 SE\",\"platfrom\":\"Android\",\"deviceDetail\":\"Snapdragon 710, 64GB\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"23.10.2018\",\"seqWrite\":\"110\",\"seqRead\":\"299\",\"randWrite\":\"18,9\",\"randRead\":\"9,5\",\"memCopy\":\"4,65\"},{\"id\":\"2\",\"device\":\"Samsung Galaxy S9\",\"platfrom\":\"Android\",\"deviceDetail\":\"Exynos 9810, 64Gb\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"04.10.2018\",\"seqWrite\":\"118\",\"seqRead\":\"654\",\"randWrite\":\"1,72\",\"randRead\":\"14,43\",\"memCopy\":\"12,7\"},{\"id\":\"3\",\"device\":\"Essential Phone PH-1\",\"platfrom\":\"Android\",\"deviceDetail\":\"Snapdragon 835, 128GB\",\"deviceComment\":\"\",\"deviceYear\":\"2017\",\"dateTested\":\"30.09.2018\",\"seqWrite\":\"125\",\"seqRead\":\"440\",\"randWrite\":\"4,3\",\"randRead\":\"17,4\",\"memCopy\":\"6,6\"},{\"id\":\"4\",\"device\":\"15\\\" MacBook Pro\",\"platfrom\":\"macOS\",\"deviceDetail\":\"macOS, APFS\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"03.10.2018\",\"seqWrite\":\"1331,2\",\"seqRead\":\"2088,96\",\"randWrite\":\"75\",\"randRead\":\"38\",\"memCopy\":\"10,3\"},{\"id\":\"5\",\"device\":\"15\\\" MacBook Pro\",\"platfrom\":\"macOS\",\"deviceDetail\":\"macOS, NTFS partition\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"03.10.2018\",\"seqWrite\":\"730\",\"seqRead\":\"694\",\"randWrite\":\"27\",\"randRead\":\"8\",\"memCopy\":\"10,3\"},{\"id\":\"6\",\"device\":\"15\\\" MacBook Pro\",\"platfrom\":\"Windows\",\"deviceDetail\":\"Windows 10 Bootcamp, NTFS\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"03.10.2018\",\"seqWrite\":\"343\",\"seqRead\":\"1617,92\",\"randWrite\":\"0,5625\",\"randRead\":\"11,01\",\"memCopy\":\"8,5\"},{\"id\":\"7\",\"device\":\"15\\\" MacBook Pro\",\"platfrom\":\"Windows\",\"deviceDetail\":\"Windows 10, VMWare Fusion, NTFS\",\"deviceComment\":\"\",\"deviceYear\":\"2018\",\"dateTested\":\"03.10.2018\",\"seqWrite\":\"850\",\"seqRead\":\"2457,6\",\"randWrite\":\"12\",\"randRead\":\"29\",\"memCopy\":\"5,8\"}],\"platforms\":[\"Android\", \"macOS\", \"Windows\"],\"tests\":[\"seqWrite\", \"seqRead\", \"randWrite\", \"randRead\", \"memCopy\"]};\r\n      results.data = dictionaries.data;\r\n    }\r\n};\r\n\r\nexport default db;","import db from './db';\r\n\r\nexport default db;","import React, { PureComponent } from 'react';\r\nimport db from './data';\r\nimport l18n from './translations';\r\n\r\nclass Search extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.textChanged = this.textChanged.bind(this);\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n    this.moveCursorToEnd = this.moveCursorToEnd.bind(this);\r\n\r\n    this.state = {\r\n      extraSpaces: props.value ? false : true, \r\n      blink: false,\r\n      showHitn: false\r\n    };\r\n\r\n    this.textInput = React.createRef();\r\n  }\r\n\r\n  textChanged(e){\r\n    if (this.enterPressed) {\r\n      e.target.innerText = \"\"; \r\n      this.enterPressed = false;\r\n    }\r\n    \r\n    if (this.props.searchChanged) {\r\n      this.props.searchChanged(e.target.innerText, true);\r\n    }\r\n    if (e.target.innerText && this.state.extraSpaces) this.setState({extraSpaces: false});\r\n    else if (!e.target.innerText && !this.state.extraSpaces) this.setState({extraSpaces: true});\r\n  }\r\n\r\n  onKeyPress(e){\r\n    if (e.key === \"Enter\" || e.charCode === 13) {\r\n      this.enterPressed = true;\r\n      let last = db.results.getLastResultId();\r\n      if (e.target.innerText && this.props.enterPressed && last) this.props.enterPressed(last);\r\n    }\r\n    else this.enterPressed = false;\r\n  }\r\n\r\n  moveCursorToEnd(el){\r\n    if(el.innerText && document.createRange)\r\n    {\r\n      window.setTimeout(() =>\r\n        {\r\n          let selection = document.getSelection();\r\n          let range = document.createRange();\r\n      \r\n          range.setStart(el.childNodes[0],el.innerText.length);\r\n          range.collapse(true);\r\n          selection.removeAllRanges();\r\n          selection.addRange(range);\r\n        }\r\n      ,1);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if (document.activeElement === this.textInput.current) \r\n      this.moveCursorToEnd(this.textInput.current);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>      \r\n        <span className=\"searchBox\">\r\n          <span \r\n            contentEditable=\"true\" \r\n            ref={this.textInput} \r\n            onInput={this.textChanged} \r\n            onKeyPress={this.onKeyPress}\r\n            onFocus={(e) => {this.setState({blink:true}); this.moveCursorToEnd(e.nativeEvent.target)}} \r\n            onBlur={() => {this.setState({blink:false})}}\r\n          >\r\n          {this.props.value}\r\n          </span>\r\n          <span \r\n            className={this.state.blink ? \"blink\" : \"\"} \r\n            onClick={() => {this.textInput.current.focus()}}\r\n          >\r\n            {!this.state.blink && this.state.extraSpaces && \"\\xA0\\xA0\\xA0\\xA0\"}_\r\n          </span>\r\n          &lt;/\r\n        </span>\r\n        <span className={!this.state.extraSpaces && this.state.blink ? \"searchBoxHint visible\" : \"searchBoxHint\"}>\r\n          {l18n.hitEnter}\r\n        </span>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;","import React, { PureComponent } from 'react';\r\nimport l18n from './translations';\r\nimport db from './data';\r\n\r\nclass TestResultDetails extends PureComponent {\r\n  render() {\r\n    let i = this.props.item;\r\n\r\n    if (i) return (\r\n      <span className={this.props.noHighlight ? \"centerColumn noHighlight\" : \"centerColumn\"}>\r\n\r\n        <span className={this.props.selectedTest === db.dictionaries.seqWrite ? \"singleRes selected\" : \"singleRes\"}>\r\n          <span className=\"ttl\">{l18n.result_SW}</span>\r\n          <br/>\r\n          <span className=\"res\">{i[db.dictionaries.seqWrite]}</span>\r\n          <span className=\"unit\">{l18n.mbps}</span>\r\n        </span>\r\n\r\n        <span className={this.props.selectedTest === db.dictionaries.seqRead ? \"singleRes selected\" : \"singleRes\"}>\r\n          <span className=\"ttl\">{l18n.result_SR}</span>\r\n          <br/>\r\n          <span className=\"res\">{i[db.dictionaries.seqRead]}</span>\r\n          <span className=\"unit\">{l18n.mbps}</span>\r\n        </span>\r\n        \r\n        <span className={this.props.selectedTest === db.dictionaries.randWrite ? \"singleRes selected\" : \"singleRes\"}>\r\n          <span className=\"ttl\">{l18n.result_RW}</span>\r\n          <br/>\r\n          <span className=\"res\">{i[db.dictionaries.randWrite]}</span>\r\n          <span className=\"unit\">{l18n.mbps}</span>\r\n        </span>\r\n\r\n        <span className={this.props.selectedTest === db.dictionaries.randRead ? \"singleRes selected\" : \"singleRes\"}>\r\n          <span className=\"ttl\">{l18n.result_RR}</span>\r\n          <br/>\r\n          <span className=\"res\">{i[db.dictionaries.randRead]}</span>\r\n          <span className=\"unit\">{l18n.mbps}</span>\r\n        </span>\r\n\r\n        <span className={this.props.selectedTest === db.dictionaries.memCopy ? \"singleRes selected\" : \"singleRes\"}>\r\n          <span className=\"ttl\">{l18n.result_RR}</span>\r\n          <br/>\r\n          <span className=\"res\">{i[db.dictionaries.memCopy]}</span>\r\n          <span className=\"unit\">{l18n.gbps}</span>\r\n        </span>\r\n\r\n      </span>);\r\n\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default TestResultDetails;","import React, { PureComponent } from 'react';\r\nimport l18n from './translations';\r\n\r\nclass TestResult extends PureComponent {\r\n  render() {\r\n    let i = this.props.item;\r\n\r\n    if (i) return (\r\n      <>\r\n        <span className=\"leftColumn\">\r\n          <em itemProp=\"name\">\r\n            {i.device}\r\n          </em>\r\n          <br />\r\n          <span className=\"greyed\" itemProp=\"description\">\r\n            {i.deviceYear}{i.deviceDetail && \",\"} {i.deviceDetail}\r\n          </span>\r\n        </span>\r\n        <span className=\"rightColumn\">\r\n          <span style={{ width: i.percent * 80 + \"%\" }} itemProp=\"throughput\" > \r\n            {i[this.props.selectedTest]} {this.props.selectedTest === \"memCopy\" ? l18n.gbps : l18n.mbps}\r\n          </span>\r\n          {this.props.closableX && <button onClick={() => this.props.selectedIdRemoved(i.id)}>X</button>}\r\n          {this.props.closableEsc && <button onClick={() => this.props.selectedIdRemoved(i.id)}>[Esc]</button>}\r\n        </span>\r\n      </>);\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default TestResult;","import React, { PureComponent } from 'react';\r\n\r\nclass Hint extends PureComponent {\r\n  render() {\r\n    return <span className=\"hint\">{this.props.children}</span>\r\n  }\r\n}\r\n\r\nexport default Hint;","import React, { Component } from 'react';\r\nimport TestResultDetails from './TestResultDetails';\r\nimport TestResult from './TestResult';\r\nimport Hint from './Hint';\r\nimport l18n from './translations';\r\nimport db from './data';\r\n\r\nclass TestResults extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onKeyUp = this.onKeyUp.bind(this);\r\n    this.handleSingleDblClicks = this.handleSingleDblClicks.bind(this);\r\n    this.state = {expandedId: null, doubleTapHint: false};\r\n  }\r\n\r\n  getAllResults(result) {\r\n    let text = l18n.throughput + \"\\x0A\";\r\n    let tests = db.dictionaries.getTests();\r\n\r\n    for (var i = 0; i < tests.length; i++) {\r\n      text += l18n[tests[i].key + \"_s\"] + \": \" + result[tests[i].key] + \" \";\r\n      text += tests[i].key === \"memCopy\" ? l18n.gbps : l18n.mbps;\r\n      if (i !== tests.length - 1) text += \"\\x0A\";\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    if (this.keyPressSubscribed)\r\n      document.removeEventListener('keyup', this.onKeyUp);\r\n\r\n      this.clickTimeout = null\r\n  }\r\n\r\n  handleSingleDblClicks(e, singleClick, dblClick){\r\n    e.preventDefault();\r\n    if (this.clickTimeout !== null) {\r\n      clearTimeout(this.clickTimeout)\r\n      this.clickTimeout = null;\r\n      if (dblClick) dblClick();\r\n    } \r\n    else {\r\n      this.clickTimeout = setTimeout(()=>{\r\n      if (singleClick) singleClick();\r\n      clearTimeout(this.clickTimeout)\r\n        this.clickTimeout = null\r\n      }, 300)\r\n    }\r\n  }\r\n\r\n  onKeyUp(e){\r\n    if ((e.key === \"Escape\" || e.keyCode === 27) && this.deletableId) {\r\n      this.props.selectedIdRemoved(this.deletableId);\r\n    }\r\n  }\r\n\r\n  keyboardEventsSubscription() {\r\n    if (!this.deletableId && this.keyPressSubscribed) {\r\n      document.removeEventListener('keyup', this.onKeyUp);\r\n      this.keyPressSubscribed = false;\r\n    }\r\n    else if (this.deletableId && !this.keyPressSubscribed) {\r\n      document.addEventListener('keyup', this.onKeyUp);\r\n      this.keyPressSubscribed = true;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let items = db.results.getResults(this.props.selectedPlatforms, this.props.selectedTest, this.props.device, this.props.selectedResultIds);\r\n    let selectedCount = -1;\r\n    this.deletableId = null;\r\n    let title = \"\";\r\n\r\n    let selectedResultIds = this.props.selectedResultIds;\r\n    let expandedId = this.state.expandedId;\r\n\r\n    if (selectedResultIds && selectedResultIds.length > 0){\r\n      let selectedResults = selectedResultIds.map(id => db.results.getResultById(id));\r\n      items = selectedResults.concat(items);\r\n      selectedCount = selectedResults.length;\r\n      this.deletableId = selectedResults[selectedCount-1].id;\r\n\r\n      for (let i = 0; (i < 2) && (i < selectedResults.length); i++){\r\n        title += selectedResults[i].device;\r\n        if (i === 1 || i === selectedResults.length-1) title +=\" - \"; else title +=\", \";\r\n      }\r\n    }\r\n\r\n    if (this.props.setTitle) this.props.setTitle(title + l18n.pageTitle);\r\n    \r\n    this.keyboardEventsSubscription();\r\n\r\n    if (items && items.length > 0) {\r\n      db.results.setPercents(items, this.props.selectedTest);\r\n      return (\r\n        <>\r\n        {this.state.doubleTapHint && <Hint>{l18n.hintDoubleTap}</Hint>}\r\n        {items.map(i =>\r\n          <div \r\n            itemScope\r\n            key={i.id} \r\n            className={selectedCount-- > 0 ? \"item selected\" : (expandedId === i.id) ? \"item highlight\" : \"item\"} \r\n            id={selectedCount === 0 ? \"last\" : null}\r\n            title={this.getAllResults(i)}\r\n            // onDoubleClick={\r\n            //   (!selectedResultIds || selectedResultIds.length === 0 || !selectedResultIds.includes(i.id)) ?\r\n            //   (e) => {\r\n            //     let selection = window.getSelection();\r\n            //     if (selection.empty) selection.empty(); \r\n            //     this.props.resultSelected(i.id); \r\n            //     if (expandedId === i.id) this.setState({expandedId: null});\r\n            //   }\r\n            //   : null\r\n            // }\r\n            onClick={\r\n              (e) =>\r\n              {\r\n                this.handleSingleDblClicks(\r\n                  e,\r\n                  //single click\r\n                  (!selectedResultIds || selectedResultIds.length === 0 || !selectedResultIds.includes(i.id)) ?\r\n                  () => {\r\n                    this.setState({expandedId: expandedId === i.id ? null : i.id});\r\n                    if (!this.state.doubleTapHint) this.setState({doubleTapHint:true});\r\n                  }\r\n                  : null,\r\n                  //dbl click\r\n                  (!selectedResultIds || selectedResultIds.length === 0 || !selectedResultIds.includes(i.id)) ?\r\n                  (e) => {\r\n                    let selection = window.getSelection();\r\n                    if (selection.empty) selection.empty(); \r\n                    this.props.resultSelected(i.id); \r\n                    if (expandedId === i.id) this.setState({expandedId: null});\r\n                  }\r\n                  : null\r\n                );\r\n              }\r\n              // (!selectedResultIds || selectedResultIds.length === 0 || !selectedResultIds.includes(i.id)) ?\r\n              // () => {\r\n              //   this.setState({expandedId: expandedId === i.id ? null : i.id});\r\n              //   if (!this.state.doubleTapHint) this.setState({doubleTapHint:true});\r\n              // }\r\n              // : null\r\n            }\r\n          >\r\n            <TestResult\r\n              item={i}\r\n              percent={i.percent} // hack to make PureComponent re-render, somehow for selected id's percent inside 'item' is'nt considered as changed, though the filed differs. For non selcted ids it works fine\r\n              selectedTest={this.props.selectedTest }\r\n              selectedIdRemoved={this.props.selectedIdRemoved}\r\n              closableX={selectedCount > 0 && i.id !== db.results.yourDeviceId}\r\n              closableEsc={selectedCount === 0 && i.id !== db.results.yourDeviceId}\r\n            />\r\n            {((selectedCount >= 0) || (expandedId === i.id)) && <TestResultDetails item={i} noHighlight={expandedId === i.id} selectedTest={this.props.selectedTest }/> }\r\n          </div>)}\r\n      </>)\r\n    }\r\n    else return <div className=\"nothing\">{l18n.nothingToShow}</div>\r\n  }\r\n}\r\n\r\nexport default TestResults;","import React from 'react';\nimport windows from './img/windows.svg';\nimport macOS from './img/macos.svg';\nimport google_play from './img/google-play.svg';\nimport apk from './img/apk.svg';\nimport github from './img/github.svg';\nimport linux from './img/linux.svg';\n\nexport default function DownloadLinks(props){\n    return (\n        <>\n            <a href=\"https://github.com/maxim-saplin/CrossPlatformDiskTest/releases/download/2.2.7/CPDT.exe.zip\" \n            target=\"_blank\">\n                <img src={windows}/>\n                <br/>Windows\n            </a>\n            <a href=\"https://github.com/maxim-saplin/CrossPlatformDiskTest/releases/download/2.2.7/CPDT.app.zip\" \n            target=\"_blank\">\n                <img src={macOS}/>\n                <br/>macOS\n            </a>\n            <a href=\"https://play.google.com/store/apps/details?id=com.Saplin.CPDT\" \n            target=\"_blank\">\n                <img src={google_play}/><br/>\n                Android\n            </a>\n            <a href=\"https://github.com/maxim-saplin/CrossPlatformDiskTest/releases/download/2.2.7/com.Saplin.CPDT.apk\" \n            target=\"_blank\">\n                <img src={apk}/>\n                <br/>.APK\n            </a>\n            <a href=\"https://github.com/maxim-saplin/CrossPlatformDiskTest\" \n            target=\"_blank\">\n                <img src={github}/>\n                <br/>GitHub\n            </a>\n            <a href=\"https://github.com/maxim-saplin/NetCoreStorageSpeedTest/blob/master/README.md\" \n            style={{opacity: 0.65}}\n            target=\"_blank\">\n                <img src={linux}/>\n                <br/>Linux\n            </a>\n        </>\n    )\n}","import React from 'react';\nimport PressableLink from './PressableLink';\nimport DownloadLinks from './DownloadLinks';\n\nexport default function About(props){\n    return (\n        <>\n            {props.inApp && <br/>}\n            <PressableLink className={props.linkClass} onClick={props.toggleAbout}>[B]ack to Chart</PressableLink>\n            <br/>\n            {!props.inApp &&\n            <div class=\"downloadBox\">\n                <h1>Download CPDT Benchmark</h1>\n                <br/>\n                <DownloadLinks />    \n            </div>}\n\n            {!props.download &&\n            <> \n            <h1>How are the Chart Results Obtained</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                <em>Cross Platform Disk Test (CPDT)</em> application is used to measure storage performance. \n                {!props.inApp && <> See download links above.</>}\n                </p>\n                <p>\n                At least 3 test runs are done, \n                for each of the 5 perfromance metrics the best one is selected. I.e. the set of 5 metrics associated with a certain device \n                are the greatest of all the average thoughput values obtained through testing.\n                </p>\n                <p>\n                The tests are executed with the following options: file size is 1GB, write buffering is off, \n                in-memory cache is off. For very fast devices (sequential speeds above 1GB/s)\n                file size is increased to 2GB.\n                </p>\n                <p>\n                To avoid intereferences and side effects all running apps are closed, network activity is disabled (e.g. updates, downloads).\n                Since lack of free disk space affects performance (very noticable on mobile devices)\n                testting is conducted at at least 70% of available space on the drive.\n                </p>\n                <p>\n                In the test results you can find same device tested under different conditions\n                (e.g. encryption on/off, different file systems, different free space etc.)\n                which in such a case is noted under the device name.\n                </p>\n            </div>\n            <br/>\n            </>}\n            <h1>How does the App Work</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                This application uses standard OS's file API (WinAPI on Windows, POSIX on Mac and NDK on Android) to measure the speed of data transfer (in Megabytes per Second) between storage device (HDD, SSD, USB flash drive) and system memory(RAM). API calls are done through .NET Framework/Mono.\n                </p>\n                <img id=\"aboutEn\"/>\n                <p>\n                Operations on computers and smartphones are executed by processor (CPU) against data which is loaded in system memory (RAM). This memory is not permanent and limited in size, that's why theres always a permanent storage (SSD, HDD, SD Card - aka \"disk/drive\"). In many cases the performance of the system is determined not only by CPU (which are usually in the spotlight of advertising and target of numerous benchmarks) but by the performance of memory, specifically RAM and storage. Official specs (especially with smartphones) give little description of storage characteristics, beyond capacity. This application attempts to give clear performance characteristics of memory by  isolating and measuring 3 aspects: the speed of reads (transfers from DRIVE-to-RAM). writes (RAM-to-DRIVE) and system memory (copying data from one area in RAM to another).\n                </p>\n                <p>\n                Sequential read and sequential write tests transfer large chunks of data (megabytes) between RAM and Storage. These tests are representative of such disk operations as large file copying, video recording/encoding/decoding etc.\n                </p>\n                <p>\n                Random tests run for 7 seconds each and do transfers in small chunks (4KB and 32KB) at random positions within the test file. These tests show how file system performance influence applications' load times, copying multiple small files, running database queries etc.\n                </p>\n                <p>\n                Write buffering - influences write test. Write operations use intermediary memory buffer and postpone data commit to latter more convenient time for better performance at a cost of less resilient writes (e.g. power failure and not committing to disk write buffer contents).\n                </p>\n                <p>\n                In-memory file cache - influences read tests. Any file operation requires from OS either transferring file data to memory or memory data to disk, OS will keep those memory pages in RAM until there's pressure for RAM from other apps. In case OS receives subsequent file read/write requests through API it will simply copy the cached memory pages from previous file operations and not utilize the actual storage device. Turning this option on is essential a test of OS's file caching subsystem and RAM speed, rather than storage device test.\n                </p>\n            </div>\n        </>\n    )\n}","import React from 'react';\nimport PressableLink from './PressableLink';\nimport DownloadLinks from './DownloadLinks';\n\nexport default function About(props){\n    return (\n        <>\n            {props.inApp && <br/>}\n            <PressableLink className={props.linkClass} onClick={props.toggleAbout}>[B] Назад к списку</PressableLink>\n            <br/>\n            {!props.inApp &&\n            <div class=\"downloadBox\">\n                <h1>Скачать CPDT Бенчмарк</h1>\n                <br/>\n                <DownloadLinks />    \n            </div>}\n\n            {!props.download &&\n            <> \n            <h1>Как получены результаты для списка</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                Для измерения производительности используется приложение <em>Cross Platform Disk Test (CPDT)</em>\n                {!props.inApp && <>, скачать кооторое можно по ссылкам выше</>}.\n                </p>\n                <p>\n                Выполняется по меньшей мере 3 тестовых прогона, \n                для каждого из 5-ти показателей выбирается наилучший результат. Т.о. представленная для каждого устройства\n                пятерка результатов - это наилучшие из полученных значений средней пропускной способности.\n                </p>\n                <p>\n                Тесты выполняются со следующими настройками: размер файла 1Гб, буферизация записи выключена, \n                кеширование в памяти выключено. Для устройств с быстрыми дисками (последовательные скорости более 1Гб/с)\n                размер файла увеличивается до 2Гб.\n                </p>\n                <p>\n                Для исключения влияния на результаты сторонней активности выгружаются все приложения, отключается сетевая\n                активность (обновления, загрузки). Объем свободного пространства существенно влияет на скрость устройств \n                (данный эффект особо заметен на мобильных устройствах), тестирование проводится при не менее чем 70% свободного\n                места на диске.\n                </p>\n                <p>\n                Также в результатах можно найти измерения одного и того-же устройства в разных условиях (включено/выключено шифрование,\n                различные файловые системы, разное количество свободного места), о чем отдельно указано в примечании под названием\n                устройстваю.\n                </p>\n            </div>\n            <br/>\n            </>}\n            \n            <h1>Как работает приложение</h1>\n            <br/>\n            <div className=\"text\">\n                <p>\n                Приложение использует  стандартный API операционной системы (WinAPI для Windows, POSIX на Mac и NDK на Android) для измерения скорости передачи данных (мегабайты/гигабайты в секунду) между устройством хранения (HDD, SSD, флешка) и системной памятью (ОЗУ). Вызовы к API операционных системы реализованы через .NET Framework/Mono.\n                </p>\n                <img id=\"aboutRu\"/>\n                <p>\n                В компьютерах и смартфонах центральный процессор выполняет операции только над данными, которые загружены в оперативную память (ОЗУ). Данная память не постоянная и ограничена в размере, потому в системе всегда присутствует постоянное хранилище (SSD, жесткий диск, SD карта - для простоты \"диск\"). Во многих случаях производительность системы определяется не только процессором (который зачастую находится в центре внимания в рекламе и бенчмарках) но и производительностью памяти, в частности ОЗУ и диска. Официальные спецификации (особенно это актуально для смартфонов) дают мало информации о характеристиках памяти, кроме разве что объемов. Данное приложение пытается дать четкие характеристики производительности памяти посредством выделения и оценки трех аспектов: скорости чтения (передача данных с диска в ОЗУ), записи (ОЗУ-диск) и непосредственно скорости ОЗУ (копирование блоков внутри ОЗУ).\n                </p>\n                <p>\n                Тесты последовательной записи и чтения измеряют скорость операций, при которых большие блоки (мегабайты) данных передаются последовательно. Данные тесты соответствуют таким операциям, как копирование больших файлов, кодирование/декодирование видео и т.д.    \n                </p>\n                <p>\n                Тесты с произвольным доступом выполняются на протяжении нескольких десятков секунд и передают небольшие блоки данных (4КБ) в случайных позициях файла. Данные тесты показывают производительность файловой системы в таких задачах, как время загрузки приложений и ОС, копирование большого количества маленьких файлов, выполнение запросов баз данных и т.п.\n                </p>\n                <p>\n                Буферизация записи - влияет на тесты записи. При записи ОС может использовать промежуточный буфер в памяти и откладывать фактическую запись до поздних более удобных моментов (например когда соберется некоторое количество данных и можно за раз сохранить большую порцию данных). Данный режим увеличивает производительность записи за счет меньшей надежности (например, при отключении питания часть данных может быть потеряна).\n                </p>\n                <p>\n                Файловый кэш в памяти - влияет на тесты чтения. При любых файловых операциях ОС либо переносит данные с диска в память (чтение), либо из памяти на диск (запись). При этом данные будут оставлены в памяти до тех пор, пока она не потребуется другим приложениям. При получении запроса на чтение из файла, ОС проверит, считывались ли данные из файл ранее и содержится ли они уже в памяти. При наличии закэшированных данных в памяти ОС не будет обращаться к файлу и сделает копирование из памяти (которое существенно быстрее доступа к диску). Включение данной опции по сути тестирует не устройство хранение, а механизм кеширования и ОЗУ.\n                </p>\n            </div>\n        </>\n    )\n}","import React, { Component } from 'react'\nimport ReactSwipeEvents from 'react-swipe-events'\nimport l18n from './translations'\nimport PressableLink from './PressableLink'\nimport ListSelector from './ListSelector'\nimport Search from './Search'\nimport TestResults from './TestResults'\nimport Hint from './Hint'\nimport AboutEn from './AboutEn'\nimport AboutRu from './AboutRu'\nimport db from './data'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.platformClick = this.platformClick.bind(this);\n    this.testClick = this.testClick.bind(this);\n    this.searchChanged = this.searchChanged.bind(this);\n    this.resultSelected = this.resultSelected.bind(this);\n    this.selectedIdRemoved = this.selectedIdRemoved.bind(this);\n    this.toggleAbout = this.toggleAbout.bind(this);\n    this.swipe = this.swipe.bind(this);\n    this.wpf = \"wpf\";\n    this.android = \"android\";\n    this.macos = \"macos\";\n\n    this.urlParams = new URLSearchParams(window.location.search ? window.location.search : \"\");\n    \n    this.selectedIdsParam = \"selected\";\n    this.aboutParam = \"about\";\n    this.showDownloadParam = \"download\";\n    this.qParam = \"q\";\n    this.inappParam = \"inapp\";\n\n    let selectedResultIds = this.getSelectedIdsFromParam()\n    let inAppPlatform = this.urlParams.get(this.inappParam) ? this.urlParams.get(this.inappParam).toLocaleLowerCase() : null;\n    let selectedPlatforms = db.dictionaries.getPlatforms().map(p => p.key);\n    let q = this.urlParams.get(this.qParam) ? this.urlParams.get(this.qParam).toLocaleLowerCase() : null;\n\n    ({ selectedPlatforms, selectedResultIds } = this.inAppAdjustments(inAppPlatform, selectedPlatforms, selectedResultIds));\n\n    this.state = {\n      selectedTest: db.dictionaries.getTests()[0].key,\n      selectedResultIds: selectedResultIds,\n      inAppPlatform: inAppPlatform,\n      selectedPlatforms: selectedPlatforms,\n      device: q,\n      showAbout: this.urlParams.has(this.aboutParam),\n      showDownload: this.urlParams.has(this.showDownloadParam)\n    };\n\n    this.title = this.urlParams.get(\"ttl\") ? decodeURIComponent(this.urlParams.get(\"ttl\")) : null;\n\n    this.renderCounter = 0;\n  }\n\n  inAppAdjustments(inAppPlatform, selectedPlatforms, selectedResultIds) {\n    if (inAppPlatform) {\n      if (inAppPlatform === this.wpf) selectedPlatforms = [db.dictionaries.Windows];\n      else if (inAppPlatform === this.android) selectedPlatforms = [db.dictionaries.Android];\n      else if (inAppPlatform === this.macos) selectedPlatforms = [db.dictionaries.macOS];\n      let yourDevice = this.urlParams.get(\"yd\");\n      if (yourDevice) {\n        let yd = null;\n        try {\n          yd = JSON.parse(yourDevice);\n          if (yd) {\n            yd.platform = selectedPlatforms[0];\n            db.results.addYourDeviceResult(yd);\n          }\n          selectedResultIds = [db.results.yourDeviceId];\n        }\n        catch { }\n      }\n    }\n    return { selectedPlatforms, selectedResultIds };\n  }\n\n  getSelectedIdsFromParam(){\n    let param = this.urlParams.get(this.selectedIdsParam);\n    let ids = [];\n\n    if (param) {\n      let split = param.split(\",\");\n      \n      for (let i = 0; i < split.length; i++){\n        let id = parseInt(split[i]);\n        if (Number.isInteger(id) && db.results.idExists(id) && !ids.includes(id)){\n          ids.push(id);\n        }\n      }\n    }\n\n    return ids;\n  }\n\n  addSelectedIdsToParam(ids){\n    if (ids.length > 0){ \n      let param = \"\";\n\n      for (let i = 0; i < ids.length; i++) {\n        param += ids[i];\n        if (i !== ids.length-1) param+=\",\";\n      }\n\n      this.urlParams.set(this.selectedIdsParam, param);\n    }\n    else {\n      this.urlParams.delete(this.selectedIdsParam);\n    }\n    window.history.replaceState({},null,\"?\"+this.urlParams.toString());\n  }\n\n  testClick(key){\n    this.setState({selectedTest: key, swipeHint: true});\n  }\n\n  swipe(left){\n    let t = db.dictionaries.getTests();\n    let i = 0;\n\n    for (i; i < t.length; i++){\n      if (t[i].key === this.state.selectedTest) break;\n    }\n\n    if (left) i++; else i--;\n\n    if (i < 0) i = t.length-1;\n    else if (i >= t.length) i = 0;\n    \n    this.setState({selectedTest: t[i].key, swipeHint: true});\n  }\n\n  platformClick(key){\n    this.setState({selectedPlatforms: key});\n  }\n\n  searchChanged(val){\n    this.setState({device: val});\n  }\n\n  resultSelected(resultId, clearDevice){\n    let selectedResultIds = this.state.selectedResultIds;\n    selectedResultIds.push(resultId);\n    if (clearDevice) {\n      this.setState({device: \"\"});\n    }\n    this.setSelectedIds(selectedResultIds);\n  }\n\n  setSelectedIds(selectedResultIds) {\n    this.setState({ selectedResultIds: selectedResultIds });\n    this.addSelectedIdsToParam(selectedResultIds);\n  }\n\n  selectedIdRemoved(id){\n    let selectedResultIds = this.state.selectedResultIds;\n    selectedResultIds = selectedResultIds.filter(i => i !== id);\n    this.setSelectedIds(selectedResultIds);\n  }\n\n  setTitle(title){\n    document.title = title;\n  }\n\n  toggleAbout(){\n    let showAbout = !(this.state.showAbout || this.state.showDownload);\n\n    this.setState({showAbout: showAbout, showDownload: false});\n\n    if (showAbout) this.urlParams.set(this.aboutParam, \"\");\n    else {\n      this.urlParams.delete(this.aboutParam);\n      this.urlParams.delete(this.showDownloadParam);\n    }\n\n    window.history.replaceState({},null,\"?\"+this.urlParams.toString());\n  }\n\n  render() {\n    let stl = this.setTitle;\n\n    if (this.title){ // TestResults can change title, upon first load override title with the value from parm\n      stl(this.title);\n      this.title = null;\n      stl = null;\n    }\n    else {\n      if (this.state.showAbout) this.setTitle(l18n.aboutTitle);\n      else if (this.state.showDownload) this.setTitle(l18n.downloadTitle);\n      else this.setTitle(l18n.title);\n    }\n\n    this.renderCounter++;\n\n    let helpLinkClass = \"leftCorner\";\n    if (this.state.inAppPlatform) helpLinkClass +=\" inapp\";\n    if (this.renderCounter < 2 ) helpLinkClass +=\" textColorVibration\";\n\n    return (\n      !this.state.showAbout && !this.state.showDownload ?\n      <ReactSwipeEvents id=\"swipe\" onSwipedLeft={() => this.swipe(true)} onSwipedRight={() => this.swipe(false)} threshold=\"75\">\n        <div className={this.state.inAppPlatform !== this.wpf ? \"pad\" : null}>\n          {!this.state.inAppPlatform && <h1>{l18n.title}: </h1>}\n          {!this.state.inAppPlatform && <h2>{l18n.subTitle}</h2>}\n          <PressableLink className={helpLinkClass} onClick={this.toggleAbout}>[?]</PressableLink>\n          \n          <ListSelector itemClick={this.platformClick} selectedKey={this.state.selectedPlatforms} \n            items={db.dictionaries.getPlatforms()} selectAll={true} />\n          <ListSelector itemClick={this.testClick} selectedKey={this.state.selectedTest} \n            items={db.dictionaries.getTests()} />\n          <Search searchChanged={this.searchChanged} enterPressed={this.resultSelected} value={this.state.device}/>\n          <br/>\n          <TestResults \n            selectedTest={this.state.selectedTest}\n            selectedPlatforms={this.state.selectedPlatforms}\n            selectedResultIds={this.state.selectedResultIds}\n            selectedIdRemoved={this.selectedIdRemoved}\n            resultSelected={this.resultSelected}\n            device={this.state.device}\n            setTitle={stl}\n          />        \n        </div>\n        {'ontouchstart' in window && this.state.swipeHint && <Hint>{l18n.hintSwipe}</Hint>}\n      </ReactSwipeEvents>\n      : l18n.locale === l18n.ruLocale \n        ? <AboutRu toggleAbout={this.toggleAbout} linkClass={helpLinkClass} inApp={this.state.inAppPlatform != null} download={this.state.showDownload}/> \n        : <AboutEn toggleAbout={this.toggleAbout} linkClass={helpLinkClass} inApp={this.state.inAppPlatform != null} download={this.state.showDownload}/>);\n  }\n}\n\nexport default App;","import 'babel-polyfill';\nimport 'url-search-params-polyfill';\nimport 'whatwg-fetch'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './index_dark.css';\nimport App from './App';\nimport l18n from './translations';\nimport db from './data';\n\nlet benchmark = false;\nlet testDb = false;\nlet themeParam = null;\n\ninitParams(); \nstart();\n\nfunction start(){\n  l18n.init();\n  document.title = l18n.pageTitle;\n  if (themeParam !== \"white\") document.body.className=\"dark\";\n\n  db.init(testDb).then(() => {\n    ReactDOM.render(<App />, document.getElementById('root'));\n    if (benchmark){\n      document.title = \"Running benchmark...\";\n      runBenchmark();\n    }\n  });\n}\n\nfunction initParams(){\n  const urlParams = new URLSearchParams(window.location.search);\n  themeParam = urlParams.get(\"theme\");\n  if (urlParams.get(\"benchmark\") === \"true\") { benchmark = true; testDb = true; }\n  else if (urlParams.get(\"testdb\") === \"true\") testDb = true\n}\n\nfunction runBenchmark(){\n  let t1 = performance.now();\n  const repeats = 5;\n  for (var i = 0; i < repeats; i++){\n    ReactDOM.render(<span>Swap</span>, document.getElementById('root'))\n    ReactDOM.render(<App />, document.getElementById('root'))\n  }\n  let t2 = performance.now();\n\n  let result = \"Rendering page took on average: \" + ((t2-t1)/repeats).toFixed(2) + \"ms\";\n  document.title = \"Becnchmark completed. \" + result;\n  alert(result);\n}"],"sourceRoot":""}